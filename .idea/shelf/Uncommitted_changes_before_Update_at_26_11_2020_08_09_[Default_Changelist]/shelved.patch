Index: vendor/doctrine/dbal/ci/github/phpunit/sqlsrv.xml
===================================================================
--- vendor/doctrine/dbal/ci/github/phpunit/sqlsrv.xml	(revision a449d8a584af7c2722ad0d48f553c0917ddead6e)
+++ vendor/doctrine/dbal/ci/github/phpunit/sqlsrv.xml	(revision a449d8a584af7c2722ad0d48f553c0917ddead6e)
@@ -1,29 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<phpunit xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
-         xsi:noNamespaceSchemaLocation="../../vendor/phpunit/phpunit/phpunit.xsd"
-         colors="true"
-         beStrictAboutOutputDuringTests="true"
-         beStrictAboutTodoAnnotatedTests="true"
-         failOnRisky="true"
-         failOnWarning="true"
->
-    <php>
-        <var name="db_driver" value="sqlsrv"/>
-        <var name="db_host" value="127.0.0.1" />
-        <var name="db_user" value="sa" />
-        <var name="db_password" value="Doctrine2018" />
-        <var name="db_dbname" value="doctrine" />
-    </php>
-
-    <testsuites>
-        <testsuite name="Doctrine DBAL Test Suite">
-            <directory>../../../tests</directory>
-        </testsuite>
-    </testsuites>
-
-    <coverage>
-        <include>
-            <directory suffix=".php">../../../lib/Doctrine</directory>
-        </include>
-    </coverage>
-</phpunit>
Index: vendor/doctrine/dbal/ci/github/phpunit/pdo_oci.xml
===================================================================
--- vendor/doctrine/dbal/ci/github/phpunit/pdo_oci.xml	(revision a449d8a584af7c2722ad0d48f553c0917ddead6e)
+++ vendor/doctrine/dbal/ci/github/phpunit/pdo_oci.xml	(revision a449d8a584af7c2722ad0d48f553c0917ddead6e)
@@ -1,36 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<phpunit xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
-         xsi:noNamespaceSchemaLocation="../../vendor/phpunit/phpunit/phpunit.xsd"
-         colors="true"
-         beStrictAboutOutputDuringTests="true"
-         beStrictAboutTodoAnnotatedTests="true"
-         failOnRisky="true"
-         failOnWarning="true"
->
-    <php>
-        <var name="db_driver" value="pdo_oci"/>
-        <var name="db_host" value="localhost"/>
-        <var name="db_user" value="doctrine"/>
-        <var name="db_password" value="oracle"/>
-        <var name="db_dbname" value="XE"/>
-        <var name="db_event_subscribers" value="Doctrine\DBAL\Event\Listeners\OracleSessionInit"/>
-
-        <var name="tmpdb_driver" value="pdo_oci"/>
-        <var name="tmpdb_host" value="localhost"/>
-        <var name="tmpdb_user" value="system"/>
-        <var name="tmpdb_password" value="oracle"/>
-        <var name="tmpdb_dbname" value="XE"/>
-    </php>
-
-    <testsuites>
-        <testsuite name="Doctrine DBAL Test Suite">
-            <directory>../../../tests</directory>
-        </testsuite>
-    </testsuites>
-
-    <coverage>
-        <include>
-            <directory suffix=".php">../../../lib/Doctrine</directory>
-        </include>
-    </coverage>
-</phpunit>
Index: vendor/doctrine/dbal/ci/github/phpunit/pdo_mysql.xml
===================================================================
--- vendor/doctrine/dbal/ci/github/phpunit/pdo_mysql.xml	(revision a449d8a584af7c2722ad0d48f553c0917ddead6e)
+++ vendor/doctrine/dbal/ci/github/phpunit/pdo_mysql.xml	(revision a449d8a584af7c2722ad0d48f553c0917ddead6e)
@@ -1,29 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<phpunit xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
-         xsi:noNamespaceSchemaLocation="../../vendor/phpunit/phpunit/phpunit.xsd"
-         colors="true"
-         beStrictAboutOutputDuringTests="true"
-         beStrictAboutTodoAnnotatedTests="true"
-         failOnRisky="true"
-         failOnWarning="true"
->
-    <php>
-        <var name="db_driver" value="pdo_mysql"/>
-        <var name="db_host" value="127.0.0.1" />
-        <var name="db_port" value="3306"/>
-        <var name="db_user" value="root" />
-        <var name="db_dbname" value="doctrine_tests" />
-    </php>
-
-    <testsuites>
-        <testsuite name="Doctrine DBAL Test Suite">
-            <directory>../../../tests</directory>
-        </testsuite>
-    </testsuites>
-
-    <coverage>
-        <include>
-            <directory suffix=".php">../../../lib/Doctrine</directory>
-        </include>
-    </coverage>
-</phpunit>
Index: vendor/doctrine/dbal/ci/github/phpunit/oci8.xml
===================================================================
--- vendor/doctrine/dbal/ci/github/phpunit/oci8.xml	(revision a449d8a584af7c2722ad0d48f553c0917ddead6e)
+++ vendor/doctrine/dbal/ci/github/phpunit/oci8.xml	(revision a449d8a584af7c2722ad0d48f553c0917ddead6e)
@@ -1,36 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<phpunit xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
-         xsi:noNamespaceSchemaLocation="../../vendor/phpunit/phpunit/phpunit.xsd"
-         colors="true"
-         beStrictAboutOutputDuringTests="true"
-         beStrictAboutTodoAnnotatedTests="true"
-         failOnRisky="true"
-         failOnWarning="true"
->
-    <php>
-        <var name="db_driver" value="oci8"/>
-        <var name="db_host" value="localhost"/>
-        <var name="db_user" value="doctrine"/>
-        <var name="db_password" value="oracle"/>
-        <var name="db_dbname" value="XE"/>
-        <var name="db_event_subscribers" value="Doctrine\DBAL\Event\Listeners\OracleSessionInit"/>
-
-        <var name="tmpdb_driver" value="oci8"/>
-        <var name="tmpdb_host" value="localhost"/>
-        <var name="tmpdb_user" value="system"/>
-        <var name="tmpdb_password" value="oracle"/>
-        <var name="tmpdb_dbname" value="XE"/>
-    </php>
-
-    <testsuites>
-        <testsuite name="Doctrine DBAL Test Suite">
-            <directory>../../../tests</directory>
-        </testsuite>
-    </testsuites>
-
-    <coverage>
-        <include>
-            <directory suffix=".php">../../../lib/Doctrine</directory>
-        </include>
-    </coverage>
-</phpunit>
Index: vendor/doctrine/dbal/ci/github/phpunit/pdo_sqlsrv.xml
===================================================================
--- vendor/doctrine/dbal/ci/github/phpunit/pdo_sqlsrv.xml	(revision a449d8a584af7c2722ad0d48f553c0917ddead6e)
+++ vendor/doctrine/dbal/ci/github/phpunit/pdo_sqlsrv.xml	(revision a449d8a584af7c2722ad0d48f553c0917ddead6e)
@@ -1,29 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<phpunit xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
-         xsi:noNamespaceSchemaLocation="../../vendor/phpunit/phpunit/phpunit.xsd"
-         colors="true"
-         beStrictAboutOutputDuringTests="true"
-         beStrictAboutTodoAnnotatedTests="true"
-         failOnRisky="true"
-         failOnWarning="true"
->
-    <php>
-        <var name="db_driver" value="pdo_sqlsrv"/>
-        <var name="db_host" value="127.0.0.1" />
-        <var name="db_user" value="sa" />
-        <var name="db_password" value="Doctrine2018" />
-        <var name="db_dbname" value="doctrine" />
-    </php>
-
-    <testsuites>
-        <testsuite name="Doctrine DBAL Test Suite">
-            <directory>../../../tests</directory>
-        </testsuite>
-    </testsuites>
-
-    <coverage>
-        <include>
-            <directory suffix=".php">../../../lib/Doctrine</directory>
-        </include>
-    </coverage>
-</phpunit>
Index: vendor/doctrine/dbal/ci/github/phpunit/mysqli-tls.xml
===================================================================
--- vendor/doctrine/dbal/ci/github/phpunit/mysqli-tls.xml	(revision a449d8a584af7c2722ad0d48f553c0917ddead6e)
+++ vendor/doctrine/dbal/ci/github/phpunit/mysqli-tls.xml	(revision a449d8a584af7c2722ad0d48f553c0917ddead6e)
@@ -1,37 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<phpunit xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
-         xsi:noNamespaceSchemaLocation="../../vendor/phpunit/phpunit/phpunit.xsd"
-         colors="true"
-         beStrictAboutOutputDuringTests="true"
-         beStrictAboutTodoAnnotatedTests="true"
-         failOnRisky="true"
-         failOnWarning="true"
->
-    <php>
-        <var name="db_driver" value="mysqli"/>
-        <var name="db_host" value="127.0.0.1"/>
-        <var name="db_port" value="3306"/>
-        <var name="db_ssl_ca" value="ca.pem"/>
-        <var name="db_ssl_cert" value="client-cert.pem"/>
-        <var name="db_ssl_key" value="client-key.pem"/>
-
-        <!-- Use MYSQLI_CLIENT_SSL_DONT_VERIFY_SERVER_CERT since there's no way to generate a certificate
-        with a proper common name (CN) on Travis. This flag must be not used in production settings. -->
-        <var name="db_driver_option_flags" value="64"/>
-
-        <var name="db_user" value="root"/>
-        <var name="db_dbname" value="doctrine_tests"/>
-    </php>
-
-    <testsuites>
-        <testsuite name="Doctrine DBAL Test Suite">
-            <directory>../../../tests</directory>
-        </testsuite>
-    </testsuites>
-
-    <coverage>
-        <include>
-            <directory suffix=".php">../../../lib/Doctrine</directory>
-        </include>
-    </coverage>
-</phpunit>
Index: vendor/doctrine/dbal/ci/github/ext/install-ibm_db2.sh
===================================================================
--- vendor/doctrine/dbal/ci/github/ext/install-ibm_db2.sh	(revision a449d8a584af7c2722ad0d48f553c0917ddead6e)
+++ vendor/doctrine/dbal/ci/github/ext/install-ibm_db2.sh	(revision a449d8a584af7c2722ad0d48f553c0917ddead6e)
@@ -1,26 +0,0 @@
-#!/usr/bin/env bash
-
-set -ex
-
-echo "Installing extension"
-(
-    # updating APT packages as per support recommendation
-    sudo apt-get -y -q update
-    sudo apt-get install ksh php-pear
-
-    cd /tmp
-
-    wget http://cdn1.netmake.com.br/download/Conexao/DB2/Linux/x64_v10.5fp8_linuxx64_dsdriver.tar.gz
-
-    tar xf x64_v10.5fp8_linuxx64_dsdriver.tar.gz
-    ksh dsdriver/installDSDriver
-
-    pecl download ibm_db2
-    tar xf ibm_db2-*
-    rm ibm_db2-*.tgz
-    cd ibm_db2-*
-    phpize
-    ./configure --with-IBM_DB2=/tmp/dsdriver
-    make -j "$(nproc)"
-    sudo make install
-)
Index: vendor/doctrine/dbal/ci/github/phpunit/ibm_db2.xml
===================================================================
--- vendor/doctrine/dbal/ci/github/phpunit/ibm_db2.xml	(revision a449d8a584af7c2722ad0d48f553c0917ddead6e)
+++ vendor/doctrine/dbal/ci/github/phpunit/ibm_db2.xml	(revision a449d8a584af7c2722ad0d48f553c0917ddead6e)
@@ -1,29 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<phpunit xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
-         xsi:noNamespaceSchemaLocation="../../vendor/phpunit/phpunit/phpunit.xsd"
-         colors="true"
-         beStrictAboutOutputDuringTests="true"
-         beStrictAboutTodoAnnotatedTests="true"
-         failOnRisky="true"
-         failOnWarning="true"
->
-    <php>
-        <var name="db_driver" value="ibm_db2"/>
-        <var name="db_host" value="127.0.0.1"/>
-        <var name="db_user" value="db2inst1"/>
-        <var name="db_password" value="Doctrine2018"/>
-        <var name="db_dbname" value="doctrine"/>
-    </php>
-
-    <testsuites>
-        <testsuite name="Doctrine DBAL Test Suite">
-            <directory>../../../tests</directory>
-        </testsuite>
-    </testsuites>
-
-    <coverage>
-        <include>
-            <directory suffix=".php">../../../lib/Doctrine</directory>
-        </include>
-    </coverage>
-</phpunit>
Index: vendor/doctrine/dbal/ci/github/phpunit/pdo_pgsql.xml
===================================================================
--- vendor/doctrine/dbal/ci/github/phpunit/pdo_pgsql.xml	(revision a449d8a584af7c2722ad0d48f553c0917ddead6e)
+++ vendor/doctrine/dbal/ci/github/phpunit/pdo_pgsql.xml	(revision a449d8a584af7c2722ad0d48f553c0917ddead6e)
@@ -1,29 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<phpunit xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
-         xsi:noNamespaceSchemaLocation="../../vendor/phpunit/phpunit/phpunit.xsd"
-         colors="true"
-         beStrictAboutOutputDuringTests="true"
-         beStrictAboutTodoAnnotatedTests="true"
-         failOnRisky="true"
-         failOnWarning="true"
->
-    <php>
-        <var name="db_driver" value="pdo_pgsql"/>
-        <var name="db_host" value="localhost" />
-        <var name="db_user" value="postgres" />
-        <var name="db_password" value="postgres" />
-        <var name="db_dbname" value="doctrine_tests" />
-    </php>
-
-    <testsuites>
-        <testsuite name="Doctrine DBAL Test Suite">
-            <directory>../../../tests</directory>
-        </testsuite>
-    </testsuites>
-
-    <coverage>
-        <include>
-            <directory suffix=".php">../../../lib/Doctrine</directory>
-        </include>
-    </coverage>
-</phpunit>
Index: vendor/doctrine/dbal/ci/github/phpunit/sqlite.xml
===================================================================
--- vendor/doctrine/dbal/ci/github/phpunit/sqlite.xml	(revision a449d8a584af7c2722ad0d48f553c0917ddead6e)
+++ vendor/doctrine/dbal/ci/github/phpunit/sqlite.xml	(revision a449d8a584af7c2722ad0d48f553c0917ddead6e)
@@ -1,21 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<phpunit xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
-         xsi:noNamespaceSchemaLocation="../../vendor/phpunit/phpunit/phpunit.xsd"
-         colors="true"
-         beStrictAboutOutputDuringTests="true"
-         beStrictAboutTodoAnnotatedTests="true"
-         failOnRisky="true"
-         failOnWarning="true"
->
-    <testsuites>
-        <testsuite name="Doctrine DBAL Test Suite">
-            <directory>../../../tests</directory>
-        </testsuite>
-    </testsuites>
-
-    <coverage>
-        <include>
-            <directory suffix=".php">../../../lib/Doctrine</directory>
-        </include>
-    </coverage>
-</phpunit>
Index: vendor/doctrine/dbal/ci/github/phpunit/mysqli.xml
===================================================================
--- vendor/doctrine/dbal/ci/github/phpunit/mysqli.xml	(revision a449d8a584af7c2722ad0d48f553c0917ddead6e)
+++ vendor/doctrine/dbal/ci/github/phpunit/mysqli.xml	(revision a449d8a584af7c2722ad0d48f553c0917ddead6e)
@@ -1,29 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<phpunit xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
-         xsi:noNamespaceSchemaLocation="../../vendor/phpunit/phpunit/phpunit.xsd"
-         colors="true"
-         beStrictAboutOutputDuringTests="true"
-         beStrictAboutTodoAnnotatedTests="true"
-         failOnRisky="true"
-         failOnWarning="true"
->
-    <php>
-        <var name="db_driver" value="mysqli"/>
-        <var name="db_host" value="127.0.0.1" />
-        <var name="db_port" value="3306"/>
-        <var name="db_user" value="root" />
-        <var name="db_dbname" value="doctrine_tests" />
-    </php>
-
-    <testsuites>
-        <testsuite name="Doctrine DBAL Test Suite">
-            <directory>../../../tests</directory>
-        </testsuite>
-    </testsuites>
-
-    <coverage>
-        <include>
-            <directory suffix=".php">../../../lib/Doctrine</directory>
-        </include>
-    </coverage>
-</phpunit>
Index: vendor/knpuniversity/oauth2-client-bundle/tests/DependencyInjection/KnpUOAuth2ClientExtensionTest.php
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?php\n\n/*\n * OAuth2 Client Bundle\n * Copyright (c) KnpUniversity <http://knpuniversity.com/>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nnamespace KnpU\\OAuth2ClientBundle\\tests\\DependencyInjection;\n\nuse KnpU\\OAuth2ClientBundle\\DependencyInjection\\KnpUOAuth2ClientExtension;\nuse KnpU\\OAuth2ClientBundle\\DependencyInjection\\Providers\\ProviderConfiguratorInterface;\nuse Symfony\\Component\\Config\\Definition\\ArrayNode;\nuse Symfony\\Component\\Config\\Definition\\BooleanNode;\nuse Symfony\\Component\\Config\\Definition\\Builder\\TreeBuilder;\nuse Symfony\\Component\\Config\\Definition\\Exception\\InvalidConfigurationException;\nuse Symfony\\Component\\Config\\Definition\\IntegerNode;\nuse Symfony\\Component\\Config\\Definition\\NodeInterface;\nuse Symfony\\Component\\DependencyInjection\\ContainerBuilder;\nuse Symfony\\Component\\DependencyInjection\\Reference;\nuse PHPUnit\\Framework\\TestCase;\n\nclass KnpUOAuth2ClientExtensionTest extends TestCase\n{\n    /** @var ContainerBuilder */\n    protected $configuration;\n\n    public function testNoClientMakesNoServices()\n    {\n        $this->configuration = new ContainerBuilder();\n        $loader = new KnpUOAuth2ClientExtension();\n        $config = [];\n        $loader->load([$config], $this->configuration);\n\n        $this->assertFalse($this->configuration->hasDefinition('knpu.oauth2.facebook_client'));\n    }\n\n    public function testFacebookProviderMakesService()\n    {\n        $this->configuration = new ContainerBuilder();\n        $loader = new KnpUOAuth2ClientExtension(false);\n        $config = ['clients' => ['facebook' => [\n            'type' => 'facebook',\n            'client_id' => 'CLIENT_ID',\n            'client_secret' => 'SECRET',\n            'graph_api_version' => 'API_VERSION',\n            'redirect_route' => 'the_route_name',\n            'redirect_params' => ['route_params' => 'foo'],\n        ]]];\n        $loader->load([$config], $this->configuration);\n\n        $providerDefinition = $this->configuration->getDefinition('knpu.oauth2.provider.facebook');\n\n        $factory = $providerDefinition->getFactory();\n        // make sure the factory is correct\n        $this->assertEquals(\n            [new Reference('knpu.oauth2.provider_factory'), 'createProvider'],\n            $factory\n        );\n\n        $this->assertEquals(\n            [\n                'League\\OAuth2\\Client\\Provider\\Facebook',\n                ['clientId' => 'CLIENT_ID', 'clientSecret' => 'SECRET', 'graphApiVersion' => 'API_VERSION'],\n                'the_route_name',\n                ['route_params' => 'foo'],\n                [],\n            ],\n            // these arguments will be passed to the factory's method\n            $providerDefinition->getArguments()\n        );\n\n        // the custom class is used\n        $clientDefinition = $this->configuration->getDefinition('knpu.oauth2.client.facebook');\n        $this->assertEquals(\n            'KnpU\\OAuth2ClientBundle\\Client\\Provider\\FacebookClient',\n            $clientDefinition->getClass()\n        );\n        $this->assertEquals(\n            [\n                new Reference('knpu.oauth2.provider.facebook'),\n                new Reference('request_stack'),\n            ],\n            $clientDefinition->getArguments()\n        );\n\n        // the client service has an alias\n        $this->assertTrue(\n            $this->configuration->hasAlias('KnpU\\OAuth2ClientBundle\\Client\\Provider\\FacebookClient'),\n            'FacebookClient service is missing an alias'\n        );\n    }\n\n    /**\n     * @dataProvider getAllProviderConfigurators\n     */\n    public function testProviderConfiguratorsAreFullyImplemented(ProviderConfiguratorInterface $providerConfigurator)\n    {\n        $this->assertRegexp('#^[ \\w]+$#', $providerConfigurator->getProviderDisplayName());\n        if ('Generic' !== $providerConfigurator->getProviderDisplayName()) {\n            $this->assertRegexp('#^[\\w-]+/[\\w-]+$#', $providerConfigurator->getPackagistName());\n            $this->assertNotFalse(filter_var($providerConfigurator->getLibraryHomepage(), FILTER_VALIDATE_URL));\n            $this->assertTrue(class_exists($providerConfigurator->getClientClass([])));\n        }\n    }\n\n    public function getAllProviderConfigurators()\n    {\n        $extension = new KnpUOAuth2ClientExtension();\n        $configurators = [];\n        foreach (KnpUOAuth2ClientExtension::getAllSupportedTypes() as $type) {\n            $configurators[$type] = [$extension->getConfigurator($type)];\n        }\n        return $configurators;\n    }\n\n    /**\n     * @dataProvider provideTypesAndConfig\n     */\n    public function testAllClientsCreateDefinition($type, array $inputConfig)\n    {\n        $this->configuration = new ContainerBuilder();\n        $loader = new KnpUOAuth2ClientExtension(false);\n        $inputConfig['type'] = $type;\n        $config = ['clients' => ['test_service' => $inputConfig]];\n        $loader->load([$config], $this->configuration);\n\n        $this->assertTrue($this->configuration->hasDefinition('knpu.oauth2.provider.test_service'));\n        $this->assertTrue($this->configuration->hasDefinition('knpu.oauth2.client.test_service'));\n    }\n\n    public function provideTypesAndConfig()\n    {\n        $extension = new KnpUOAuth2ClientExtension();\n\n        foreach (KnpUOAuth2ClientExtension::getAllSupportedTypes() as $type) {\n            $configurator = $extension->getConfigurator($type);\n            $tree = new TreeBuilder('testing');\n            $configNode = method_exists($tree, 'getRootNode')\n                ? $tree->getRootNode()\n                : $tree->root('testing');\n            $configurator->buildConfiguration($configNode->children(), $type);\n\n            /** @var ArrayNode $arrayNode */\n            $arrayNode = $tree->buildTree();\n            $config = [\n                'client_id' => 'CLIENT_ID_TEST',\n                'client_secret' => 'CLIENT_SECRET_TEST',\n                'redirect_route' => 'go_there',\n                'redirect_params' => [],\n                'use_state' => rand(0, 1) == 0,\n            ];\n\n            if (!KnpUOAuth2ClientExtension::configuratorNeedsClientSecret($configurator)) {\n                unset($config['client_secret']);\n            }\n\n            // loop through and assign some random values\n            foreach ($arrayNode->getChildren() as $child) {\n                /** @var NodeInterface $child */\n                if ($child instanceof ArrayNode) {\n                    $config[$child->getName()] = [];\n                } elseif ($child instanceof BooleanNode) {\n                    $config[$child->getName()] = (bool) rand(0, 1);\n                } elseif ($child instanceof IntegerNode) {\n                    $config[$child->getName()] = rand();\n                } else {\n                    $config[$child->getName()] = 'random_'.rand();\n                }\n            }\n\n            yield $type => [$type, $config];\n        }\n    }\n\n    public function testGenericProvider()\n    {\n        $clientConfig = [\n            'type' => 'generic',\n            'client_id' => 'abc',\n            'client_secret' => '123',\n            'redirect_route' => 'foo_bar_route',\n            'redirect_params' => [],\n            'provider_class' => 'Foo\\Bar\\Provider',\n            'client_class' => 'Foo\\Bar\\Client',\n            'provider_options' => [\n                'foo' => true,\n                'bar' => 'baz',\n                'cool_stuff' => ['pizza', 'popcorn'],\n            ],\n        ];\n\n        $this->configuration = new ContainerBuilder();\n        $loader = new KnpUOAuth2ClientExtension(false);\n        $config = ['clients' => [\n            'custom_provider' => $clientConfig,\n        ]];\n        $loader->load([$config], $this->configuration);\n\n        $providerDefinition = $this->configuration->getDefinition('knpu.oauth2.provider.custom_provider');\n        $this->assertEquals(\n            'Foo\\Bar\\Provider',\n            $providerDefinition->getClass()\n        );\n\n        $this->assertEquals(\n            [\n                'Foo\\Bar\\Provider',\n                [\n                    'clientId' => 'abc',\n                    'clientSecret' => '123',\n                    'foo' => true,\n                    'bar' => 'baz',\n                    'cool_stuff' => ['pizza', 'popcorn'],\n                ],\n                'foo_bar_route',\n                [],\n                [],\n            ],\n            // these arguments will be passed to the factory's method\n            $providerDefinition->getArguments()\n        );\n\n        // the custom class is used\n        $clientDefinition = $this->configuration->getDefinition('knpu.oauth2.client.custom_provider');\n        $this->assertEquals(\n            'Foo\\Bar\\Client',\n            $clientDefinition->getClass()\n        );\n    }\n\n    /**\n     * @dataProvider provideBadConfiguration\n     */\n    public function testBadClientsConfiguration(array $badClientsConfig)\n    {\n        $this->expectException(InvalidConfigurationException::class);\n        $this->configuration = new ContainerBuilder();\n        $loader = new KnpUOAuth2ClientExtension(false);\n        $config = ['clients' => $badClientsConfig];\n        $loader->load([$config], $this->configuration);\n    }\n\n    public function provideBadConfiguration()\n    {\n        $tests = [];\n\n        $goodConfig = [\n            'type' => 'facebook',\n            'client_id' => 'abc',\n            'client_secret' => '123',\n            'redirect_route' => 'foo_bar_route',\n            'redirect_params' => [],\n        ];\n\n        $badConfig1 = $goodConfig;\n        unset($badConfig1['type']);\n        $tests[] = ['facebook1' => $badConfig1];\n\n        $badConfig2 = $goodConfig;\n        unset($badConfig2['client_id']);\n        $tests[] = ['facebook1' => $badConfig2];\n\n        $badConfig3 = $goodConfig;\n        unset($badConfig3['client_secret']);\n        $tests[] = ['facebook1' => $badConfig3];\n\n        $badConfig4 = $goodConfig;\n        unset($badConfig4['redirect_route']);\n        $tests[] = ['facebook1' => $badConfig4];\n\n        $badConfig5 = $goodConfig;\n        unset($badConfig5['redirect_params']);\n        $tests[] = ['facebook1' => $badConfig5];\n\n        $badConfig6 = $goodConfig;\n        $badConfig6['redirect_params'] = 'NOT AN ARRAY';\n        $tests[] = ['facebook1' => $badConfig6];\n\n        $badConfig7 = $goodConfig;\n        $badConfig7['type'] = 'fake_type';\n        $tests[] = ['facebook1' => $badConfig7];\n\n        return $tests;\n    }\n\n    public function testShouldThrowExceptionIfKnownProviderClassNotInstalled()\n    {\n        $this->configuration = new ContainerBuilder();\n        $loader = new KnpUOAuth2ClientExtension(true);\n        $config = ['clients' => [\n            \"fitbit\" => [\n                'type' => 'fitbit',\n                'client_id' => 'abc',\n                'client_secret' => '123',\n                'redirect_route' => 'foo_bar_route',\n                'redirect_params' => []\n            ]\n        ]];\n\n        try {\n            $loader->load([$config], $this->configuration);\n        } catch (\\Exception $e) {\n            $this->assertEquals('Run `composer require djchen/oauth2-fitbit` in order to use the \"fitbit\" OAuth provider.', $e->getMessage());\n        }\n    }\n\n    public function testShouldThrowSpecificErrorMessageIfProviderMissingForGenericClient()\n    {\n        $this->configuration = new ContainerBuilder();\n        $loader = new KnpUOAuth2ClientExtension(true);\n        $config = ['clients' => [\n            \"custom_provider\" => [\n                'type' => 'generic',\n                'provider_class' => 'Some\\Provider\\That\\Doesnt\\Exist',\n                'client_id' => 'abc',\n                'client_secret' => '123',\n                'redirect_route' => 'foo_bar_route',\n                'redirect_params' => [],\n            ]\n        ]];\n\n        try {\n            $loader->load([$config], $this->configuration);\n        } catch (\\Exception $e) {\n            $this->assertEquals('The provider class `Some\\Provider\\That\\Doesnt\\Exist` must exist in order to use with the \"generic\" OAuth provider.', $e->getMessage());\n        }\n    }\n\n    public function testGetAllSupportedTypes()\n    {\n        $types = KnpUOAuth2ClientExtension::getAllSupportedTypes();\n\n        $this->assertTrue(in_array('facebook', $types, true));\n    }\n\n    public function testGetAlias()\n    {\n        $extension = new KnpUOAuth2ClientExtension();\n        $this->assertEquals('knpu_oauth2_client', $extension->getAlias());\n    }\n\n    protected function tearDown(): void\n    {\n        unset($this->configuration);\n    }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- vendor/knpuniversity/oauth2-client-bundle/tests/DependencyInjection/KnpUOAuth2ClientExtensionTest.php	(revision a449d8a584af7c2722ad0d48f553c0917ddead6e)
+++ vendor/knpuniversity/oauth2-client-bundle/tests/DependencyInjection/KnpUOAuth2ClientExtensionTest.php	(date 1606313006000)
@@ -98,9 +98,9 @@
      */
     public function testProviderConfiguratorsAreFullyImplemented(ProviderConfiguratorInterface $providerConfigurator)
     {
-        $this->assertRegexp('#^[ \w]+$#', $providerConfigurator->getProviderDisplayName());
+        $this->assertMatchesRegularExpression('#^[ \w]+$#', $providerConfigurator->getProviderDisplayName());
         if ('Generic' !== $providerConfigurator->getProviderDisplayName()) {
-            $this->assertRegexp('#^[\w-]+/[\w-]+$#', $providerConfigurator->getPackagistName());
+            $this->assertMatchesRegularExpression('#^[\w-]+/[\w-]+$#', $providerConfigurator->getPackagistName());
             $this->assertNotFalse(filter_var($providerConfigurator->getLibraryHomepage(), FILTER_VALIDATE_URL));
             $this->assertTrue(class_exists($providerConfigurator->getClientClass([])));
         }
Index: vendor/laminas/laminas-code/src/Scanner/ClassScanner.php
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?php\n\n/**\n * @see       https://github.com/laminas/laminas-code for the canonical source repository\n * @copyright https://github.com/laminas/laminas-code/blob/master/COPYRIGHT.md\n * @license   https://github.com/laminas/laminas-code/blob/master/LICENSE.md New BSD License\n */\n\nnamespace Laminas\\Code\\Scanner;\n\nuse Laminas\\Code\\Annotation;\nuse Laminas\\Code\\Exception;\nuse Laminas\\Code\\NameInformation;\nuse ReflectionClass;\n\nuse function array_key_exists;\nuse function array_merge;\nuse function array_search;\nuse function array_slice;\nuse function array_values;\nuse function define;\nuse function defined;\nuse function explode;\nuse function in_array;\nuse function is_array;\nuse function is_int;\nuse function is_object;\nuse function is_string;\nuse function ltrim;\nuse function sprintf;\nuse function substr_count;\nuse function trigger_error;\n\nclass ClassScanner implements ScannerInterface\n{\n    /**\n     * @var bool\n     */\n    protected $isScanned = false;\n\n    /**\n     * @var string\n     */\n    protected $docComment;\n\n    /**\n     * @var string\n     */\n    protected $name;\n\n    /**\n     * @var string\n     */\n    protected $shortName;\n\n    /**\n     * @var int\n     */\n    protected $lineStart;\n\n    /**\n     * @var int\n     */\n    protected $lineEnd;\n\n    /**\n     * @var bool\n     */\n    protected $isTrait = false;\n\n    /**\n     * @var bool\n     */\n    protected $isFinal = false;\n\n    /**\n     * @var bool\n     */\n    protected $isAbstract = false;\n\n    /**\n     * @var bool\n     */\n    protected $isInterface = false;\n\n    /**\n     * @var string\n     */\n    protected $parentClass;\n\n    /**\n     * @var string\n     */\n    protected $shortParentClass;\n\n    /**\n     * @var array\n     */\n    protected $interfaces = [];\n\n    /**\n     * @var array\n     */\n    protected $shortInterfaces = [];\n\n    /**\n     * @var array\n     */\n    protected $tokens = [];\n\n    /**\n     * @var NameInformation\n     */\n    protected $nameInformation;\n\n    /**\n     * @var array\n     */\n    protected $infos = [];\n\n    /**\n     * @var array\n     */\n    protected $traits = [];\n\n    /**\n     * @var array\n     */\n    protected $methods = [];\n\n    /**\n     * @param  array $classTokens\n     * @param  NameInformation|null $nameInformation\n     * @return ClassScanner\n     */\n    public function __construct(array $classTokens, NameInformation $nameInformation = null)\n    {\n        $this->tokens          = $classTokens;\n        $this->nameInformation = $nameInformation;\n    }\n\n    /**\n     * Get annotations\n     *\n     * @param  Annotation\\AnnotationManager $annotationManager\n     * @return Annotation\\AnnotationCollection\n     */\n    public function getAnnotations(Annotation\\AnnotationManager $annotationManager)\n    {\n        if (($docComment = $this->getDocComment()) == '') {\n            return false;\n        }\n\n        return new AnnotationScanner($annotationManager, $docComment, $this->nameInformation);\n    }\n\n    /**\n     * Return documentation comment\n     *\n     * @return null|string\n     */\n    public function getDocComment()\n    {\n        $this->scan();\n\n        return $this->docComment;\n    }\n\n    /**\n     * Return documentation block\n     *\n     * @return false|DocBlockScanner\n     */\n    public function getDocBlock()\n    {\n        if (! $docComment = $this->getDocComment()) {\n            return false;\n        }\n\n        return new DocBlockScanner($docComment);\n    }\n\n    /**\n     * Return a name of class\n     *\n     * @return null|string\n     */\n    public function getName()\n    {\n        $this->scan();\n        return $this->name;\n    }\n\n    /**\n     * Return short name of class\n     *\n     * @return null|string\n     */\n    public function getShortName()\n    {\n        $this->scan();\n        return $this->shortName;\n    }\n\n    /**\n     * Return number of first line\n     *\n     * @return int|null\n     */\n    public function getLineStart()\n    {\n        $this->scan();\n        return $this->lineStart;\n    }\n\n    /**\n     * Return number of last line\n     *\n     * @return int|null\n     */\n    public function getLineEnd()\n    {\n        $this->scan();\n        return $this->lineEnd;\n    }\n\n    /**\n     * Verify if class is final\n     *\n     * @return bool\n     */\n    public function isFinal()\n    {\n        $this->scan();\n        return $this->isFinal;\n    }\n\n    /**\n     * Verify if class is a trait\n     *\n     * @return bool\n     */\n    public function isTrait()\n    {\n        $this->scan();\n        return $this->isTrait;\n    }\n\n    /**\n     * Verify if class is instantiable\n     *\n     * @return bool\n     */\n    public function isInstantiable()\n    {\n        $this->scan();\n        return ! $this->isAbstract && ! $this->isInterface && ! $this->isTrait;\n    }\n\n    /**\n     * Verify if class is an abstract class\n     *\n     * @return bool\n     */\n    public function isAbstract()\n    {\n        $this->scan();\n        return $this->isAbstract;\n    }\n\n    /**\n     * Verify if class is an interface\n     *\n     * @return bool\n     */\n    public function isInterface()\n    {\n        $this->scan();\n        return $this->isInterface;\n    }\n\n    /**\n     * Verify if class has parent\n     *\n     * @return bool\n     */\n    public function hasParentClass()\n    {\n        $this->scan();\n        return $this->parentClass !== null;\n    }\n\n    /**\n     * Return a name of parent class\n     *\n     * @return null|string\n     */\n    public function getParentClass()\n    {\n        $this->scan();\n        return $this->parentClass;\n    }\n\n    /**\n     * Return a list of interface names\n     *\n     * @return array\n     */\n    public function getInterfaces()\n    {\n        $this->scan();\n        return $this->interfaces;\n    }\n\n    /**\n     * Return a list of constant names\n     *\n     * @return array\n     */\n    public function getConstantNames()\n    {\n        $this->scan();\n\n        $return = [];\n        foreach ($this->infos as $info) {\n            if ($info['type'] != 'constant') {\n                continue;\n            }\n\n            $return[] = $info['name'];\n        }\n\n        return $return;\n    }\n\n    /**\n     * Return a list of constants\n     *\n     * @param  bool $namesOnly Set false to return instances of ConstantScanner\n     * @return array|ConstantScanner[]\n     */\n    public function getConstants($namesOnly = true)\n    {\n        if (true === $namesOnly) {\n            trigger_error('Use method getConstantNames() instead', E_USER_DEPRECATED);\n            return $this->getConstantNames();\n        }\n\n        $this->scan();\n\n        $return = [];\n        foreach ($this->infos as $info) {\n            if ($info['type'] != 'constant') {\n                continue;\n            }\n\n            $return[] = $this->getConstant($info['name']);\n        }\n\n        return $return;\n    }\n\n    /**\n     * Return a single constant by given name or index of info\n     *\n     * @param  string|int $constantNameOrInfoIndex\n     * @throws Exception\\InvalidArgumentException\n     * @return bool|ConstantScanner\n     */\n    public function getConstant($constantNameOrInfoIndex)\n    {\n        $this->scan();\n\n        if (is_int($constantNameOrInfoIndex)) {\n            $info = $this->infos[$constantNameOrInfoIndex];\n            if ($info['type'] != 'constant') {\n                throw new Exception\\InvalidArgumentException('Index of info offset is not about a constant');\n            }\n        } elseif (is_string($constantNameOrInfoIndex)) {\n            $constantFound = false;\n            foreach ($this->infos as $info) {\n                if ($info['type'] === 'constant' && $info['name'] === $constantNameOrInfoIndex) {\n                    $constantFound = true;\n                    break;\n                }\n            }\n            if (! $constantFound) {\n                return false;\n            }\n        } else {\n            throw new Exception\\InvalidArgumentException(\n                'Invalid constant name of info index type.  Must be of type int or string'\n            );\n        }\n        if (! isset($info)) {\n            return false;\n        }\n        $p = new ConstantScanner(\n            array_slice($this->tokens, $info['tokenStart'], $info['tokenEnd'] - $info['tokenStart'] + 1),\n            $this->nameInformation\n        );\n        $p->setClass($this->name);\n        $p->setScannerClass($this);\n        return $p;\n    }\n\n    /**\n     * Verify if class has constant\n     *\n     * @param  string $name\n     * @return bool\n     */\n    public function hasConstant($name)\n    {\n        $this->scan();\n\n        foreach ($this->infos as $info) {\n            if ($info['type'] === 'constant' && $info['name'] === $name) {\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    /**\n     * Return a list of property names\n     *\n     * @return array\n     */\n    public function getPropertyNames()\n    {\n        $this->scan();\n\n        $return = [];\n        foreach ($this->infos as $info) {\n            if ($info['type'] != 'property') {\n                continue;\n            }\n\n            $return[] = $info['name'];\n        }\n\n        return $return;\n    }\n\n    /**\n     * Return a list of properties\n     *\n     * @return PropertyScanner[]\n     */\n    public function getProperties()\n    {\n        $this->scan();\n\n        $return = [];\n        foreach ($this->infos as $info) {\n            if ($info['type'] != 'property') {\n                continue;\n            }\n\n            $return[] = $this->getProperty($info['name']);\n        }\n\n        return $return;\n    }\n\n    /**\n     * Return a single property by given name or index of info\n     *\n     * @param  string|int $propertyNameOrInfoIndex\n     * @throws Exception\\InvalidArgumentException\n     * @return bool|PropertyScanner\n     */\n    public function getProperty($propertyNameOrInfoIndex)\n    {\n        $this->scan();\n\n        if (is_int($propertyNameOrInfoIndex)) {\n            $info = $this->infos[$propertyNameOrInfoIndex];\n            if ($info['type'] != 'property') {\n                throw new Exception\\InvalidArgumentException('Index of info offset is not about a property');\n            }\n        } elseif (is_string($propertyNameOrInfoIndex)) {\n            $propertyFound = false;\n            foreach ($this->infos as $info) {\n                if ($info['type'] === 'property' && $info['name'] === $propertyNameOrInfoIndex) {\n                    $propertyFound = true;\n                    break;\n                }\n            }\n            if (! $propertyFound) {\n                return false;\n            }\n        } else {\n            throw new Exception\\InvalidArgumentException(\n                'Invalid property name of info index type.  Must be of type int or string'\n            );\n        }\n        if (! isset($info)) {\n            return false;\n        }\n        $p = new PropertyScanner(\n            array_slice($this->tokens, $info['tokenStart'], $info['tokenEnd'] - $info['tokenStart'] + 1),\n            $this->nameInformation\n        );\n        $p->setClass($this->name);\n        $p->setScannerClass($this);\n        return $p;\n    }\n\n    /**\n     * Verify if class has property\n     *\n     * @param  string $name\n     * @return bool\n     */\n    public function hasProperty($name)\n    {\n        $this->scan();\n\n        foreach ($this->infos as $info) {\n            if ($info['type'] === 'property' && $info['name'] === $name) {\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    /**\n     * Retrieve any traits used by the class.\n     *\n     * @return ClassScanner[]\n     */\n    public function getTraits()\n    {\n        if (! empty($this->traits)) {\n            return $this->traits;\n        }\n\n        // get list of trait names\n        $traitNames = $this->getTraitNames();\n        foreach ($traitNames as $traitName) {\n            $r = new ReflectionClass($traitName);\n            if (! $r->isTrait()) {\n                throw new Exception\\RuntimeException(sprintf(\n                    'Non-trait class detected as a trait: %s',\n                    $traitName\n                ));\n            }\n            $fileName = $r->getFileName();\n\n            $file = new FileScanner($fileName);\n            $this->traits[] = $file->getClass($traitName);\n        }\n\n        return $this->traits;\n    }\n\n    /**\n     * Retrieve a list of trait names used by this class.\n     *\n     * @return array\n     */\n    public function getTraitNames()\n    {\n        $this->scan();\n\n        $return = [];\n        foreach ($this->infos as $info) {\n            if ($info['type'] !== 'use') {\n                continue;\n            }\n\n            if (is_array($info['use_statements'])) {\n                foreach ($info['use_statements'] as $trait) {\n                    $traitName = $trait;\n                    if ($this->nameInformation instanceof NameInformation) {\n                        $traitName = $this->nameInformation->resolveName($traitName);\n                    }\n                    $return[] = $traitName;\n                }\n            }\n        }\n\n        return $return;\n    }\n\n    /**\n     * Retrieve a list of aliased traits used by the class.\n     *\n     * @return array\n     */\n    public function getTraitAliases()\n    {\n        $this->scan();\n\n        $return = [];\n        foreach ($this->infos as $info) {\n            if ($info['type'] !== 'use') {\n                continue;\n            }\n\n            if (is_array($info['aliases'])) {\n                foreach ($info['aliases'] as $alias) {\n                    if (null === $alias\n                        || (! empty($alias['type']) && $alias['type'] !== 'as')\n                    ) {\n                        continue;\n                    }\n\n                    // attempt to get fqcn\n                    list($trait, $method) = explode('::', $alias['original']);\n                    if ($this->nameInformation instanceof NameInformation) {\n                        $trait = $this->nameInformation->resolveName($trait);\n                    }\n\n                    $return[$alias['alias']] = $trait . '::' . $method;\n                }\n            }\n        }\n\n        return $return;\n    }\n\n    /**\n     * Retrieve visibility for a given alias.\n     *\n     * @param mixed $aliasName\n     * @return string\n     */\n    protected function getVisibilityForAlias($aliasName)\n    {\n        $this->scan();\n\n        $return = null;\n        foreach ($this->infos as $info) {\n            if ($info['type'] !== 'use') {\n                continue;\n            }\n\n            if (is_array($info['aliases'])) {\n                foreach ($info['aliases'] as $alias) {\n                    if (null === $alias\n                        && (! empty($alias['type']) && $alias['type'] !== 'as')\n                    ) {\n                        continue;\n                    }\n\n                    if ($alias['alias'] === $aliasName) {\n                        $return = $alias['visibility'];\n                        break 2;\n                    }\n                }\n            }\n        }\n\n        return $return;\n    }\n\n    /**\n     * Return an array of key = trait to keep, value = trait::method to ignore\n     *\n     * @return array\n     */\n    protected function getBlockedTraitMethods()\n    {\n        $this->scan();\n\n        $return = [];\n        foreach ($this->infos as $info) {\n            if ($info['type'] !== 'use') {\n                continue;\n            }\n\n            if (is_array($info['aliases'])) {\n                foreach ($info['aliases'] as $alias) {\n                    if (null === $alias\n                        || (! empty($alias['type']) && $alias['type'] !== 'insteadof')\n                    ) {\n                        continue;\n                    }\n\n                    // attempt to get fqcn\n                    list($trait, $method) = explode('::', $alias['original']);\n                    if ($this->nameInformation instanceof NameInformation) {\n                        $trait = $this->nameInformation->resolveName($alias['alias']);\n                    }\n\n                    $return[] = $trait . '::' . $method;\n                }\n            }\n        }\n\n        return $return;\n    }\n\n    /**\n     * Return a list of method names\n     *\n     * @return array\n     */\n    public function getMethodNames()\n    {\n        $this->scan();\n\n        $methods = $this->getMethods();\n        $return = [];\n        foreach ($methods as $method) {\n            $return[] = $method->getName();\n        }\n\n        return $return;\n    }\n\n    /**\n     * Return a list of methods\n     *\n     * @return MethodScanner[]\n     */\n    public function getMethods()\n    {\n        $this->scan();\n\n        if (! empty($this->methods)) {\n            return $this->methods;\n        }\n\n        foreach ($this->infos as $info) {\n            if ($info['type'] !== 'method' && $info['type'] !== 'use') {\n                continue;\n            }\n\n            // Merge in trait methods\n            if ($info['type'] === 'use') {\n                $traitMethods = [];\n                $traits       = $this->getTraits();\n                $insteadof    = $this->getBlockedTraitMethods();\n                $aliases      = $this->getTraitAliases();\n\n                foreach ($traits as $trait) {\n                    $tempMethods = $trait->getMethods();\n                    foreach ($tempMethods as $tempMethod) {\n                        $methodFullName = $trait->getName() . '::' . $tempMethod->getName();\n                        $methodAlias = array_search($methodFullName, $aliases);\n\n                        if (false !== $methodAlias) {\n                            // trait::method is aliased\n                            // clone the tempMethod as we need to change\n                            // the name and possibly the visibility of the\n                            // scanned method.\n                            //\n                            // @todo setName and setVisibility were added to\n                            // MethodScanner to accomplish this, may not be the\n                            // best option, could use ReflectionClass instead?\n                            $newMethod = clone $tempMethod;\n                            $newMethod->setName($methodAlias);\n\n                            // if visibility exists, change it on the MethodScanner\n                            $visibility = $this->getVisibilityForAlias($methodAlias);\n                            if (null !== $visibility) {\n                                $newMethod->setVisibility($visibility);\n                            }\n                            $traitMethods[$methodAlias] = $newMethod;\n                        } elseif (in_array($methodFullName, $insteadof)) {\n                            // ignore overridden methods\n                            continue;\n                        } else {\n                            if (array_key_exists($tempMethod->getName(), $traitMethods)) {\n                                throw new Exception\\RuntimeException(sprintf(\n                                    'Trait method %s has not been applied because there are'\n                                    . ' collisions with other trait methods see: (insteadof OR as)',\n                                    $tempMethod->getName()\n                                ));\n                            }\n\n                            $traitMethods[$tempMethod->getName()] = $tempMethod;\n                        }\n                    }\n                }\n\n                $this->methods = array_merge($this->methods, array_values($traitMethods));\n                continue;\n            }\n\n            $m = new MethodScanner(\n                array_slice(\n                    $this->tokens,\n                    $info['tokenStart'],\n                    $info['tokenEnd'] - $info['tokenStart'] + 1\n                ),\n                $this->nameInformation\n            );\n            $m->setClass($this->name);\n            $m->setScannerClass($this);\n\n            $this->methods[] = $m;\n        }\n\n        return $this->methods;\n    }\n\n    /**\n     * Return a single method by given name or index of info\n     *\n     * @param  string|int $methodNameOrInfoIndex\n     * @throws Exception\\InvalidArgumentException\n     * @return MethodScanner\n     */\n    public function getMethod($methodNameOrInfoIndex)\n    {\n        $this->scan();\n\n        if (is_int($methodNameOrInfoIndex)) {\n            $info = $this->infos[$methodNameOrInfoIndex];\n            if ($info['type'] != 'method') {\n                throw new Exception\\InvalidArgumentException('Index of info offset is not about a method');\n            }\n            $methodNameOrInfoIndex = $info['name'];\n        }\n\n        $returnMethod = false;\n        $methods = $this->getMethods();\n        foreach ($methods as $method) {\n            if ($method->getName() === $methodNameOrInfoIndex) {\n                $returnMethod = $method;\n                break;\n            }\n        }\n\n        return $returnMethod;\n    }\n\n    /**\n     * Verify if class has method by given name\n     *\n     * @param  string $name\n     * @return bool\n     */\n    public function hasMethod($name)\n    {\n        $this->scan();\n\n        return is_object($this->getMethod($name));\n    }\n\n    public static function export()\n    {\n        // @todo\n    }\n\n    public function __toString()\n    {\n        // @todo\n    }\n\n    /**\n     * Scan tokens\n     *\n     * @return void\n     * @throws Exception\\RuntimeException\n     */\n    protected function scan()\n    {\n        if ($this->isScanned) {\n            return;\n        }\n\n        if (! $this->tokens) {\n            throw new Exception\\RuntimeException('No tokens were provided');\n        }\n\n        /**\n         * Variables & Setup\n         */\n        $tokens       = &$this->tokens; // localize\n        $infos        = &$this->infos; // localize\n        $tokenIndex   = null;\n        $token        = null;\n        $tokenType    = null;\n        $tokenContent = null;\n        $tokenLine    = null;\n        $namespace    = null;\n        $infoIndex    = 0;\n        $braceCount   = 0;\n\n        /*\n         * MACRO creation\n         */\n        $MACRO_TOKEN_ADVANCE = function () use (\n            &$tokens,\n            &$tokenIndex,\n            &$token,\n            &$tokenType,\n            &$tokenContent,\n            &$tokenLine\n        ) {\n            static $lastTokenArray = null;\n            $tokenIndex = $tokenIndex === null ? 0 : $tokenIndex + 1;\n            if (! isset($tokens[$tokenIndex])) {\n                $token        = false;\n                $tokenContent = false;\n                $tokenType    = false;\n                $tokenLine    = false;\n\n                return false;\n            }\n            $token = $tokens[$tokenIndex];\n\n            if (is_string($token)) {\n                $tokenType    = null;\n                $tokenContent = $token;\n                $tokenLine   += substr_count(\n                    $lastTokenArray[1] ?? '',\n                    \"\\n\"\n                ); // adjust token line by last known newline count\n            } else {\n                $lastTokenArray = $token;\n                [$tokenType, $tokenContent, $tokenLine] = $token;\n            }\n\n            return $tokenIndex;\n        };\n        $MACRO_INFO_ADVANCE  = function () use (&$infoIndex, &$infos, &$tokenIndex, &$tokenLine) {\n            $infos[$infoIndex]['tokenEnd'] = $tokenIndex;\n            $infos[$infoIndex]['lineEnd']  = $tokenLine;\n            $infoIndex++;\n\n            return $infoIndex;\n        };\n\n        /**\n         * START FINITE STATE MACHINE FOR SCANNING TOKENS\n         */\n        // Initialize token\n        $MACRO_TOKEN_ADVANCE();\n\n        SCANNER_TOP:\n\n        switch ($tokenType) {\n            case T_DOC_COMMENT:\n                $this->docComment = $tokenContent;\n                goto SCANNER_CONTINUE;\n                //goto no break needed\n\n            case T_FINAL:\n            case T_ABSTRACT:\n            case T_CLASS:\n            case T_INTERFACE:\n            case T_TRAIT:\n                // CLASS INFORMATION\n\n                $classContext        = null;\n                $classInterfaceIndex = 0;\n\n                SCANNER_CLASS_INFO_TOP:\n\n                if (is_string($tokens[$tokenIndex + 1]) && $tokens[$tokenIndex + 1] === '{') {\n                    goto SCANNER_CLASS_INFO_END;\n                }\n\n                $this->lineStart = $tokenLine;\n\n                switch ($tokenType) {\n                    case T_FINAL:\n                        $this->isFinal = true;\n                        goto SCANNER_CLASS_INFO_CONTINUE;\n                        // goto no break needed\n\n                    case T_ABSTRACT:\n                        $this->isAbstract = true;\n                        goto SCANNER_CLASS_INFO_CONTINUE;\n                        // goto no break needed\n\n                    case T_TRAIT:\n                        $this->isTrait = true;\n                        $this->shortName = $tokens[$tokenIndex + 2][1];\n                        if ($this->nameInformation && $this->nameInformation->hasNamespace()) {\n                            $this->name = $this->nameInformation->getNamespace() . '\\\\' . $this->shortName;\n                        } else {\n                            $this->name = $this->shortName;\n                        }\n                        goto SCANNER_CLASS_INFO_CONTINUE;\n                        // goto no break needed\n\n                    case T_INTERFACE:\n                        $this->isInterface = true;\n                        // fall-through\n                    case T_CLASS:\n                        $this->shortName = $tokens[$tokenIndex + 2][1];\n                        if ($this->nameInformation && $this->nameInformation->hasNamespace()) {\n                            $this->name = $this->nameInformation->getNamespace() . '\\\\' . $this->shortName;\n                        } else {\n                            $this->name = $this->shortName;\n                        }\n                        goto SCANNER_CLASS_INFO_CONTINUE;\n                        // goto no break needed\n\n                    case T_NS_SEPARATOR:\n                    case T_STRING:\n                        switch ($classContext) {\n                            case T_EXTENDS:\n                                if ($this->isInterface) {\n                                    $this->shortInterfaces[$classInterfaceIndex] .= $tokenContent;\n                                } else {\n                                    $this->shortParentClass .= $tokenContent;\n                                }\n                                break;\n                            case T_IMPLEMENTS:\n                                $this->shortInterfaces[$classInterfaceIndex] .= $tokenContent;\n                                break;\n                        }\n                        goto SCANNER_CLASS_INFO_CONTINUE;\n                        // goto no break needed\n\n                    case T_EXTENDS:\n                    case T_IMPLEMENTS:\n                        $classContext = $tokenType;\n                        if (($this->isInterface && $classContext === T_EXTENDS) || $classContext === T_IMPLEMENTS) {\n                            $this->shortInterfaces[$classInterfaceIndex] = '';\n                        } elseif (! $this->isInterface && $classContext === T_EXTENDS) {\n                            $this->shortParentClass = '';\n                        }\n                        goto SCANNER_CLASS_INFO_CONTINUE;\n                        // goto no break needed\n\n                    case null:\n                        if (($classContext == T_IMPLEMENTS && $tokenContent == ',')\n                            || ($classContext == T_EXTENDS && $tokenContent == ',' && $this->isInterface)\n                        ) {\n                            $classInterfaceIndex++;\n                            $this->shortInterfaces[$classInterfaceIndex] = '';\n                        }\n                }\n\n                SCANNER_CLASS_INFO_CONTINUE:\n\n                if ($MACRO_TOKEN_ADVANCE() === false) {\n                    goto SCANNER_END;\n                }\n                goto SCANNER_CLASS_INFO_TOP;\n\n                SCANNER_CLASS_INFO_END:\n\n                goto SCANNER_CONTINUE;\n        }\n\n        if ($tokenType === null && $tokenContent === '{' && $braceCount === 0) {\n            $braceCount++;\n            if ($MACRO_TOKEN_ADVANCE() === false) {\n                goto SCANNER_END;\n            }\n\n            SCANNER_CLASS_BODY_TOP:\n\n            if ($braceCount === 0) {\n                goto SCANNER_CLASS_BODY_END;\n            }\n\n            switch ($tokenType) {\n                case T_CONST:\n                    $infos[$infoIndex] = [\n                        'type'          => 'constant',\n                        'tokenStart'    => $tokenIndex,\n                        'tokenEnd'      => null,\n                        'lineStart'     => $tokenLine,\n                        'lineEnd'       => null,\n                        'name'          => null,\n                        'value'         => null,\n                    ];\n\n                    SCANNER_CLASS_BODY_CONST_TOP:\n\n                    if ($tokenContent === ';') {\n                        goto SCANNER_CLASS_BODY_CONST_END;\n                    }\n\n                    if ($tokenType === T_STRING && null === $infos[$infoIndex]['name']) {\n                        $infos[$infoIndex]['name'] = $tokenContent;\n                    }\n\n                    SCANNER_CLASS_BODY_CONST_CONTINUE:\n\n                    if ($MACRO_TOKEN_ADVANCE() === false) {\n                        goto SCANNER_END;\n                    }\n                    goto SCANNER_CLASS_BODY_CONST_TOP;\n\n                    SCANNER_CLASS_BODY_CONST_END:\n\n                    $MACRO_INFO_ADVANCE();\n                    goto SCANNER_CLASS_BODY_CONTINUE;\n                    // goto no break needed\n\n                case T_USE:\n                    // ensure php backwards compatibility\n                    if (! defined('T_INSTEADOF')) {\n                        define('T_INSTEADOF', 24000);\n                    }\n\n                    $infos[$infoIndex] = [\n                        'type'           => 'use',\n                        'tokenStart'     => $tokenIndex,\n                        'tokenEnd'       => null,\n                        'lineStart'      => $tokens[$tokenIndex][2],\n                        'lineEnd'        => null,\n                        'name'           => $namespace,\n                        'use_statements' => [0 => null],\n                        'aliases'        => [0 => null],\n                    ];\n\n                    $isOriginalName = [T_STRING, T_DOUBLE_COLON];\n                    $isAlias        = [T_STRING];\n                    $isVisibility   = [T_PRIVATE, T_PROTECTED, T_PUBLIC, T_STATIC];\n                    $isAliasType    = [T_AS, T_INSTEADOF];\n                    $isValidAlias   = array_merge($isOriginalName, $isAlias, $isVisibility, $isAliasType);\n\n                    $useStatementIndex   = 0;\n                    $aliasStatementIndex = 0;\n                    $useAliasContext     = false;\n                    $useAsContext        = false;\n\n                    // start processing with next token\n                    if ($MACRO_TOKEN_ADVANCE() === false) {\n                        goto SCANNER_END;\n                    }\n\n                    SCANNER_USE_TOP:\n\n                    if ($tokenType === null) {\n                        if ($tokenContent === '{') {\n                            $useStatementIndex = 0;\n                            $useAliasContext   = true;\n                            $infos[$infoIndex]['aliases'][$useStatementIndex] = [\n                                'original'   => null,\n                                'alias'      => null,\n                                'visibility' => null,\n                                'type'       => 'as',\n                            ];\n                        } elseif ($tokenContent === '}') {\n                            $useAliasContext = false;\n                            goto SCANNER_USE_END;\n                        } elseif ($tokenContent === ';') {\n                            if ($useAliasContext === true) {\n                                $useStatementIndex++;\n                                $useAsContext = false;\n                            }\n                            // only end if we aren't inside braces\n                            if (false === $useAliasContext) {\n                                goto SCANNER_USE_END;\n                            }\n                        } elseif ($tokenContent === ',') {\n                            $useStatementIndex++;\n                            $infos[$infoIndex]['use_statements'][$useStatementIndex] = '';\n                        }\n                    }\n\n                    // ANALYZE\n                    if ($tokenType !== null) {\n                        // use context\n                        if (false === $useAliasContext) {\n                            if ($tokenType == T_NS_SEPARATOR || $tokenType == T_STRING) {\n                                $infos[$infoIndex]['use_statements'][$useStatementIndex] .= $tokenContent;\n                            }\n                        } else {\n                            if (in_array($tokenType, $isValidAlias)\n                                && empty($infos[$infoIndex]['aliases'][$useStatementIndex])\n                            ) {\n                                $infos[$infoIndex]['aliases'][$useStatementIndex] = [\n                                    'original'   => null,\n                                    'visibility' => null,\n                                    'alias'      => null,\n                                    'type'       => null,\n                                ];\n                            }\n\n                            if ($tokenType == T_AS || $tokenType == T_INSTEADOF) {\n                                $useAsContext = true;\n                                $infos[$infoIndex]['aliases'][$useStatementIndex]['type'] = $tokenType == T_INSTEADOF\n                                    ? 'insteadof'\n                                    : 'as';\n                                goto SCANNER_USE_CONTINUE;\n                            }\n\n                            // in alias context\n                            if ($useAsContext === true && in_array($tokenType, $isAlias)) {\n                                $infos[$infoIndex]['aliases'][$useStatementIndex]['alias'] = $tokenContent;\n                            } elseif (in_array($tokenType, $isOriginalName)) {\n                                $infos[$infoIndex]['aliases'][$useStatementIndex]['original'] .= $tokenContent;\n                            } elseif (in_array($tokenType, $isVisibility)) {\n                                //add whitespace (will trim later)\n                                $infos[$infoIndex]['aliases'][$useStatementIndex]['visibility'] = $tokenType;\n                            }\n                        }\n                    }\n\n                    SCANNER_USE_CONTINUE:\n\n                    if ($MACRO_TOKEN_ADVANCE() === false) {\n                        goto SCANNER_END;\n                    }\n                    goto SCANNER_USE_TOP;\n\n                    SCANNER_USE_END:\n\n                    $MACRO_INFO_ADVANCE();\n                    goto SCANNER_CLASS_BODY_CONTINUE;\n                    // goto no break needed\n\n                case T_DOC_COMMENT:\n                case T_PUBLIC:\n                case T_PROTECTED:\n                case T_PRIVATE:\n                case T_ABSTRACT:\n                case T_FINAL:\n                case T_VAR:\n                case T_FUNCTION:\n                    $infos[$infoIndex] = [\n                        'type'        => null,\n                        'tokenStart'  => $tokenIndex,\n                        'tokenEnd'    => null,\n                        'lineStart'   => $tokenLine,\n                        'lineEnd'     => null,\n                        'name'        => null,\n                    ];\n\n                    $memberContext     = null;\n                    $methodBodyStarted = false;\n\n                    SCANNER_CLASS_BODY_MEMBER_TOP:\n\n                    if ($memberContext === 'method') {\n                        switch ($tokenContent) {\n                            case '{':\n                                $methodBodyStarted = true;\n                                $braceCount++;\n                                goto SCANNER_CLASS_BODY_MEMBER_CONTINUE;\n                                // goto no break needed\n\n                            case '}':\n                                $braceCount--;\n                                goto SCANNER_CLASS_BODY_MEMBER_CONTINUE;\n                                // goto no break needed\n\n                            case ';':\n                                $infos[$infoIndex]['tokenEnd'] = $tokenIndex;\n                                goto SCANNER_CLASS_BODY_MEMBER_CONTINUE;\n                                // goto no break needed\n                        }\n                    }\n\n                    if ($memberContext !== null) {\n                        if (($memberContext === 'property' && $tokenContent === ';')\n                            || ($memberContext === 'method' && $methodBodyStarted && $braceCount === 1)\n                            || ($memberContext === 'method' && $this->isInterface && $tokenContent === ';')\n                        ) {\n                            goto SCANNER_CLASS_BODY_MEMBER_END;\n                        }\n                    }\n\n                    switch ($tokenType) {\n                        case T_CONST:\n                            $memberContext             = 'constant';\n                            $infos[$infoIndex]['type'] = 'constant';\n                            goto SCANNER_CLASS_BODY_CONST_CONTINUE;\n                            //goto no break needed\n\n                        case T_VARIABLE:\n                            if ($memberContext === null) {\n                                $memberContext             = 'property';\n                                $infos[$infoIndex]['type'] = 'property';\n                                $infos[$infoIndex]['name'] = ltrim($tokenContent, '$');\n                            }\n                            goto SCANNER_CLASS_BODY_MEMBER_CONTINUE;\n                            // goto no break needed\n\n                        case T_FUNCTION:\n                            $memberContext             = 'method';\n                            $infos[$infoIndex]['type'] = 'method';\n                            goto SCANNER_CLASS_BODY_MEMBER_CONTINUE;\n                            // goto no break needed\n\n                        case T_STRING:\n                            if ($memberContext === 'method' && null === $infos[$infoIndex]['name']) {\n                                $infos[$infoIndex]['name'] = $tokenContent;\n                            }\n                            goto SCANNER_CLASS_BODY_MEMBER_CONTINUE;\n                            // goto no break needed\n                    }\n\n                    SCANNER_CLASS_BODY_MEMBER_CONTINUE:\n\n                    if ($MACRO_TOKEN_ADVANCE() === false) {\n                        goto SCANNER_END;\n                    }\n                    goto SCANNER_CLASS_BODY_MEMBER_TOP;\n\n                    SCANNER_CLASS_BODY_MEMBER_END:\n\n                    $memberContext = null;\n                    $MACRO_INFO_ADVANCE();\n                    goto SCANNER_CLASS_BODY_CONTINUE;\n                    // goto no break needed\n\n                case null: // no type, is a string\n                    switch ($tokenContent) {\n                        case '{':\n                            $braceCount++;\n                            goto SCANNER_CLASS_BODY_CONTINUE;\n                            // goto no break needed\n\n                        case '}':\n                            $braceCount--;\n                            goto SCANNER_CLASS_BODY_CONTINUE;\n                            // goto no break needed\n                    }\n            }\n\n            SCANNER_CLASS_BODY_CONTINUE:\n\n            if ($braceCount === 0 || $MACRO_TOKEN_ADVANCE() === false) {\n                goto SCANNER_CONTINUE;\n            }\n            goto SCANNER_CLASS_BODY_TOP;\n\n            SCANNER_CLASS_BODY_END:\n\n            goto SCANNER_CONTINUE;\n        }\n\n        SCANNER_CONTINUE:\n\n        if ($tokenContent === '}') {\n            $this->lineEnd = $tokenLine;\n        }\n\n        if ($MACRO_TOKEN_ADVANCE() === false) {\n            goto SCANNER_END;\n        }\n        goto SCANNER_TOP;\n\n        SCANNER_END:\n\n        // process short names\n        if ($this->nameInformation) {\n            if ($this->shortParentClass) {\n                $this->parentClass = $this->nameInformation->resolveName($this->shortParentClass);\n            }\n            if ($this->shortInterfaces) {\n                foreach ($this->shortInterfaces as $siIndex => $si) {\n                    $this->interfaces[$siIndex] = $this->nameInformation->resolveName($si);\n                }\n            }\n        } else {\n            $this->parentClass = $this->shortParentClass;\n            $this->interfaces  = $this->shortInterfaces;\n        }\n\n        $this->isScanned = true;\n    }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- vendor/laminas/laminas-code/src/Scanner/ClassScanner.php	(revision a449d8a584af7c2722ad0d48f553c0917ddead6e)
+++ vendor/laminas/laminas-code/src/Scanner/ClassScanner.php	(date 1605132687000)
@@ -999,6 +999,8 @@
 
                     case T_NS_SEPARATOR:
                     case T_STRING:
+                    case T_NAME_FULLY_QUALIFIED:
+                    case T_NAME_QUALIFIED:
                         switch ($classContext) {
                             case T_EXTENDS:
                                 if ($this->isInterface) {
@@ -1160,7 +1162,11 @@
                     if ($tokenType !== null) {
                         // use context
                         if (false === $useAliasContext) {
-                            if ($tokenType == T_NS_SEPARATOR || $tokenType == T_STRING) {
+                            if ($tokenType == T_NS_SEPARATOR
+                                || $tokenType == T_STRING
+                                || $tokenType == T_NAME_QUALIFIED
+                                || $tokenType == T_NAME_FULLY_QUALIFIED
+                            ) {
                                 $infos[$infoIndex]['use_statements'][$useStatementIndex] .= $tokenContent;
                             }
                         } else {
Index: vendor/laminas/laminas-code/src/Reflection/ParameterReflection.php
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?php\n\n/**\n * @see       https://github.com/laminas/laminas-code for the canonical source repository\n * @copyright https://github.com/laminas/laminas-code/blob/master/COPYRIGHT.md\n * @license   https://github.com/laminas/laminas-code/blob/master/LICENSE.md New BSD License\n */\n\nnamespace Laminas\\Code\\Reflection;\n\nuse ReflectionParameter;\n\nuse function method_exists;\n\nclass ParameterReflection extends ReflectionParameter implements ReflectionInterface\n{\n    /**\n     * @var bool\n     */\n    protected $isFromMethod = false;\n\n    /**\n     * Get declaring class reflection object\n     *\n     * @return ClassReflection\n     */\n    public function getDeclaringClass()\n    {\n        $phpReflection  = parent::getDeclaringClass();\n        $laminasReflection = new ClassReflection($phpReflection->getName());\n        unset($phpReflection);\n\n        return $laminasReflection;\n    }\n\n    /**\n     * Get class reflection object\n     *\n     * @return null|ClassReflection\n     */\n    public function getClass()\n    {\n        $phpReflection = parent::getClass();\n        if ($phpReflection === null) {\n            return null;\n        }\n\n        $laminasReflection = new ClassReflection($phpReflection->getName());\n        unset($phpReflection);\n\n        return $laminasReflection;\n    }\n\n    /**\n     * Get declaring function reflection object\n     *\n     * @return FunctionReflection|MethodReflection\n     */\n    public function getDeclaringFunction()\n    {\n        $phpReflection = parent::getDeclaringFunction();\n        if ($phpReflection instanceof \\ReflectionMethod) {\n            $laminasReflection = new MethodReflection($this->getDeclaringClass()->getName(), $phpReflection->getName());\n        } else {\n            $laminasReflection = new FunctionReflection($phpReflection->getName());\n        }\n        unset($phpReflection);\n\n        return $laminasReflection;\n    }\n\n    /**\n     * Get parameter type\n     *\n     * @return string|null\n     */\n    public function detectType()\n    {\n        if (method_exists($this, 'getType')\n            && ($type = $this->getType())\n            && $type->isBuiltin()\n        ) {\n            return $type->getName();\n        }\n\n        // can be dropped when dropping PHP7 support:\n        if ($this->isArray()) {\n            return 'array';\n        }\n\n        // can be dropped when dropping PHP7 support:\n        if ($this->isCallable()) {\n            return 'callable';\n        }\n\n        if (($class = $this->getClass()) instanceof \\ReflectionClass) {\n            return $class->getName();\n        }\n\n        $docBlock = $this->getDeclaringFunction()->getDocBlock();\n\n        if (! $docBlock instanceof DocBlockReflection) {\n            return null;\n        }\n\n        $params = $docBlock->getTags('param');\n\n        if (isset($params[$this->getPosition()])) {\n            return $params[$this->getPosition()]->getType();\n        }\n\n        return null;\n    }\n\n    /**\n     * @return string\n     */\n    public function toString()\n    {\n        return parent::__toString();\n    }\n\n    /**\n     * @return string\n     */\n    public function __toString()\n    {\n        return parent::__toString();\n    }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- vendor/laminas/laminas-code/src/Reflection/ParameterReflection.php	(revision a449d8a584af7c2722ad0d48f553c0917ddead6e)
+++ vendor/laminas/laminas-code/src/Reflection/ParameterReflection.php	(date 1605132687000)
@@ -40,13 +40,13 @@
      */
     public function getClass()
     {
-        $phpReflection = parent::getClass();
-        if ($phpReflection === null) {
+        $phpReflectionType = parent::getType();
+        if ($phpReflectionType === null) {
             return null;
         }
 
-        $laminasReflection = new ClassReflection($phpReflection->getName());
-        unset($phpReflection);
+        $laminasReflection = new ClassReflection($phpReflectionType->getName());
+        unset($phpReflectionType);
 
         return $laminasReflection;
     }
@@ -77,20 +77,14 @@
     public function detectType()
     {
         if (method_exists($this, 'getType')
-            && ($type = $this->getType())
+            && null !== ($type = $this->getType())
             && $type->isBuiltin()
         ) {
             return $type->getName();
         }
 
-        // can be dropped when dropping PHP7 support:
-        if ($this->isArray()) {
-            return 'array';
-        }
-
-        // can be dropped when dropping PHP7 support:
-        if ($this->isCallable()) {
-            return 'callable';
+        if (null !== $type && $type->getName() === 'self') {
+            return $this->getDeclaringClass()->getName();
         }
 
         if (($class = $this->getClass()) instanceof \ReflectionClass) {
Index: vendor/doctrine/dbal/README.md
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+># Doctrine DBAL\n\n| [Master][Master] | [2.11][2.11] |\n|:----------------:|:----------:|\n| [![Build status][Master image]][Master] | [![Build status][2.11 image]][2.11] |\n| [![GitHub Actions][GA master image]][GA master] | [![GitHub Actions][GA 2.11 image]][GA 2.11] |\n| [![AppVeyor][AppVeyor master image]][AppVeyor master] | [![AppVeyor][AppVeyor 2.11 image]][AppVeyor 2.11] |\n| [![Code Coverage][Coverage image]][CodeCov Master] | [![Code Coverage][Coverage 2.11 image]][CodeCov 2.11] |\n\nPowerful database abstraction layer with many features for database schema introspection, schema management and PDO abstraction.\n\n## More resources:\n\n* [Website](http://www.doctrine-project.org/projects/dbal.html)\n* [Documentation](http://docs.doctrine-project.org/projects/doctrine-dbal/en/latest/)\n* [Issue Tracker](https://github.com/doctrine/dbal/issues)\n\n  [Master image]: https://img.shields.io/travis/doctrine/dbal/master.svg?style=flat-square\n  [Coverage image]: https://codecov.io/gh/doctrine/dbal/branch/master/graph/badge.svg\n  [Master]: https://travis-ci.org/doctrine/dbal\n  [CodeCov Master]: https://codecov.io/gh/doctrine/dbal/branch/master\n  [AppVeyor master]: https://ci.appveyor.com/project/doctrine/dbal/branch/master\n  [AppVeyor master image]: https://ci.appveyor.com/api/projects/status/i88kitq8qpbm0vie/branch/master?svg=true\n  [GA master]: https://github.com/doctrine/dbal/actions?query=workflow%3A%22Continuous+Integration%22+branch%3Amaster\n  [GA master image]: https://github.com/doctrine/dbal/workflows/Continuous%20Integration/badge.svg\n\n  [2.11 image]: https://img.shields.io/travis/doctrine/dbal/2.11.x.svg?style=flat-square\n  [Coverage 2.11 image]: https://codecov.io/gh/doctrine/dbal/branch/2.11.x/graph/badge.svg\n  [2.11]: https://github.com/doctrine/dbal/tree/2.11.x\n  [CodeCov 2.11]: https://codecov.io/gh/doctrine/dbal/branch/2.11.x\n  [AppVeyor 2.11]: https://ci.appveyor.com/project/doctrine/dbal/branch/2.11.x\n  [AppVeyor 2.11 image]: https://ci.appveyor.com/api/projects/status/i88kitq8qpbm0vie/branch/2.11.x?svg=true\n  [GA 2.11]: https://github.com/doctrine/dbal/actions?query=workflow%3A%22Continuous+Integration%22+branch%3A2.11.x\n  [GA 2.11 image]: https://github.com/doctrine/dbal/workflows/Continuous%20Integration/badge.svg?branch=2.11.x\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- vendor/doctrine/dbal/README.md	(revision a449d8a584af7c2722ad0d48f553c0917ddead6e)
+++ vendor/doctrine/dbal/README.md	(date 1605385618000)
@@ -1,11 +1,11 @@
 # Doctrine DBAL
 
-| [Master][Master] | [2.11][2.11] |
+| [Master][Master] | [2.12][2.12] |
 |:----------------:|:----------:|
-| [![Build status][Master image]][Master] | [![Build status][2.11 image]][2.11] |
-| [![GitHub Actions][GA master image]][GA master] | [![GitHub Actions][GA 2.11 image]][GA 2.11] |
-| [![AppVeyor][AppVeyor master image]][AppVeyor master] | [![AppVeyor][AppVeyor 2.11 image]][AppVeyor 2.11] |
-| [![Code Coverage][Coverage image]][CodeCov Master] | [![Code Coverage][Coverage 2.11 image]][CodeCov 2.11] |
+| [![Build status][Master image]][Master] | [![Build status][2.12 image]][2.12] |
+| [![GitHub Actions][GA master image]][GA master] | [![GitHub Actions][GA 2.12 image]][GA 2.12] |
+| [![AppVeyor][AppVeyor master image]][AppVeyor master] | [![AppVeyor][AppVeyor 2.12 image]][AppVeyor 2.12] |
+| [![Code Coverage][Coverage image]][CodeCov Master] | [![Code Coverage][Coverage 2.12 image]][CodeCov 2.12] |
 
 Powerful database abstraction layer with many features for database schema introspection, schema management and PDO abstraction.
 
@@ -24,11 +24,11 @@
   [GA master]: https://github.com/doctrine/dbal/actions?query=workflow%3A%22Continuous+Integration%22+branch%3Amaster
   [GA master image]: https://github.com/doctrine/dbal/workflows/Continuous%20Integration/badge.svg
 
-  [2.11 image]: https://img.shields.io/travis/doctrine/dbal/2.11.x.svg?style=flat-square
-  [Coverage 2.11 image]: https://codecov.io/gh/doctrine/dbal/branch/2.11.x/graph/badge.svg
-  [2.11]: https://github.com/doctrine/dbal/tree/2.11.x
-  [CodeCov 2.11]: https://codecov.io/gh/doctrine/dbal/branch/2.11.x
-  [AppVeyor 2.11]: https://ci.appveyor.com/project/doctrine/dbal/branch/2.11.x
-  [AppVeyor 2.11 image]: https://ci.appveyor.com/api/projects/status/i88kitq8qpbm0vie/branch/2.11.x?svg=true
-  [GA 2.11]: https://github.com/doctrine/dbal/actions?query=workflow%3A%22Continuous+Integration%22+branch%3A2.11.x
-  [GA 2.11 image]: https://github.com/doctrine/dbal/workflows/Continuous%20Integration/badge.svg?branch=2.11.x
+  [2.12 image]: https://img.shields.io/travis/doctrine/dbal/2.12.x.svg?style=flat-square
+  [Coverage 2.12 image]: https://codecov.io/gh/doctrine/dbal/branch/2.12.x/graph/badge.svg
+  [2.12]: https://github.com/doctrine/dbal/tree/2.12.x
+  [CodeCov 2.12]: https://codecov.io/gh/doctrine/dbal/branch/2.12.x
+  [AppVeyor 2.12]: https://ci.appveyor.com/project/doctrine/dbal/branch/2.12.x
+  [AppVeyor 2.12 image]: https://ci.appveyor.com/api/projects/status/i88kitq8qpbm0vie/branch/2.12.x?svg=true
+  [GA 2.12]: https://github.com/doctrine/dbal/actions?query=workflow%3A%22Continuous+Integration%22+branch%3A2.12.x
+  [GA 2.12 image]: https://github.com/doctrine/dbal/workflows/Continuous%20Integration/badge.svg?branch=2.12.x
Index: vendor/laminas/laminas-code/src/Scanner/TokenArrayScanner.php
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?php\n\n/**\n * @see       https://github.com/laminas/laminas-code for the canonical source repository\n * @copyright https://github.com/laminas/laminas-code/blob/master/COPYRIGHT.md\n * @license   https://github.com/laminas/laminas-code/blob/master/LICENSE.md New BSD License\n */\n\nnamespace Laminas\\Code\\Scanner;\n\nuse Laminas\\Code\\Annotation\\AnnotationManager;\nuse Laminas\\Code\\Exception;\nuse Laminas\\Code\\NameInformation;\n\nuse function array_shift;\nuse function array_slice;\nuse function in_array;\nuse function is_array;\nuse function is_int;\nuse function is_string;\n\nclass TokenArrayScanner implements ScannerInterface\n{\n    /**\n     * @var bool\n     */\n    protected $isScanned = false;\n\n    /**\n     * @var array\n     */\n    protected $tokens = [];\n\n    /**\n     * @var null\n     */\n    protected $docComment;\n\n    /**\n     * @var NameInformation\n     */\n    protected $nameInformation;\n\n    /**\n     * @var array\n     */\n    protected $infos = [];\n\n    /**\n     * @var AnnotationManager\n     */\n    protected $annotationManager;\n\n    /**\n     * @param null|array $tokens\n     * @param null|AnnotationManager $annotationManager\n     */\n    public function __construct($tokens, AnnotationManager $annotationManager = null)\n    {\n        $this->tokens            = $tokens;\n        $this->annotationManager = $annotationManager;\n    }\n\n    /**\n     * @return AnnotationManager\n     */\n    public function getAnnotationManager()\n    {\n        return $this->annotationManager;\n    }\n\n    /**\n     * Get doc comment\n     *\n     * @todo Assignment of $this->docComment should probably be done in scan()\n     *       and then $this->getDocComment() just retrieves it.\n     *\n     * @return string|null\n     */\n    public function getDocComment()\n    {\n        foreach ($this->tokens as $token) {\n            $type    = $token[0];\n            $value   = $token[1];\n            if (($type == T_OPEN_TAG) || ($type == T_WHITESPACE)) {\n                continue;\n            } elseif ($type == T_DOC_COMMENT) {\n                $this->docComment = $value;\n\n                return $this->docComment;\n            } else {\n                // Only whitespace is allowed before file docblocks\n                return;\n            }\n        }\n    }\n\n    /**\n     * @return array\n     */\n    public function getNamespaces()\n    {\n        $this->scan();\n\n        $namespaces = [];\n        foreach ($this->infos as $info) {\n            if ($info['type'] == 'namespace') {\n                $namespaces[] = $info['namespace'];\n            }\n        }\n\n        return $namespaces;\n    }\n\n    /**\n     * @param  null|string $namespace\n     * @return array|null\n     */\n    public function getUses($namespace = null)\n    {\n        $this->scan();\n\n        return $this->getUsesNoScan($namespace);\n    }\n\n    /**\n     * @return void\n     */\n    public function getIncludes()\n    {\n        $this->scan();\n        // @todo Implement getIncludes() in TokenArrayScanner\n    }\n\n    /**\n     * @return array\n     */\n    public function getClassNames()\n    {\n        $this->scan();\n\n        $return = [];\n        foreach ($this->infos as $info) {\n            if ($info['type'] != 'class') {\n                continue;\n            }\n\n            $return[] = $info['name'];\n        }\n\n        return $return;\n    }\n\n    /**\n     * @return ClassScanner[]\n     */\n    public function getClasses()\n    {\n        $this->scan();\n\n        $return = [];\n        foreach ($this->infos as $info) {\n            if ($info['type'] != 'class') {\n                continue;\n            }\n\n            $return[] = $this->getClass($info['name']);\n        }\n\n        return $return;\n    }\n\n    /**\n     * Return the class object from this scanner\n     *\n     * @param  string|int $name\n     * @throws Exception\\InvalidArgumentException\n     * @return ClassScanner|false\n     */\n    public function getClass($name)\n    {\n        $this->scan();\n\n        if (is_int($name)) {\n            $info = $this->infos[$name];\n            if ($info['type'] != 'class') {\n                throw new Exception\\InvalidArgumentException('Index of info offset is not about a class');\n            }\n        } elseif (is_string($name)) {\n            $classFound = false;\n            foreach ($this->infos as $info) {\n                if ($info['type'] === 'class' && $info['name'] === $name) {\n                    $classFound = true;\n                    break;\n                }\n            }\n\n            if (! $classFound) {\n                return false;\n            }\n        }\n\n        return new ClassScanner(\n            array_slice(\n                $this->tokens,\n                $info['tokenStart'],\n                $info['tokenEnd'] - $info['tokenStart'] + 1\n            ), // zero indexed array\n            new NameInformation($info['namespace'], $info['uses'])\n        );\n    }\n\n    /**\n     * @param  string $className\n     * @return bool|null|NameInformation\n     */\n    public function getClassNameInformation($className)\n    {\n        $this->scan();\n\n        $classFound = false;\n        foreach ($this->infos as $info) {\n            if ($info['type'] === 'class' && $info['name'] === $className) {\n                $classFound = true;\n                break;\n            }\n        }\n\n        if (! $classFound) {\n            return false;\n        }\n\n        if (! isset($info)) {\n            return;\n        }\n\n        return new NameInformation($info['namespace'], $info['uses']);\n    }\n\n    /**\n     * @return array\n     */\n    public function getFunctionNames()\n    {\n        $this->scan();\n        $functionNames = [];\n        foreach ($this->infos as $info) {\n            if ($info['type'] == 'function') {\n                $functionNames[] = $info['name'];\n            }\n        }\n\n        return $functionNames;\n    }\n\n    /**\n     * @return array\n     */\n    public function getFunctions()\n    {\n        $this->scan();\n\n        $functions = [];\n//        foreach ($this->infos as $info) {\n//            if ($info['type'] == 'function') {\n//                // @todo $functions[] = new FunctionScanner($info['name']);\n//            }\n//        }\n\n        return $functions;\n    }\n\n    /**\n     * Export\n     *\n     * @param mixed $tokens\n     */\n    public static function export($tokens)\n    {\n        // @todo\n    }\n\n    public function __toString()\n    {\n        // @todo\n    }\n\n    /**\n     * Scan\n     *\n     * @todo: $this->docComment should be assigned for valid docblock during\n     *        the scan instead of $this->getDocComment() (starting with\n     *        T_DOC_COMMENT case)\n     *\n     * @throws Exception\\RuntimeException\n     */\n    protected function scan()\n    {\n        if ($this->isScanned) {\n            return;\n        }\n\n        if (! $this->tokens) {\n            throw new Exception\\RuntimeException('No tokens were provided');\n        }\n\n        /**\n         * Variables & Setup\n         */\n        $tokens          = &$this->tokens; // localize\n        $infos           = &$this->infos; // localize\n        $tokenIndex      = null;\n        $token           = null;\n        $tokenType       = null;\n        $tokenContent    = null;\n        $tokenLine       = null;\n        $namespace       = null;\n        $docCommentIndex = false;\n        $infoIndex       = 0;\n\n        /*\n         * MACRO creation\n         */\n        $MACRO_TOKEN_ADVANCE = function () use (\n            &$tokens,\n            &$tokenIndex,\n            &$token,\n            &$tokenType,\n            &$tokenContent,\n            &$tokenLine\n        ) {\n            $tokenIndex = $tokenIndex === null ? 0 : $tokenIndex + 1;\n            if (! isset($tokens[$tokenIndex])) {\n                $token        = false;\n                $tokenContent = false;\n                $tokenType    = false;\n                $tokenLine    = false;\n\n                return false;\n            }\n            if (is_string($tokens[$tokenIndex]) && $tokens[$tokenIndex] === '\"') {\n                do {\n                    $tokenIndex++;\n                } while (! (is_string($tokens[$tokenIndex]) && $tokens[$tokenIndex] === '\"'));\n            }\n            $token = $tokens[$tokenIndex];\n            if (is_array($token)) {\n                list($tokenType, $tokenContent, $tokenLine) = $token;\n            } else {\n                $tokenType    = null;\n                $tokenContent = $token;\n            }\n\n            return $tokenIndex;\n        };\n        $MACRO_TOKEN_LOGICAL_START_INDEX = function () use (&$tokenIndex, &$docCommentIndex) {\n            return $docCommentIndex === false ? $tokenIndex : $docCommentIndex;\n        };\n        $MACRO_DOC_COMMENT_START = function () use (&$tokenIndex, &$docCommentIndex) {\n            $docCommentIndex = $tokenIndex;\n\n            return $docCommentIndex;\n        };\n        $MACRO_DOC_COMMENT_VALIDATE = function () use (&$tokenType, &$docCommentIndex) {\n            static $validTrailingTokens = null;\n            if ($validTrailingTokens === null) {\n                $validTrailingTokens = [T_WHITESPACE, T_FINAL, T_ABSTRACT, T_INTERFACE, T_CLASS, T_FUNCTION];\n            }\n            if ($docCommentIndex !== false && ! in_array($tokenType, $validTrailingTokens)) {\n                $docCommentIndex = false;\n            }\n\n            return $docCommentIndex;\n        };\n        $MACRO_INFO_ADVANCE = function () use (&$infoIndex, &$infos, &$tokenIndex, &$tokenLine) {\n            $infos[$infoIndex]['tokenEnd'] = $tokenIndex;\n            $infos[$infoIndex]['lineEnd']  = $tokenLine;\n            $infoIndex++;\n\n            return $infoIndex;\n        };\n\n        /**\n         * START FINITE STATE MACHINE FOR SCANNING TOKENS\n         */\n        // Initialize token\n        $MACRO_TOKEN_ADVANCE();\n\n        SCANNER_TOP:\n\n        if ($token === false) {\n            goto SCANNER_END;\n        }\n\n        // Validate current doc comment index\n        $MACRO_DOC_COMMENT_VALIDATE();\n\n        switch ($tokenType) {\n            case T_DOC_COMMENT:\n                $MACRO_DOC_COMMENT_START();\n                goto SCANNER_CONTINUE;\n                // goto no break needed\n\n            case T_NAMESPACE:\n                $infos[$infoIndex] = [\n                    'type'       => 'namespace',\n                    'tokenStart' => $MACRO_TOKEN_LOGICAL_START_INDEX(),\n                    'tokenEnd'   => null,\n                    'lineStart'  => $token[2],\n                    'lineEnd'    => null,\n                    'namespace'  => null,\n                ];\n\n                // start processing with next token\n                if ($MACRO_TOKEN_ADVANCE() === false) {\n                    goto SCANNER_END;\n                }\n\n                SCANNER_NAMESPACE_TOP:\n\n                if (($tokenType === null && $tokenContent === ';') || $tokenContent === '{') {\n                    goto SCANNER_NAMESPACE_END;\n                }\n\n                if ($tokenType === T_WHITESPACE) {\n                    goto SCANNER_NAMESPACE_CONTINUE;\n                }\n\n                if ($tokenType === T_NS_SEPARATOR || $tokenType === T_STRING) {\n                    $infos[$infoIndex]['namespace'] .= $tokenContent;\n                }\n\n                SCANNER_NAMESPACE_CONTINUE:\n\n                if ($MACRO_TOKEN_ADVANCE() === false) {\n                    goto SCANNER_END;\n                }\n                goto SCANNER_NAMESPACE_TOP;\n\n                SCANNER_NAMESPACE_END:\n\n                $namespace = $infos[$infoIndex]['namespace'];\n\n                $MACRO_INFO_ADVANCE();\n                goto SCANNER_CONTINUE;\n                // goto no break needed\n\n            case T_USE:\n                $infos[$infoIndex] = [\n                    'type'       => 'use',\n                    'tokenStart' => $MACRO_TOKEN_LOGICAL_START_INDEX(),\n                    'tokenEnd'   => null,\n                    'lineStart'  => $tokens[$tokenIndex][2],\n                    'lineEnd'    => null,\n                    'namespace'  => $namespace,\n                    'statements' => [\n                        0 => [\n                            'use' => null,\n                            'as'  => null,\n                        ],\n                    ],\n                ];\n\n                $useStatementIndex = 0;\n                $useAsContext      = false;\n\n                // start processing with next token\n                if ($MACRO_TOKEN_ADVANCE() === false) {\n                    goto SCANNER_END;\n                }\n\n                SCANNER_USE_TOP:\n\n                if ($tokenType === null) {\n                    if ($tokenContent === ';') {\n                        goto SCANNER_USE_END;\n                    } elseif ($tokenContent === ',') {\n                        $useAsContext = false;\n                        $useStatementIndex++;\n                        $infos[$infoIndex]['statements'][$useStatementIndex] = [\n                            'use' => null,\n                            'as'  => null,\n                        ];\n                    }\n                }\n\n                // ANALYZE\n                if ($tokenType !== null) {\n                    if ($tokenType == T_AS) {\n                        $useAsContext = true;\n                        goto SCANNER_USE_CONTINUE;\n                    }\n\n                    if ($tokenType == T_NS_SEPARATOR || $tokenType == T_STRING) {\n                        if ($useAsContext == false) {\n                            $infos[$infoIndex]['statements'][$useStatementIndex]['use'] .= $tokenContent;\n                        } else {\n                            $infos[$infoIndex]['statements'][$useStatementIndex]['as'] = $tokenContent;\n                        }\n                    }\n                }\n\n                SCANNER_USE_CONTINUE:\n\n                if ($MACRO_TOKEN_ADVANCE() === false) {\n                    goto SCANNER_END;\n                }\n                goto SCANNER_USE_TOP;\n\n                SCANNER_USE_END:\n\n                $MACRO_INFO_ADVANCE();\n                goto SCANNER_CONTINUE;\n                // goto no break needed\n\n            case T_INCLUDE:\n            case T_INCLUDE_ONCE:\n            case T_REQUIRE:\n            case T_REQUIRE_ONCE:\n                // Static for performance\n                static $includeTypes = [\n                    T_INCLUDE      => 'include',\n                    T_INCLUDE_ONCE => 'include_once',\n                    T_REQUIRE      => 'require',\n                    T_REQUIRE_ONCE => 'require_once',\n                ];\n\n                $infos[$infoIndex] = [\n                    'type'        => 'include',\n                    'tokenStart'  => $MACRO_TOKEN_LOGICAL_START_INDEX(),\n                    'tokenEnd'    => null,\n                    'lineStart'   => $tokens[$tokenIndex][2],\n                    'lineEnd'     => null,\n                    'includeType' => $includeTypes[$tokens[$tokenIndex][0]],\n                    'path'        => '',\n                ];\n\n                // start processing with next token\n                if ($MACRO_TOKEN_ADVANCE() === false) {\n                    goto SCANNER_END;\n                }\n\n                SCANNER_INCLUDE_TOP:\n\n                if ($tokenType === null && $tokenContent === ';') {\n                    goto SCANNER_INCLUDE_END;\n                }\n\n                $infos[$infoIndex]['path'] .= $tokenContent;\n\n                SCANNER_INCLUDE_CONTINUE:\n\n                if ($MACRO_TOKEN_ADVANCE() === false) {\n                    goto SCANNER_END;\n                }\n                goto SCANNER_INCLUDE_TOP;\n\n                SCANNER_INCLUDE_END:\n\n                $MACRO_INFO_ADVANCE();\n                goto SCANNER_CONTINUE;\n                // goto no break needed\n\n            case T_FUNCTION:\n            case T_FINAL:\n            case T_ABSTRACT:\n            case T_CLASS:\n            case T_INTERFACE:\n            case T_TRAIT:\n                $infos[$infoIndex] = [\n                    'type'        => $tokenType === T_FUNCTION ? 'function' : 'class',\n                    'tokenStart'  => $MACRO_TOKEN_LOGICAL_START_INDEX(),\n                    'tokenEnd'    => null,\n                    'lineStart'   => $tokens[$tokenIndex][2],\n                    'lineEnd'     => null,\n                    'namespace'   => $namespace,\n                    'uses'        => $this->getUsesNoScan($namespace),\n                    'name'        => null,\n                    'shortName'   => null,\n                ];\n\n                $classBraceCount = 0;\n\n                // start processing with current token\n\n                SCANNER_CLASS_TOP:\n\n                // process the name\n                if ($infos[$infoIndex]['shortName'] == ''\n                    && (($tokenType === T_CLASS\n                            || $tokenType === T_INTERFACE\n                            || $tokenType === T_TRAIT)\n                        && $infos[$infoIndex]['type'] === 'class'\n                        || ($tokenType === T_FUNCTION && $infos[$infoIndex]['type'] === 'function'))\n                ) {\n                    $infos[$infoIndex]['shortName'] = is_array($tokens[$tokenIndex + 2])\n                        ? $tokens[$tokenIndex + 2][1]\n                        : $tokens[$tokenIndex + 2];\n                    $infos[$infoIndex]['name']      = ($namespace !== null\n                        ? $namespace . '\\\\'\n                        : '') . $infos[$infoIndex]['shortName'];\n                }\n\n                if ($tokenType === null) {\n                    if ($tokenContent == '{') {\n                        $classBraceCount++;\n                    }\n                    if ($tokenContent == '}') {\n                        $classBraceCount--;\n                        if ($classBraceCount === 0) {\n                            goto SCANNER_CLASS_END;\n                        }\n                    }\n                }\n\n                SCANNER_CLASS_CONTINUE:\n\n                if ($MACRO_TOKEN_ADVANCE() === false) {\n                    goto SCANNER_END;\n                }\n                goto SCANNER_CLASS_TOP;\n\n                SCANNER_CLASS_END:\n\n                $MACRO_INFO_ADVANCE();\n                goto SCANNER_CONTINUE;\n                // goto no break needed\n        }\n\n        SCANNER_CONTINUE:\n\n        if ($MACRO_TOKEN_ADVANCE() === false) {\n            goto SCANNER_END;\n        }\n        goto SCANNER_TOP;\n\n        SCANNER_END:\n\n        /**\n         * END FINITE STATE MACHINE FOR SCANNING TOKENS\n         */\n        $this->isScanned = true;\n    }\n\n    /**\n     * Check for namespace\n     *\n     * @param string $namespace\n     * @return bool\n     */\n    public function hasNamespace($namespace)\n    {\n        $this->scan();\n\n        foreach ($this->infos as $info) {\n            if ($info['type'] == 'namespace' && $info['namespace'] == $namespace) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    /**\n     * @param  string $namespace\n     * @return null|array\n     * @throws Exception\\InvalidArgumentException\n     */\n    protected function getUsesNoScan($namespace)\n    {\n        $namespaces = [];\n        foreach ($this->infos as $info) {\n            if ($info['type'] == 'namespace') {\n                $namespaces[] = $info['namespace'];\n            }\n        }\n\n        if ($namespace === null) {\n            $namespace = array_shift($namespaces);\n        } elseif (! is_string($namespace)) {\n            throw new Exception\\InvalidArgumentException('Invalid namespace provided');\n        } elseif (! in_array($namespace, $namespaces)) {\n            return;\n        }\n\n        $uses = [];\n        foreach ($this->infos as $info) {\n            if ($info['type'] !== 'use') {\n                continue;\n            }\n            foreach ($info['statements'] as $statement) {\n                if ($info['namespace'] == $namespace) {\n                    $uses[] = $statement;\n                }\n            }\n        }\n\n        return $uses;\n    }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- vendor/laminas/laminas-code/src/Scanner/TokenArrayScanner.php	(revision a449d8a584af7c2722ad0d48f553c0917ddead6e)
+++ vendor/laminas/laminas-code/src/Scanner/TokenArrayScanner.php	(date 1605132687000)
@@ -380,6 +380,14 @@
             return $infoIndex;
         };
 
+        // ensure php backwards compatibility
+        if (! defined('T_NAME_QUALIFIED')) {
+            define('T_NAME_QUALIFIED', 24001);
+        }
+        if (! defined('T_NAME_FULLY_QUALIFIED')) {
+            define('T_NAME_FULLY_QUALIFIED', 24002);
+        }
+
         /**
          * START FINITE STATE MACHINE FOR SCANNING TOKENS
          */
@@ -426,7 +434,11 @@
                     goto SCANNER_NAMESPACE_CONTINUE;
                 }
 
-                if ($tokenType === T_NS_SEPARATOR || $tokenType === T_STRING) {
+                if ($tokenType === T_NS_SEPARATOR
+                    || $tokenType === T_STRING
+                    || $tokenType === T_NAME_QUALIFIED
+                    || $tokenType === T_NAME_FULLY_QUALIFIED
+                ) {
                     $infos[$infoIndex]['namespace'] .= $tokenContent;
                 }
 
@@ -491,7 +503,11 @@
                         goto SCANNER_USE_CONTINUE;
                     }
 
-                    if ($tokenType == T_NS_SEPARATOR || $tokenType == T_STRING) {
+                    if ($tokenType == T_NS_SEPARATOR
+                        || $tokenType == T_STRING
+                        || $tokenType == T_NAME_QUALIFIED
+                        || $tokenType == T_NAME_FULLY_QUALIFIED
+                    ) {
                         if ($useAsContext == false) {
                             $infos[$infoIndex]['statements'][$useStatementIndex]['use'] .= $tokenContent;
                         } else {
Index: vendor/composer/package-versions-deprecated/src/PackageVersions/Versions.php
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?php\n\ndeclare(strict_types=1);\n\nnamespace PackageVersions;\n\nuse Composer\\InstalledVersions;\nuse OutOfBoundsException;\n\nclass_exists(InstalledVersions::class);\n\n/**\n * This class is generated by composer/package-versions-deprecated, specifically by\n * @see \\PackageVersions\\Installer\n *\n * This file is overwritten at every run of `composer install` or `composer update`.\n *\n * @deprecated in favor of the Composer\\InstalledVersions class provided by Composer 2. Require composer-runtime-api:^2 to ensure it is present.\n */\nfinal class Versions\n{\n    /**\n     * @deprecated please use {@see self::rootPackageName()} instead.\n     *             This constant will be removed in version 2.0.0.\n     */\n    const ROOT_PACKAGE_NAME = '__root__';\n\n    /**\n     * Array of all available composer packages.\n     * Dont read this array from your calling code, but use the \\PackageVersions\\Versions::getVersion() method instead.\n     *\n     * @var array<string, string>\n     * @internal\n     */\n    const VERSIONS          = array (\n  'composer/package-versions-deprecated' => '1.11.99.1@7413f0b55a051e89485c5cb9f765fe24bb02a7b6',\n  'doctrine/annotations' => '1.11.1@ce77a7ba1770462cd705a91a151b6c3746f9c6ad',\n  'doctrine/cache' => '1.10.2@13e3381b25847283a91948d04640543941309727',\n  'doctrine/collections' => '1.6.7@55f8b799269a1a472457bd1a41b4f379d4cfba4a',\n  'doctrine/common' => '3.0.2@a3c6479858989e242a2465972b4f7a8642baf0d4',\n  'doctrine/dbal' => '2.12.0@c6d37b4c42aaa3c3ee175f05eca68056f4185646',\n  'doctrine/doctrine-bundle' => '2.2.1@9e07bb1ff35d35d9ec4597b79e5d05502d7d4d43',\n  'doctrine/doctrine-migrations-bundle' => '3.0.1@96e730b0ffa0bb39c0f913c1966213f1674bf249',\n  'doctrine/event-manager' => '1.1.1@41370af6a30faa9dc0368c4a6814d596e81aba7f',\n  'doctrine/inflector' => '1.4.3@4650c8b30c753a76bf44fb2ed00117d6f367490c',\n  'doctrine/instantiator' => '1.3.1@f350df0268e904597e3bd9c4685c53e0e333feea',\n  'doctrine/lexer' => '1.2.1@e864bbf5904cb8f5bb334f99209b48018522f042',\n  'doctrine/migrations' => '3.0.1@69eaf2ca5bc48357b43ddbdc31ccdffc0e2a0882',\n  'doctrine/orm' => '2.7.4@7d84a4998091ece4d645253ac65de9f879eeed2f',\n  'doctrine/persistence' => '2.1.0@9899c16934053880876b920a3b8b02ed2337ac1d',\n  'doctrine/sql-formatter' => '1.1.1@56070bebac6e77230ed7d306ad13528e60732871',\n  'egulias/email-validator' => '2.1.23@5fa792ad1853ae2bc60528dd3e5cbf4542d3c1df',\n  'firebase/php-jwt' => 'v5.2.0@feb0e820b8436873675fd3aca04f3728eb2185cb',\n  'google/apiclient' => 'v2.8.3@81696e6206322e38c643cfcc96c4494ccfef8a32',\n  'google/apiclient-services' => 'v0.154@7f44a314836c444b7894d648c1c49f83fb9d37ca',\n  'google/auth' => 'v1.14.3@c1503299c779af0cbc99b43788f75930988852cf',\n  'guzzlehttp/guzzle' => '7.2.0@0aa74dfb41ae110835923ef10a9d803a22d50e79',\n  'guzzlehttp/promises' => '1.4.0@60d379c243457e073cff02bc323a2a86cb355631',\n  'guzzlehttp/psr7' => '1.7.0@53330f47520498c0ae1f61f7e2c90f55690c06a3',\n  'knpuniversity/oauth2-client-bundle' => 'v2.5.1@5e5919bf321f76121df93c55fdbf82a0c481bd5f',\n  'laminas/laminas-code' => '3.4.1@1cb8f203389ab1482bf89c0e70a04849bacd7766',\n  'laminas/laminas-eventmanager' => '3.3.0@1940ccf30e058b2fd66f5a9d696f1b5e0027b082',\n  'laminas/laminas-zendframework-bridge' => '1.1.1@6ede70583e101030bcace4dcddd648f760ddf642',\n  'league/oauth2-client' => '2.6.0@badb01e62383430706433191b82506b6df24ad98',\n  'monolog/monolog' => '2.1.1@f9eee5cec93dfb313a38b6b288741e84e53f02d5',\n  'ocramius/proxy-manager' => '2.8.0@ac1dd414fd114cfc0da9930e0ab46063c2f5e62a',\n  'phpdocumentor/reflection-common' => '2.2.0@1d01c49d4ed62f25aa84a747ad35d5a16924662b',\n  'phpdocumentor/reflection-docblock' => '5.2.2@069a785b2141f5bcf49f3e353548dc1cce6df556',\n  'phpdocumentor/type-resolver' => '1.4.0@6a467b8989322d92aa1c8bf2bebcc6e5c2ba55c0',\n  'phpseclib/phpseclib' => '2.0.29@497856a8d997f640b4a516062f84228a772a48a8',\n  'psr/cache' => '1.0.1@d11b50ad223250cf17b86e38383413f5a6764bf8',\n  'psr/container' => '1.0.0@b7ce3b176482dbbc1245ebf52b181af44c2cf55f',\n  'psr/event-dispatcher' => '1.0.0@dbefd12671e8a14ec7f180cab83036ed26714bb0',\n  'psr/http-client' => '1.0.1@2dfb5f6c5eff0e91e20e913f8c5452ed95b86621',\n  'psr/http-message' => '1.0.1@f6561bf28d520154e4b0ec72be95418abe6d9363',\n  'psr/link' => '1.0.0@eea8e8662d5cd3ae4517c9b864493f59fca95562',\n  'psr/log' => '1.1.3@0f73288fd15629204f9d42b7055f72dacbe811fc',\n  'ralouphie/getallheaders' => '3.0.3@120b605dfeb996808c31b6477290a714d356e822',\n  'sensio/framework-extra-bundle' => 'v5.6.1@430d14c01836b77c28092883d195a43ce413ee32',\n  'swiftmailer/swiftmailer' => 'v6.2.3@149cfdf118b169f7840bbe3ef0d4bc795d1780c9',\n  'symfony/asset' => 'v5.1.8@19c59713f750642206b21a1edec5c18dea80f979',\n  'symfony/cache' => 'v5.1.8@d7bc33e9f9028f49f87057e7944c076d9593f046',\n  'symfony/cache-contracts' => 'v2.2.0@8034ca0b61d4dd967f3698aaa1da2507b631d0cb',\n  'symfony/config' => 'v5.1.8@11baeefa4c179d6908655a7b6be728f62367c193',\n  'symfony/console' => 'v5.1.8@e0b2c29c0fa6a69089209bbe8fcff4df2a313d0e',\n  'symfony/dependency-injection' => 'v5.1.8@829ca6bceaf68036a123a13a979f3c89289eae78',\n  'symfony/deprecation-contracts' => 'v2.2.0@5fa56b4074d1ae755beb55617ddafe6f5d78f665',\n  'symfony/doctrine-bridge' => 'v5.1.8@d01f0ec8b1225bd955d079f007c25191d93867d0',\n  'symfony/dotenv' => 'v5.1.8@29ac2a3e538da61780a769827c716738ce7accbb',\n  'symfony/error-handler' => 'v5.1.8@a154f2b12fd1ec708559ba73ed58bd1304e55718',\n  'symfony/event-dispatcher' => 'v5.1.8@26f4edae48c913fc183a3da0553fe63bdfbd361a',\n  'symfony/event-dispatcher-contracts' => 'v2.2.0@0ba7d54483095a198fa51781bc608d17e84dffa2',\n  'symfony/expression-language' => 'v5.1.8@2c3f5e7cf4495d9033cc2d212da6ccde0d22b067',\n  'symfony/filesystem' => 'v5.1.8@df08650ea7aee2d925380069c131a66124d79177',\n  'symfony/finder' => 'v5.1.8@e70eb5a69c2ff61ea135a13d2266e8914a67b3a0',\n  'symfony/flex' => 'v1.10.0@e38520236bdc911c2f219634b485bc328746e980',\n  'symfony/form' => 'v5.1.8@3f61496220b9f8672ede9b9acfb87a06c0c752f2',\n  'symfony/framework-bundle' => 'v5.1.8@b5f961afc6cd1923c49cac0993c65bf5eee27d86',\n  'symfony/google-mailer' => 'v5.1.8@9f459cbd57dd33a70fd8aa475575641ea4ae3369',\n  'symfony/http-client' => 'v5.1.8@97a6a1f9f5bb3a6094833107b58a72bc9a9165cc',\n  'symfony/http-client-contracts' => 'v2.3.1@41db680a15018f9c1d4b23516059633ce280ca33',\n  'symfony/http-foundation' => 'v5.1.8@a2860ec970404b0233ab1e59e0568d3277d32b6f',\n  'symfony/http-kernel' => 'v5.1.8@a13b3c4d994a4fd051f4c6800c5e33c9508091dd',\n  'symfony/intl' => 'v5.1.8@e353c6c37afa1ff90739b3941f60ff9fa650eec3',\n  'symfony/mailer' => 'v5.1.8@fa5cc9f894a5d082e7e46bfdd44f5dd83529f0ba',\n  'symfony/mime' => 'v5.1.8@f5485a92c24d4bcfc2f3fc648744fb398482ff1b',\n  'symfony/monolog-bridge' => 'v5.1.8@0c507eddb704a3154b53f066cc0b587c4586c868',\n  'symfony/monolog-bundle' => 'v3.6.0@e495f5c7e4e672ffef4357d4a4d85f010802f940',\n  'symfony/notifier' => 'v5.1.8@7beeb0122548109126aa74f97b7d03c0f95e594d',\n  'symfony/options-resolver' => 'v5.1.8@c6a02905e4ffc7a1498e8ee019db2b477cd1cc02',\n  'symfony/polyfill-intl-grapheme' => 'v1.20.0@c7cf3f858ec7d70b89559d6e6eb1f7c2517d479c',\n  'symfony/polyfill-intl-icu' => 'v1.20.0@c44d5bf6a75eed79555c6bf37505c6d39559353e',\n  'symfony/polyfill-intl-idn' => 'v1.20.0@3b75acd829741c768bc8b1f84eb33265e7cc5117',\n  'symfony/polyfill-intl-normalizer' => 'v1.20.0@727d1096295d807c309fb01a851577302394c897',\n  'symfony/polyfill-mbstring' => 'v1.20.0@39d483bdf39be819deabf04ec872eb0b2410b531',\n  'symfony/polyfill-php73' => 'v1.20.0@8ff431c517be11c78c48a39a66d37431e26a6bed',\n  'symfony/polyfill-php80' => 'v1.20.0@e70aa8b064c5b72d3df2abd5ab1e90464ad009de',\n  'symfony/process' => 'v5.1.8@f00872c3f6804150d6a0f73b4151daab96248101',\n  'symfony/property-access' => 'v5.1.8@5d77df9a88600797d02c7937c153965ba3537933',\n  'symfony/property-info' => 'v5.1.8@fc15c51f829887b62a94a917ba793f51e80ea3e1',\n  'symfony/routing' => 'v5.1.8@d6ceee2a37b61b41079005207bf37746d1bfe71f',\n  'symfony/security-bundle' => 'v5.1.8@8921cdb1057f615b8340a352195f4a684c876893',\n  'symfony/security-core' => 'v5.1.8@13f97112f3a7f7877460777602d4d1e7a21a5f39',\n  'symfony/security-csrf' => 'v5.1.8@6d8ea23a4f0b88a13c254d007f3d814ed882f42a',\n  'symfony/security-guard' => 'v5.1.8@076e2af7e61723ff50b281806b4d0f5e4df4e6b3',\n  'symfony/security-http' => 'v5.1.8@01fc5b3a641ea851624555793c19e6cec11b596f',\n  'symfony/serializer' => 'v5.1.8@20d3c6c58c41344a427488c0d2902bfbfbe17ddb',\n  'symfony/service-contracts' => 'v2.2.0@d15da7ba4957ffb8f1747218be9e1a121fd298a1',\n  'symfony/stopwatch' => 'v5.1.8@3d9f57c89011f0266e6b1d469e5c0110513859d5',\n  'symfony/string' => 'v5.1.8@a97573e960303db71be0dd8fda9be3bca5e0feea',\n  'symfony/swiftmailer-bundle' => 'v3.5.1@933be6a3196fb354615290f53ff7ff61e0bdde58',\n  'symfony/translation' => 'v5.1.8@27980838fd261e04379fa91e94e81e662fe5a1b6',\n  'symfony/translation-contracts' => 'v2.3.0@e2eaa60b558f26a4b0354e1bbb25636efaaad105',\n  'symfony/twig-bridge' => 'v5.1.8@874735a8c97963af2009e0eaee55b17fc0846db2',\n  'symfony/twig-bundle' => 'v5.1.8@370bb30a9e8dc2b0c29791eec300b0b529bd783f',\n  'symfony/validator' => 'v5.1.8@360acadab7edcdca9005c4ad3b535f9c20db62fb',\n  'symfony/var-dumper' => 'v5.1.8@4e13f3fcefb1fcaaa5efb5403581406f4e840b9a',\n  'symfony/var-exporter' => 'v5.1.8@b4048bfc6248413592462c029381bdb2f7b6525f',\n  'symfony/web-link' => 'v5.1.8@e805314ad8c4298d9bfc75335e35f83d6db2f43f',\n  'symfony/yaml' => 'v5.1.8@f284e032c3cefefb9943792132251b79a6127ca6',\n  'twig/extra-bundle' => 'v3.1.1@a7c5799cf742ab0827f5d32df37528ee8bf5a233',\n  'twig/twig' => 'v3.1.1@b02fa41f3783a2616eccef7b92fbc2343ffed737',\n  'webimpress/safe-writer' => '2.1.0@5cfafdec5873c389036f14bf832a5efc9390dcdd',\n  'webmozart/assert' => '1.9.1@bafc69caeb4d49c39fd0779086c03a3738cbb389',\n  'doctrine/data-fixtures' => '1.4.4@16a03fadb5473f49aad70384002dfd5012fe680e',\n  'doctrine/doctrine-fixtures-bundle' => '3.4.0@870189619a7770f468ffb0b80925302e065a3b34',\n  'nikic/php-parser' => 'v4.10.2@658f1be311a230e0907f5dfe0213742aff0596de',\n  'symfony/browser-kit' => 'v5.1.8@65b7d208280f2700f43ba44a8059a25d7b01347b',\n  'symfony/css-selector' => 'v5.1.8@6cbebda22ffc0d4bb8fea0c1311c2ca54c4c8fa0',\n  'symfony/debug-bundle' => 'v5.1.8@183a36bdb251eeeeff640ffbceea3403ac5c8d40',\n  'symfony/dom-crawler' => 'v5.1.8@0969122fe144dd8ab2e8c98c7e03eedc621b368c',\n  'symfony/maker-bundle' => 'v1.23.0@ffaee624a20a462ec2da82942d3c9d8fc8dd1421',\n  'symfony/phpunit-bridge' => 'v5.1.8@61744927348cd391ac12f7c6b70544991275845c',\n  'symfony/web-profiler-bundle' => 'v5.1.8@d94865ad9365ee4ac0d9bd24d9e90410e7ec6185',\n  'paragonie/random_compat' => '2.*@e03c23d9d8f4dd966af9de10b688d8a945e76041',\n  'symfony/polyfill-ctype' => '*@e03c23d9d8f4dd966af9de10b688d8a945e76041',\n  'symfony/polyfill-iconv' => '*@e03c23d9d8f4dd966af9de10b688d8a945e76041',\n  'symfony/polyfill-php72' => '*@e03c23d9d8f4dd966af9de10b688d8a945e76041',\n  'symfony/polyfill-php71' => '*@e03c23d9d8f4dd966af9de10b688d8a945e76041',\n  'symfony/polyfill-php70' => '*@e03c23d9d8f4dd966af9de10b688d8a945e76041',\n  'symfony/polyfill-php56' => '*@e03c23d9d8f4dd966af9de10b688d8a945e76041',\n  '__root__' => 'dev-main@e03c23d9d8f4dd966af9de10b688d8a945e76041',\n);\n\n    private function __construct()\n    {\n    }\n\n    /**\n     * @psalm-pure\n     *\n     * @psalm-suppress ImpureMethodCall we know that {@see InstalledVersions} interaction does not\n     *                                  cause any side effects here.\n     */\n    public static function rootPackageName() : string\n    {\n        if (!class_exists(InstalledVersions::class, false) || !InstalledVersions::getRawData()) {\n            return self::ROOT_PACKAGE_NAME;\n        }\n\n        return InstalledVersions::getRootPackage()['name'];\n    }\n\n    /**\n     * @throws OutOfBoundsException If a version cannot be located.\n     *\n     * @psalm-param key-of<self::VERSIONS> $packageName\n     * @psalm-pure\n     *\n     * @psalm-suppress ImpureMethodCall we know that {@see InstalledVersions} interaction does not\n     *                                  cause any side effects here.\n     */\n    public static function getVersion(string $packageName): string\n    {\n        if (class_exists(InstalledVersions::class, false) && InstalledVersions::getRawData()) {\n            return InstalledVersions::getPrettyVersion($packageName)\n                . '@' . InstalledVersions::getReference($packageName);\n        }\n\n        if (isset(self::VERSIONS[$packageName])) {\n            return self::VERSIONS[$packageName];\n        }\n\n        throw new OutOfBoundsException(\n            'Required package \"' . $packageName . '\" is not installed: check your ./vendor/composer/installed.json and/or ./composer.lock files'\n        );\n    }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- vendor/composer/package-versions-deprecated/src/PackageVersions/Versions.php	(revision a449d8a584af7c2722ad0d48f553c0917ddead6e)
+++ vendor/composer/package-versions-deprecated/src/PackageVersions/Versions.php	(date 1606322385145)
@@ -38,18 +38,18 @@
   'doctrine/cache' => '1.10.2@13e3381b25847283a91948d04640543941309727',
   'doctrine/collections' => '1.6.7@55f8b799269a1a472457bd1a41b4f379d4cfba4a',
   'doctrine/common' => '3.0.2@a3c6479858989e242a2465972b4f7a8642baf0d4',
-  'doctrine/dbal' => '2.12.0@c6d37b4c42aaa3c3ee175f05eca68056f4185646',
+  'doctrine/dbal' => '2.12.1@adce7a954a1c2f14f85e94aed90c8489af204086',
   'doctrine/doctrine-bundle' => '2.2.1@9e07bb1ff35d35d9ec4597b79e5d05502d7d4d43',
   'doctrine/doctrine-migrations-bundle' => '3.0.1@96e730b0ffa0bb39c0f913c1966213f1674bf249',
   'doctrine/event-manager' => '1.1.1@41370af6a30faa9dc0368c4a6814d596e81aba7f',
   'doctrine/inflector' => '1.4.3@4650c8b30c753a76bf44fb2ed00117d6f367490c',
-  'doctrine/instantiator' => '1.3.1@f350df0268e904597e3bd9c4685c53e0e333feea',
+  'doctrine/instantiator' => '1.4.0@d56bf6102915de5702778fe20f2de3b2fe570b5b',
   'doctrine/lexer' => '1.2.1@e864bbf5904cb8f5bb334f99209b48018522f042',
   'doctrine/migrations' => '3.0.1@69eaf2ca5bc48357b43ddbdc31ccdffc0e2a0882',
   'doctrine/orm' => '2.7.4@7d84a4998091ece4d645253ac65de9f879eeed2f',
   'doctrine/persistence' => '2.1.0@9899c16934053880876b920a3b8b02ed2337ac1d',
   'doctrine/sql-formatter' => '1.1.1@56070bebac6e77230ed7d306ad13528e60732871',
-  'egulias/email-validator' => '2.1.23@5fa792ad1853ae2bc60528dd3e5cbf4542d3c1df',
+  'egulias/email-validator' => '2.1.24@ca90a3291eee1538cd48ff25163240695bd95448',
   'firebase/php-jwt' => 'v5.2.0@feb0e820b8436873675fd3aca04f3728eb2185cb',
   'google/apiclient' => 'v2.8.3@81696e6206322e38c643cfcc96c4494ccfef8a32',
   'google/apiclient-services' => 'v0.154@7f44a314836c444b7894d648c1c49f83fb9d37ca',
@@ -57,8 +57,8 @@
   'guzzlehttp/guzzle' => '7.2.0@0aa74dfb41ae110835923ef10a9d803a22d50e79',
   'guzzlehttp/promises' => '1.4.0@60d379c243457e073cff02bc323a2a86cb355631',
   'guzzlehttp/psr7' => '1.7.0@53330f47520498c0ae1f61f7e2c90f55690c06a3',
-  'knpuniversity/oauth2-client-bundle' => 'v2.5.1@5e5919bf321f76121df93c55fdbf82a0c481bd5f',
-  'laminas/laminas-code' => '3.4.1@1cb8f203389ab1482bf89c0e70a04849bacd7766',
+  'knpuniversity/oauth2-client-bundle' => 'v2.6.0@a17cf5b059e8d67ef54a94ea277816a5d1810f90',
+  'laminas/laminas-code' => '3.5.0@cb90ef428da9260c2deaa827b037c20695f968ae',
   'laminas/laminas-eventmanager' => '3.3.0@1940ccf30e058b2fd66f5a9d696f1b5e0027b082',
   'laminas/laminas-zendframework-bridge' => '1.1.1@6ede70583e101030bcace4dcddd648f760ddf642',
   'league/oauth2-client' => '2.6.0@badb01e62383430706433191b82506b6df24ad98',
@@ -152,14 +152,14 @@
   'symfony/maker-bundle' => 'v1.23.0@ffaee624a20a462ec2da82942d3c9d8fc8dd1421',
   'symfony/phpunit-bridge' => 'v5.1.8@61744927348cd391ac12f7c6b70544991275845c',
   'symfony/web-profiler-bundle' => 'v5.1.8@d94865ad9365ee4ac0d9bd24d9e90410e7ec6185',
-  'paragonie/random_compat' => '2.*@e03c23d9d8f4dd966af9de10b688d8a945e76041',
-  'symfony/polyfill-ctype' => '*@e03c23d9d8f4dd966af9de10b688d8a945e76041',
-  'symfony/polyfill-iconv' => '*@e03c23d9d8f4dd966af9de10b688d8a945e76041',
-  'symfony/polyfill-php72' => '*@e03c23d9d8f4dd966af9de10b688d8a945e76041',
-  'symfony/polyfill-php71' => '*@e03c23d9d8f4dd966af9de10b688d8a945e76041',
-  'symfony/polyfill-php70' => '*@e03c23d9d8f4dd966af9de10b688d8a945e76041',
-  'symfony/polyfill-php56' => '*@e03c23d9d8f4dd966af9de10b688d8a945e76041',
-  '__root__' => 'dev-main@e03c23d9d8f4dd966af9de10b688d8a945e76041',
+  'paragonie/random_compat' => '2.*@a449d8a584af7c2722ad0d48f553c0917ddead6e',
+  'symfony/polyfill-ctype' => '*@a449d8a584af7c2722ad0d48f553c0917ddead6e',
+  'symfony/polyfill-iconv' => '*@a449d8a584af7c2722ad0d48f553c0917ddead6e',
+  'symfony/polyfill-php72' => '*@a449d8a584af7c2722ad0d48f553c0917ddead6e',
+  'symfony/polyfill-php71' => '*@a449d8a584af7c2722ad0d48f553c0917ddead6e',
+  'symfony/polyfill-php70' => '*@a449d8a584af7c2722ad0d48f553c0917ddead6e',
+  'symfony/polyfill-php56' => '*@a449d8a584af7c2722ad0d48f553c0917ddead6e',
+  '__root__' => 'dev-main@a449d8a584af7c2722ad0d48f553c0917ddead6e',
 );
 
     private function __construct()
Index: vendor/laminas/laminas-code/src/Scanner/MethodScanner.php
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?php\n\n/**\n * @see       https://github.com/laminas/laminas-code for the canonical source repository\n * @copyright https://github.com/laminas/laminas-code/blob/master/COPYRIGHT.md\n * @license   https://github.com/laminas/laminas-code/blob/master/LICENSE.md New BSD License\n */\n\nnamespace Laminas\\Code\\Scanner;\n\nuse Laminas\\Code\\Annotation\\AnnotationManager;\nuse Laminas\\Code\\Exception;\nuse Laminas\\Code\\NameInformation;\n\nuse function array_slice;\nuse function count;\nuse function is_int;\nuse function is_string;\nuse function ltrim;\nuse function strtolower;\nuse function substr_count;\nuse function var_export;\n\nclass MethodScanner implements ScannerInterface\n{\n    /**\n     * @var bool\n     */\n    protected $isScanned = false;\n\n    /**\n     * @var string\n     */\n    protected $docComment;\n\n    /**\n     * @var ClassScanner\n     */\n    protected $scannerClass;\n\n    /**\n     * @var string\n     */\n    protected $class;\n\n    /**\n     * @var string\n     */\n    protected $name;\n\n    /**\n     * @var int\n     */\n    protected $lineStart;\n\n    /**\n     * @var int\n     */\n    protected $lineEnd;\n\n    /**\n     * @var bool\n     */\n    protected $isFinal = false;\n\n    /**\n     * @var bool\n     */\n    protected $isAbstract = false;\n\n    /**\n     * @var bool\n     */\n    protected $isPublic = true;\n\n    /**\n     * @var bool\n     */\n    protected $isProtected = false;\n\n    /**\n     * @var bool\n     */\n    protected $isPrivate = false;\n\n    /**\n     * @var bool\n     */\n    protected $isStatic = false;\n\n    /**\n     * @var string\n     */\n    protected $body = '';\n\n    /**\n     * @var array\n     */\n    protected $tokens = [];\n\n    /**\n     * @var NameInformation\n     */\n    protected $nameInformation;\n\n    /**\n     * @var array\n     */\n    protected $infos = [];\n\n    /**\n     * @param  array $methodTokens\n     * @param NameInformation $nameInformation\n     */\n    public function __construct(array $methodTokens, NameInformation $nameInformation = null)\n    {\n        $this->tokens          = $methodTokens;\n        $this->nameInformation = $nameInformation;\n    }\n\n    /**\n     * @param  string $class\n     * @return MethodScanner\n     */\n    public function setClass($class)\n    {\n        $this->class = (string) $class;\n        return $this;\n    }\n\n    /**\n     * @param  ClassScanner  $scannerClass\n     * @return MethodScanner\n     */\n    public function setScannerClass(ClassScanner $scannerClass)\n    {\n        $this->scannerClass = $scannerClass;\n        return $this;\n    }\n\n    /**\n     * @return ClassScanner\n     */\n    public function getClassScanner()\n    {\n        return $this->scannerClass;\n    }\n\n    /**\n     * @return string\n     */\n    public function getName()\n    {\n        $this->scan();\n\n        return $this->name;\n    }\n\n    /**\n     * @return int\n     */\n    public function getLineStart()\n    {\n        $this->scan();\n\n        return $this->lineStart;\n    }\n\n    /**\n     * @return int\n     */\n    public function getLineEnd()\n    {\n        $this->scan();\n\n        return $this->lineEnd;\n    }\n\n    /**\n     * @return string\n     */\n    public function getDocComment()\n    {\n        $this->scan();\n\n        return $this->docComment;\n    }\n\n    /**\n     * @param  AnnotationManager $annotationManager\n     * @return AnnotationScanner|false\n     */\n    public function getAnnotations(AnnotationManager $annotationManager)\n    {\n        if (($docComment = $this->getDocComment()) == '') {\n            return false;\n        }\n\n        return new AnnotationScanner($annotationManager, $docComment, $this->nameInformation);\n    }\n\n    /**\n     * @return bool\n     */\n    public function isFinal()\n    {\n        $this->scan();\n\n        return $this->isFinal;\n    }\n\n    /**\n     * @return bool\n     */\n    public function isAbstract()\n    {\n        $this->scan();\n\n        return $this->isAbstract;\n    }\n\n    /**\n     * @return bool\n     */\n    public function isPublic()\n    {\n        $this->scan();\n\n        return $this->isPublic;\n    }\n\n    /**\n     * @return bool\n     */\n    public function isProtected()\n    {\n        $this->scan();\n\n        return $this->isProtected;\n    }\n\n    /**\n     * @return bool\n     */\n    public function isPrivate()\n    {\n        $this->scan();\n\n        return $this->isPrivate;\n    }\n\n    /**\n     * @return bool\n     */\n    public function isStatic()\n    {\n        $this->scan();\n\n        return $this->isStatic;\n    }\n\n    /**\n     * Override the given name for a method, this is necessary to\n     * support traits.\n     *\n     * @param string $name\n     * @return self\n     */\n    public function setName($name)\n    {\n        $this->name = $name;\n        return $this;\n    }\n\n    /**\n     * Visibility must be of T_PUBLIC, T_PRIVATE or T_PROTECTED\n     * Needed to support traits\n     *\n     * @param int $visibility   T_PUBLIC | T_PRIVATE | T_PROTECTED\n     * @return self\n     * @throws \\Laminas\\Code\\Exception\\InvalidArgumentException\n     */\n    public function setVisibility($visibility)\n    {\n        switch ($visibility) {\n            case T_PUBLIC:\n                $this->isPublic = true;\n                $this->isPrivate = false;\n                $this->isProtected = false;\n                break;\n\n            case T_PRIVATE:\n                $this->isPublic = false;\n                $this->isPrivate = true;\n                $this->isProtected = false;\n                break;\n\n            case T_PROTECTED:\n                $this->isPublic = false;\n                $this->isPrivate = false;\n                $this->isProtected = true;\n                break;\n\n            default:\n                throw new Exception\\InvalidArgumentException('Invalid visibility argument passed to setVisibility.');\n        }\n\n        return $this;\n    }\n\n    /**\n     * @return int\n     */\n    public function getNumberOfParameters()\n    {\n        return count($this->getParameters());\n    }\n\n    /**\n     * @param  bool $returnScanner\n     * @return array\n     */\n    public function getParameters($returnScanner = false)\n    {\n        $this->scan();\n\n        $return = [];\n\n        foreach ($this->infos as $info) {\n            if ($info['type'] != 'parameter') {\n                continue;\n            }\n\n            if (! $returnScanner) {\n                $return[] = $info['name'];\n            } else {\n                $return[] = $this->getParameter($info['name']);\n            }\n        }\n\n        return $return;\n    }\n\n    /**\n     * @param  int|string $parameterNameOrInfoIndex\n     * @return ParameterScanner\n     * @throws Exception\\InvalidArgumentException\n     */\n    public function getParameter($parameterNameOrInfoIndex)\n    {\n        $this->scan();\n\n        if (is_int($parameterNameOrInfoIndex)) {\n            $info = $this->infos[$parameterNameOrInfoIndex];\n            if ($info['type'] != 'parameter') {\n                throw new Exception\\InvalidArgumentException('Index of info offset is not about a parameter');\n            }\n        } elseif (is_string($parameterNameOrInfoIndex)) {\n            foreach ($this->infos as $info) {\n                if ($info['type'] === 'parameter' && $info['name'] === $parameterNameOrInfoIndex) {\n                    break;\n                }\n                unset($info);\n            }\n            if (! isset($info)) {\n                throw new Exception\\InvalidArgumentException('Index of info offset is not about a parameter');\n            }\n        }\n\n        $p = new ParameterScanner(\n            array_slice($this->tokens, $info['tokenStart'], $info['tokenEnd'] - $info['tokenStart']),\n            $this->nameInformation\n        );\n        $p->setDeclaringFunction($this->name);\n        $p->setDeclaringScannerFunction($this);\n        $p->setDeclaringClass($this->class);\n        $p->setDeclaringScannerClass($this->scannerClass);\n        $p->setPosition($info['position']);\n\n        return $p;\n    }\n\n    /**\n     * @return string\n     */\n    public function getBody()\n    {\n        $this->scan();\n\n        return $this->body;\n    }\n\n    public static function export()\n    {\n        // @todo\n    }\n\n    public function __toString()\n    {\n        $this->scan();\n\n        return var_export($this, true);\n    }\n\n    protected function scan()\n    {\n        if ($this->isScanned) {\n            return;\n        }\n\n        if (! $this->tokens) {\n            throw new Exception\\RuntimeException('No tokens were provided');\n        }\n\n        /**\n         * Variables & Setup\n         */\n        $tokens       = &$this->tokens; // localize\n        $infos        = &$this->infos; // localize\n        $tokenIndex   = null;\n        $token        = null;\n        $tokenType    = null;\n        $tokenContent = null;\n        $tokenLine    = null;\n        $infoIndex    = 0;\n        $parentCount  = 0;\n\n        /*\n         * MACRO creation\n         */\n        $MACRO_TOKEN_ADVANCE = function () use (\n            &$tokens,\n            &$tokenIndex,\n            &$token,\n            &$tokenType,\n            &$tokenContent,\n            &$tokenLine\n        ) {\n            static $lastTokenArray = null;\n            $tokenIndex = $tokenIndex === null ? 0 : $tokenIndex + 1;\n            if (! isset($tokens[$tokenIndex])) {\n                $token        = false;\n                $tokenContent = false;\n                $tokenType    = false;\n                $tokenLine    = false;\n\n                return false;\n            }\n            $token = $tokens[$tokenIndex];\n            if (is_string($token)) {\n                $tokenType    = null;\n                $tokenContent = $token;\n                $tokenLine   += substr_count(\n                    $lastTokenArray[1] ?? '',\n                    \"\\n\"\n                ); // adjust token line by last known newline count\n            } else {\n                $lastTokenArray = $token;\n                [$tokenType, $tokenContent, $tokenLine] = $token;\n            }\n\n            return $tokenIndex;\n        };\n        $MACRO_INFO_START    = function () use (&$infoIndex, &$infos, &$tokenIndex, &$tokenLine) {\n            $infos[$infoIndex] = [\n                'type'        => 'parameter',\n                'tokenStart'  => $tokenIndex,\n                'tokenEnd'    => null,\n                'lineStart'   => $tokenLine,\n                'lineEnd'     => $tokenLine,\n                'name'        => null,\n                'position'    => $infoIndex + 1, // position is +1 of infoIndex\n            ];\n        };\n        $MACRO_INFO_ADVANCE  = function () use (&$infoIndex, &$infos, &$tokenIndex, &$tokenLine) {\n            $infos[$infoIndex]['tokenEnd'] = $tokenIndex;\n            $infos[$infoIndex]['lineEnd']  = $tokenLine;\n            $infoIndex++;\n\n            return $infoIndex;\n        };\n\n        /**\n         * START FINITE STATE MACHINE FOR SCANNING TOKENS\n         */\n        // Initialize token\n        $MACRO_TOKEN_ADVANCE();\n\n        SCANNER_TOP:\n\n        $this->lineStart = $this->lineStart ? : $tokenLine;\n\n        switch ($tokenType) {\n            case T_DOC_COMMENT:\n                $this->lineStart = null;\n                if ($this->docComment === null && $this->name === null) {\n                    $this->docComment = $tokenContent;\n                }\n                goto SCANNER_CONTINUE_SIGNATURE;\n                // goto (no break needed);\n\n            case T_FINAL:\n                $this->isFinal = true;\n                goto SCANNER_CONTINUE_SIGNATURE;\n                // goto (no break needed);\n\n            case T_ABSTRACT:\n                $this->isAbstract = true;\n                goto SCANNER_CONTINUE_SIGNATURE;\n                // goto (no break needed);\n\n            case T_PUBLIC:\n                // use defaults\n                goto SCANNER_CONTINUE_SIGNATURE;\n                // goto (no break needed);\n\n            case T_PROTECTED:\n                $this->setVisibility(T_PROTECTED);\n                goto SCANNER_CONTINUE_SIGNATURE;\n                // goto (no break needed);\n\n            case T_PRIVATE:\n                $this->setVisibility(T_PRIVATE);\n                goto SCANNER_CONTINUE_SIGNATURE;\n                // goto (no break needed);\n\n            case T_STATIC:\n                $this->isStatic = true;\n                goto SCANNER_CONTINUE_SIGNATURE;\n                // goto (no break needed);\n\n            case T_NS_SEPARATOR:\n                if (! isset($infos[$infoIndex])) {\n                    $MACRO_INFO_START();\n                }\n                goto SCANNER_CONTINUE_SIGNATURE;\n                // goto (no break needed);\n\n            case T_VARIABLE:\n            case T_STRING:\n                if ($tokenType === T_STRING && $parentCount === 0) {\n                    $this->name = $tokenContent;\n                }\n\n                if ($parentCount === 1) {\n                    if (! isset($infos[$infoIndex])) {\n                        $MACRO_INFO_START();\n                    }\n                    if ($tokenType === T_VARIABLE) {\n                        $infos[$infoIndex]['name'] = ltrim($tokenContent, '$');\n                    }\n                }\n\n                goto SCANNER_CONTINUE_SIGNATURE;\n                // goto (no break needed);\n\n            case null:\n                switch ($tokenContent) {\n                    case '&':\n                        if (! isset($infos[$infoIndex])) {\n                            $MACRO_INFO_START();\n                        }\n                        goto SCANNER_CONTINUE_SIGNATURE;\n                        // goto (no break needed);\n                    case '(':\n                        $parentCount++;\n                        goto SCANNER_CONTINUE_SIGNATURE;\n                        // goto (no break needed);\n                    case ')':\n                        $parentCount--;\n                        if ($parentCount > 0) {\n                            goto SCANNER_CONTINUE_SIGNATURE;\n                        }\n                        if ($parentCount === 0) {\n                            if ($infos) {\n                                $MACRO_INFO_ADVANCE();\n                            }\n                            $context = 'body';\n                        }\n                        goto SCANNER_CONTINUE_BODY;\n                        // goto (no break needed);\n                    case ',':\n                        if ($parentCount === 1) {\n                            $MACRO_INFO_ADVANCE();\n                        }\n                        goto SCANNER_CONTINUE_SIGNATURE;\n                }\n        }\n\n        SCANNER_CONTINUE_SIGNATURE:\n\n        if ($MACRO_TOKEN_ADVANCE() === false) {\n            goto SCANNER_END;\n        }\n        goto SCANNER_TOP;\n\n        SCANNER_CONTINUE_BODY:\n\n        $braceCount = 0;\n        while ($MACRO_TOKEN_ADVANCE() !== false) {\n            if ($tokenContent == '}') {\n                $braceCount--;\n            }\n            if ($braceCount > 0) {\n                $this->body .= $tokenContent;\n            }\n            if ($tokenContent == '{') {\n                $braceCount++;\n            }\n            $this->lineEnd = $tokenLine;\n        }\n\n        SCANNER_END:\n\n        $this->isScanned = true;\n    }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- vendor/laminas/laminas-code/src/Scanner/MethodScanner.php	(revision a449d8a584af7c2722ad0d48f553c0917ddead6e)
+++ vendor/laminas/laminas-code/src/Scanner/MethodScanner.php	(date 1605132687000)
@@ -538,6 +538,8 @@
 
             case T_VARIABLE:
             case T_STRING:
+            case T_NAME_QUALIFIED:
+            case T_NAME_FULLY_QUALIFIED:
                 if ($tokenType === T_STRING && $parentCount === 0) {
                     $this->name = $tokenContent;
                 }
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project version=\"4\">\n  <component name=\"AutoImportSettings\">\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\n  </component>\n  <component name=\"BranchesTreeState\">\n    <expand>\n      <path>\n        <item name=\"ROOT\" type=\"e8cecc67:BranchNodeDescriptor\" />\n        <item name=\"LOCAL_ROOT\" type=\"e8cecc67:BranchNodeDescriptor\" />\n      </path>\n      <path>\n        <item name=\"ROOT\" type=\"e8cecc67:BranchNodeDescriptor\" />\n        <item name=\"REMOTE_ROOT\" type=\"e8cecc67:BranchNodeDescriptor\" />\n      </path>\n      <path>\n        <item name=\"ROOT\" type=\"e8cecc67:BranchNodeDescriptor\" />\n        <item name=\"REMOTE_ROOT\" type=\"e8cecc67:BranchNodeDescriptor\" />\n        <item name=\"GROUP_NODE:origin\" type=\"e8cecc67:BranchNodeDescriptor\" />\n      </path>\n    </expand>\n    <select />\n  </component>\n  <component name=\"ChangeListManager\">\n    <list default=\"true\" id=\"074fb307-b094-4f7d-86ef-eb292289b3f6\" name=\"Default Changelist\" comment=\"Envoie de mail lors de l'inscription\">\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/src/Controller/SecurityController.php\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/Controller/SecurityController.php\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/templates/produit/index.html.twig\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/templates/produit/index.html.twig\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/var/log/dev.log\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/var/log/dev.log\" afterDir=\"false\" />\n    </list>\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\n  </component>\n  <component name=\"ComposerSettings\" doNotAsk=\"true\" synchronizationState=\"SYNCHRONIZE\">\n    <pharConfigPath>$PROJECT_DIR$/composer.json</pharConfigPath>\n    <execution>\n      <executable path=\"composer\" />\n    </execution>\n  </component>\n  <component name=\"Git.Settings\">\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\n    <option name=\"UPDATE_TYPE\" value=\"MERGE\" />\n  </component>\n  <component name=\"PhpWorkspaceProjectConfiguration\">\n    <include_path>\n      <path value=\"$PROJECT_DIR$/vendor/symfony/security-bundle\" />\n      <path value=\"$PROJECT_DIR$/vendor/symfony/form\" />\n      <path value=\"$PROJECT_DIR$/vendor/symfony/twig-bundle\" />\n      <path value=\"$PROJECT_DIR$/vendor/doctrine/dbal\" />\n      <path value=\"$PROJECT_DIR$/vendor/symfony/intl\" />\n      <path value=\"$PROJECT_DIR$/vendor/symfony/web-profiler-bundle\" />\n      <path value=\"$PROJECT_DIR$/vendor/symfony/maker-bundle\" />\n      <path value=\"$PROJECT_DIR$/vendor/symfony/options-resolver\" />\n      <path value=\"$PROJECT_DIR$/vendor/symfony/monolog-bundle\" />\n      <path value=\"$PROJECT_DIR$/vendor/symfony/http-client-contracts\" />\n      <path value=\"$PROJECT_DIR$/vendor/doctrine/doctrine-fixtures-bundle\" />\n      <path value=\"$PROJECT_DIR$/vendor/nikic/php-parser\" />\n      <path value=\"$PROJECT_DIR$/vendor/symfony/property-info\" />\n      <path value=\"$PROJECT_DIR$/vendor/symfony/mime\" />\n      <path value=\"$PROJECT_DIR$/vendor/psr/container\" />\n      <path value=\"$PROJECT_DIR$/vendor/composer\" />\n      <path value=\"$PROJECT_DIR$/vendor/ocramius/proxy-manager\" />\n      <path value=\"$PROJECT_DIR$/vendor/egulias/email-validator\" />\n      <path value=\"$PROJECT_DIR$/vendor/monolog/monolog\" />\n      <path value=\"$PROJECT_DIR$/vendor/symfony/http-client\" />\n      <path value=\"$PROJECT_DIR$/vendor/symfony/phpunit-bridge\" />\n      <path value=\"$PROJECT_DIR$/vendor/symfony/translation\" />\n      <path value=\"$PROJECT_DIR$/vendor/symfony/css-selector\" />\n      <path value=\"$PROJECT_DIR$/vendor/symfony/serializer\" />\n      <path value=\"$PROJECT_DIR$/vendor/symfony/mailer\" />\n      <path value=\"$PROJECT_DIR$/vendor/symfony/filesystem\" />\n      <path value=\"$PROJECT_DIR$/vendor/doctrine/lexer\" />\n      <path value=\"$PROJECT_DIR$/vendor/doctrine/sql-formatter\" />\n      <path value=\"$PROJECT_DIR$/vendor/doctrine/orm\" />\n      <path value=\"$PROJECT_DIR$/vendor/symfony/property-access\" />\n      <path value=\"$PROJECT_DIR$/vendor/symfony/error-handler\" />\n      <path value=\"$PROJECT_DIR$/vendor/symfony/string\" />\n      <path value=\"$PROJECT_DIR$/vendor/phpdocumentor/reflection-common\" />\n      <path value=\"$PROJECT_DIR$/vendor/symfony/var-dumper\" />\n      <path value=\"$PROJECT_DIR$/vendor/symfony/stopwatch\" />\n      <path value=\"$PROJECT_DIR$/vendor/symfony/var-exporter\" />\n      <path value=\"$PROJECT_DIR$/vendor/twig/extra-bundle\" />\n      <path value=\"$PROJECT_DIR$/vendor/symfony/notifier\" />\n      <path value=\"$PROJECT_DIR$/vendor/doctrine/common\" />\n      <path value=\"$PROJECT_DIR$/vendor/twig/twig\" />\n      <path value=\"$PROJECT_DIR$/vendor/laminas/laminas-zendframework-bridge\" />\n      <path value=\"$PROJECT_DIR$/vendor/doctrine/collections\" />\n      <path value=\"$PROJECT_DIR$/vendor/doctrine/doctrine-bundle\" />\n      <path value=\"$PROJECT_DIR$/vendor/doctrine/instantiator\" />\n      <path value=\"$PROJECT_DIR$/vendor/laminas/laminas-code\" />\n      <path value=\"$PROJECT_DIR$/vendor/symfony/expression-language\" />\n      <path value=\"$PROJECT_DIR$/vendor/doctrine/doctrine-migrations-bundle\" />\n      <path value=\"$PROJECT_DIR$/vendor/symfony/framework-bundle\" />\n      <path value=\"$PROJECT_DIR$/vendor/symfony/dotenv\" />\n      <path value=\"$PROJECT_DIR$/vendor/webmozart/assert\" />\n      <path value=\"$PROJECT_DIR$/vendor/symfony/security-core\" />\n      <path value=\"$PROJECT_DIR$/vendor/symfony/debug-bundle\" />\n      <path value=\"$PROJECT_DIR$/vendor/symfony/twig-bridge\" />\n      <path value=\"$PROJECT_DIR$/vendor/psr/cache\" />\n      <path value=\"$PROJECT_DIR$/vendor/psr/log\" />\n      <path value=\"$PROJECT_DIR$/vendor/symfony/console\" />\n      <path value=\"$PROJECT_DIR$/vendor/symfony/validator\" />\n      <path value=\"$PROJECT_DIR$/vendor/phpdocumentor/reflection-docblock\" />\n      <path value=\"$PROJECT_DIR$/vendor/symfony/dependency-injection\" />\n      <path value=\"$PROJECT_DIR$/vendor/symfony/routing\" />\n      <path value=\"$PROJECT_DIR$/vendor/symfony/security-http\" />\n      <path value=\"$PROJECT_DIR$/vendor/symfony/http-foundation\" />\n      <path value=\"$PROJECT_DIR$/vendor/symfony/cache\" />\n      <path value=\"$PROJECT_DIR$/vendor/symfony/config\" />\n      <path value=\"$PROJECT_DIR$/vendor/symfony/translation-contracts\" />\n      <path value=\"$PROJECT_DIR$/vendor/symfony/finder\" />\n      <path value=\"$PROJECT_DIR$/vendor/symfony/doctrine-bridge\" />\n      <path value=\"$PROJECT_DIR$/vendor/doctrine/data-fixtures\" />\n      <path value=\"$PROJECT_DIR$/vendor/symfony/yaml\" />\n      <path value=\"$PROJECT_DIR$/vendor/doctrine/persistence\" />\n      <path value=\"$PROJECT_DIR$/vendor/phpdocumentor/type-resolver\" />\n      <path value=\"$PROJECT_DIR$/vendor/symfony/security-guard\" />\n      <path value=\"$PROJECT_DIR$/vendor/symfony/service-contracts\" />\n      <path value=\"$PROJECT_DIR$/vendor/doctrine/migrations\" />\n      <path value=\"$PROJECT_DIR$/vendor/symfony/polyfill-php73\" />\n      <path value=\"$PROJECT_DIR$/vendor/symfony/dom-crawler\" />\n      <path value=\"$PROJECT_DIR$/vendor/symfony/process\" />\n      <path value=\"$PROJECT_DIR$/vendor/symfony/event-dispatcher-contracts\" />\n      <path value=\"$PROJECT_DIR$/vendor/symfony/asset\" />\n      <path value=\"$PROJECT_DIR$/vendor/symfony/cache-contracts\" />\n      <path value=\"$PROJECT_DIR$/vendor/symfony/browser-kit\" />\n      <path value=\"$PROJECT_DIR$/vendor/symfony/deprecation-contracts\" />\n      <path value=\"$PROJECT_DIR$/vendor/symfony/polyfill-intl-idn\" />\n      <path value=\"$PROJECT_DIR$/vendor/symfony/event-dispatcher\" />\n      <path value=\"$PROJECT_DIR$/vendor/webimpress/safe-writer\" />\n      <path value=\"$PROJECT_DIR$/vendor/symfony/security-csrf\" />\n      <path value=\"$PROJECT_DIR$/vendor/doctrine/cache\" />\n      <path value=\"$PROJECT_DIR$/vendor/symfony/polyfill-mbstring\" />\n      <path value=\"$PROJECT_DIR$/vendor/doctrine/inflector\" />\n      <path value=\"$PROJECT_DIR$/vendor/psr/link\" />\n      <path value=\"$PROJECT_DIR$/vendor/symfony/polyfill-php80\" />\n      <path value=\"$PROJECT_DIR$/vendor/sensio/framework-extra-bundle\" />\n      <path value=\"$PROJECT_DIR$/vendor/symfony/polyfill-intl-icu\" />\n      <path value=\"$PROJECT_DIR$/vendor/symfony/http-kernel\" />\n      <path value=\"$PROJECT_DIR$/vendor/symfony/monolog-bridge\" />\n      <path value=\"$PROJECT_DIR$/vendor/symfony/polyfill-intl-normalizer\" />\n      <path value=\"$PROJECT_DIR$/vendor/psr/event-dispatcher\" />\n      <path value=\"$PROJECT_DIR$/vendor/doctrine/event-manager\" />\n      <path value=\"$PROJECT_DIR$/vendor/laminas/laminas-eventmanager\" />\n      <path value=\"$PROJECT_DIR$/vendor/symfony/flex\" />\n      <path value=\"$PROJECT_DIR$/vendor/symfony/polyfill-intl-grapheme\" />\n      <path value=\"$PROJECT_DIR$/vendor/symfony/web-link\" />\n      <path value=\"$PROJECT_DIR$/vendor/doctrine/annotations\" />\n      <path value=\"$PROJECT_DIR$/vendor/ralouphie/getallheaders\" />\n      <path value=\"$PROJECT_DIR$/vendor/phpseclib/phpseclib\" />\n      <path value=\"$PROJECT_DIR$/vendor/google/apiclient-services\" />\n      <path value=\"$PROJECT_DIR$/vendor/google/auth\" />\n      <path value=\"$PROJECT_DIR$/vendor/google/apiclient\" />\n      <path value=\"$PROJECT_DIR$/vendor/firebase/php-jwt\" />\n      <path value=\"$PROJECT_DIR$/vendor/guzzlehttp/promises\" />\n      <path value=\"$PROJECT_DIR$/vendor/guzzlehttp/guzzle\" />\n      <path value=\"$PROJECT_DIR$/vendor/guzzlehttp/psr7\" />\n      <path value=\"$PROJECT_DIR$/vendor/psr/http-message\" />\n      <path value=\"$PROJECT_DIR$/vendor/psr/http-client\" />\n      <path value=\"$PROJECT_DIR$/vendor/knpuniversity/oauth2-client-bundle\" />\n      <path value=\"$PROJECT_DIR$/vendor/league/oauth2-client\" />\n      <path value=\"$PROJECT_DIR$/vendor/symfony/google-mailer\" />\n      <path value=\"$PROJECT_DIR$/vendor/swiftmailer/swiftmailer\" />\n      <path value=\"$PROJECT_DIR$/vendor/symfony/swiftmailer-bundle\" />\n    </include_path>\n  </component>\n  <component name=\"ProjectId\" id=\"1jvEVRBNLudhaqzpPv1eS5bVm2W\" />\n  <component name=\"ProjectViewState\">\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\n    <option name=\"showLibraryContents\" value=\"true\" />\n  </component>\n  <component name=\"PropertiesComponent\">\n    <property name=\"RunOnceActivity.OpenProjectViewOnStart\" value=\"true\" />\n    <property name=\"RunOnceActivity.ShowReadmeOnStart\" value=\"true\" />\n    <property name=\"WebServerToolWindowFactoryState\" value=\"false\" />\n    <property name=\"aspect.path.notification.shown\" value=\"true\" />\n    <property name=\"last_opened_file_path\" value=\"$PROJECT_DIR$/src\" />\n    <property name=\"nodejs_package_manager_path\" value=\"npm\" />\n    <property name=\"php.override.implement.member.chooser.php.doc\" value=\"COPY_ALWAYS\" />\n    <property name=\"settings.editor.selected.configurable\" value=\"editing.templates\" />\n    <property name=\"vue.rearranger.settings.migration\" value=\"true\" />\n  </component>\n  <component name=\"RecentsManager\">\n    <key name=\"CopyFile.RECENT_KEYS\">\n      <recent name=\"$PROJECT_DIR$/src\" />\n    </key>\n    <key name=\"MoveFile.RECENT_KEYS\">\n      <recent name=\"$PROJECT_DIR$/src/Controller\" />\n      <recent name=\"$PROJECT_DIR$/src/Controller/User\" />\n      <recent name=\"$PROJECT_DIR$/src/Controller/admin\" />\n    </key>\n  </component>\n  <component name=\"RunManager\">\n    <configuration name=\"phpunit.xml.dist\" type=\"PHPUnitRunConfigurationType\" factoryName=\"PHPUnit\">\n      <TestRunner scope=\"XML\" />\n      <method v=\"2\" />\n    </configuration>\n  </component>\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\n  <component name=\"SvnConfiguration\">\n    <configuration>$USER_HOME$/.subversion</configuration>\n  </component>\n  <component name=\"TaskManager\">\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\n      <changelist id=\"074fb307-b094-4f7d-86ef-eb292289b3f6\" name=\"Default Changelist\" comment=\"\" />\n      <created>1604676188140</created>\n      <option name=\"number\" value=\"Default\" />\n      <option name=\"presentableId\" value=\"Default\" />\n      <updated>1604676188140</updated>\n      <workItem from=\"1604676189271\" duration=\"58000\" />\n      <workItem from=\"1604676293991\" duration=\"445000\" />\n      <workItem from=\"1604677013899\" duration=\"995000\" />\n      <workItem from=\"1604745606838\" duration=\"3140000\" />\n      <workItem from=\"1604764597151\" duration=\"8199000\" />\n      <workItem from=\"1604784123449\" duration=\"4449000\" />\n      <workItem from=\"1604833173939\" duration=\"595000\" />\n      <workItem from=\"1604839196023\" duration=\"9710000\" />\n      <workItem from=\"1604855394916\" duration=\"2763000\" />\n      <workItem from=\"1604866644296\" duration=\"281000\" />\n      <workItem from=\"1605089896048\" duration=\"72000\" />\n      <workItem from=\"1605176041698\" duration=\"2235000\" />\n      <workItem from=\"1605179496990\" duration=\"4492000\" />\n      <workItem from=\"1605259024787\" duration=\"1625000\" />\n      <workItem from=\"1605260709773\" duration=\"47000\" />\n      <workItem from=\"1605469734820\" duration=\"865000\" />\n      <workItem from=\"1605764931992\" duration=\"119000\" />\n      <workItem from=\"1605765064070\" duration=\"3662000\" />\n      <workItem from=\"1605768858407\" duration=\"151000\" />\n      <workItem from=\"1605769037156\" duration=\"5200000\" />\n      <workItem from=\"1605776714562\" duration=\"3259000\" />\n      <workItem from=\"1606056966049\" duration=\"3729000\" />\n      <workItem from=\"1606115423169\" duration=\"1663000\" />\n      <workItem from=\"1606152019661\" duration=\"271000\" />\n      <workItem from=\"1606205266881\" duration=\"17291000\" />\n      <workItem from=\"1606230194730\" duration=\"9285000\" />\n      <workItem from=\"1606246638716\" duration=\"626000\" />\n      <workItem from=\"1606250506635\" duration=\"15000\" />\n      <workItem from=\"1606296880511\" duration=\"10480000\" />\n      <workItem from=\"1606313670932\" duration=\"1557000\" />\n    </task>\n    <task id=\"LOCAL-00001\" summary=\"Install projet\">\n      <created>1604676645931</created>\n      <option name=\"number\" value=\"00001\" />\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1604676645931</updated>\n    </task>\n    <task id=\"LOCAL-00002\" summary=\"Creation des commandes de stat vendeur et du controlleur AdminController.php&#10;Faire les TODO\">\n      <created>1604748705656</created>\n      <option name=\"number\" value=\"00002\" />\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1604748705656</updated>\n    </task>\n    <task id=\"LOCAL-00003\" summary=\"Ajout de la methode getStockSend dans le ProduitRepository.php, ajout des Etas dans les fixtures\">\n      <created>1604766633599</created>\n      <option name=\"number\" value=\"00003\" />\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1604766633599</updated>\n    </task>\n    <task id=\"LOCAL-00004\" summary=\"Modification bug requette\">\n      <created>1604767193622</created>\n      <option name=\"number\" value=\"00004\" />\n      <option name=\"presentableId\" value=\"LOCAL-00004\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1604767193622</updated>\n    </task>\n    <task id=\"LOCAL-00005\" summary=\"Ajout des user &amp;&amp; modif dans AppFixtures.php\">\n      <created>1604768676819</created>\n      <option name=\"number\" value=\"00005\" />\n      <option name=\"presentableId\" value=\"LOCAL-00005\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1604768676819</updated>\n    </task>\n    <task id=\"LOCAL-00006\" summary=\"Mise en place de l'upload. Creation et modification de ProduitType.php ProduitController.php, TypeProduit.php&#10;Ajout du formulaire d'ajout, modification de index.html.twig\">\n      <created>1604772773167</created>\n      <option name=\"number\" value=\"00006\" />\n      <option name=\"presentableId\" value=\"LOCAL-00006\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1604772773167</updated>\n    </task>\n    <task id=\"LOCAL-00007\" summary=\"Ajout d'une fonction dans le ProduitRepository.php avec getDisponiliter\">\n      <created>1604785229913</created>\n      <option name=\"number\" value=\"00007\" />\n      <option name=\"presentableId\" value=\"LOCAL-00007\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1604785229913</updated>\n    </task>\n    <task id=\"LOCAL-00008\" summary=\"Commit null\">\n      <created>1604785406806</created>\n      <option name=\"number\" value=\"00008\" />\n      <option name=\"presentableId\" value=\"LOCAL-00008\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1604785406806</updated>\n    </task>\n    <task id=\"LOCAL-00009\" summary=\"AddDelete on ProduitController.php\">\n      <created>1604787832671</created>\n      <option name=\"number\" value=\"00009\" />\n      <option name=\"presentableId\" value=\"LOCAL-00009\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1604787832671</updated>\n    </task>\n    <task id=\"LOCAL-00010\" summary=\"Modification du header, Ajout du PanierController.php (juste ajout)\">\n      <created>1604850825495</created>\n      <option name=\"number\" value=\"00010\" />\n      <option name=\"presentableId\" value=\"LOCAL-00010\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1604850825496</updated>\n    </task>\n    <task id=\"LOCAL-00011\" summary=\"Ajout de la suppression\">\n      <created>1604852929359</created>\n      <option name=\"number\" value=\"00011\" />\n      <option name=\"presentableId\" value=\"LOCAL-00011\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1604852929359</updated>\n    </task>\n    <task id=\"LOCAL-00012\" summary=\"Commit var\">\n      <created>1604853065878</created>\n      <option name=\"number\" value=\"00012\" />\n      <option name=\"presentableId\" value=\"LOCAL-00012\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1604853065878</updated>\n    </task>\n    <task id=\"LOCAL-00013\" summary=\"UserMenu\">\n      <created>1604854132480</created>\n      <option name=\"number\" value=\"00013\" />\n      <option name=\"presentableId\" value=\"LOCAL-00013\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1604854132480</updated>\n    </task>\n    <task id=\"LOCAL-00014\" summary=\"UserMenu\">\n      <created>1604854183650</created>\n      <option name=\"number\" value=\"00014\" />\n      <option name=\"presentableId\" value=\"LOCAL-00014\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1604854183650</updated>\n    </task>\n    <task id=\"LOCAL-00015\" summary=\"Affichage des commandes\">\n      <created>1604858144135</created>\n      <option name=\"number\" value=\"00015\" />\n      <option name=\"presentableId\" value=\"LOCAL-00015\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1604858144135</updated>\n    </task>\n    <task id=\"LOCAL-00016\" summary=\"Corrige bug img\">\n      <created>1604866911961</created>\n      <option name=\"number\" value=\"00016\" />\n      <option name=\"presentableId\" value=\"LOCAL-00016\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1604866911961</updated>\n    </task>\n    <task id=\"LOCAL-00017\" summary=\"Ajouter des LigneCommandeController.php\">\n      <created>1605193359308</created>\n      <option name=\"number\" value=\"00017\" />\n      <option name=\"presentableId\" value=\"LOCAL-00017\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1605193359308</updated>\n    </task>\n    <task id=\"LOCAL-00018\" summary=\"Fin de l'ajout de produit\">\n      <created>1605196003352</created>\n      <option name=\"number\" value=\"00018\" />\n      <option name=\"presentableId\" value=\"LOCAL-00018\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1605196003352</updated>\n    </task>\n    <task id=\"LOCAL-00019\" summary=\"CommandeController.php\">\n      <created>1605197051416</created>\n      <option name=\"number\" value=\"00019\" />\n      <option name=\"presentableId\" value=\"LOCAL-00019\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1605197051416</updated>\n    </task>\n    <task id=\"LOCAL-00020\" summary=\"Modif\">\n      <created>1605260630624</created>\n      <option name=\"number\" value=\"00020\" />\n      <option name=\"presentableId\" value=\"LOCAL-00020\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1605260630624</updated>\n    </task>\n    <task id=\"LOCAL-00021\" summary=\"Est ce que tu as editProduit.html.twig ?\">\n      <created>1605769917842</created>\n      <option name=\"number\" value=\"00021\" />\n      <option name=\"presentableId\" value=\"LOCAL-00021\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1605769917842</updated>\n    </task>\n    <task id=\"LOCAL-00022\" summary=\"Est ce que tu as editProduit.html.twig ?\">\n      <created>1605770067083</created>\n      <option name=\"number\" value=\"00022\" />\n      <option name=\"presentableId\" value=\"LOCAL-00022\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1605770067083</updated>\n    </task>\n    <task id=\"LOCAL-00023\" summary=\"Modification commandes\">\n      <created>1605771470458</created>\n      <option name=\"number\" value=\"00023\" />\n      <option name=\"presentableId\" value=\"LOCAL-00023\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1605771470458</updated>\n    </task>\n    <task id=\"LOCAL-00024\" summary=\"Marche pas pour l'image\">\n      <created>1605773741949</created>\n      <option name=\"number\" value=\"00024\" />\n      <option name=\"presentableId\" value=\"LOCAL-00024\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1605773741949</updated>\n    </task>\n    <task id=\"LOCAL-00025\" summary=\"Est ce que tu as editProduit.html.twig ?\">\n      <created>1605776981191</created>\n      <option name=\"number\" value=\"00025\" />\n      <option name=\"presentableId\" value=\"LOCAL-00025\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1605776981191</updated>\n    </task>\n    <task id=\"LOCAL-00026\" summary=\"Bootstrap\">\n      <created>1605777262581</created>\n      <option name=\"number\" value=\"00026\" />\n      <option name=\"presentableId\" value=\"LOCAL-00026\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1605777262581</updated>\n    </task>\n    <task id=\"LOCAL-00027\" summary=\"Est ce que tu as editProduit.html.twig ?\">\n      <created>1605777600291</created>\n      <option name=\"number\" value=\"00027\" />\n      <option name=\"presentableId\" value=\"LOCAL-00027\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1605777600291</updated>\n    </task>\n    <task id=\"LOCAL-00028\" summary=\"Ajout des CommentaireController.php.&#10;J'ai voulu faire aussi le keke et j'ai mis CommentaireInterface.php avec les methodes et les commentaires&#10;Rajout aussi de ControllerInterfaceCRUD.php mais ne fonctionne pas encore\">\n      <created>1606062121807</created>\n      <option name=\"number\" value=\"00028\" />\n      <option name=\"presentableId\" value=\"LOCAL-00028\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1606062121807</updated>\n    </task>\n    <task id=\"LOCAL-00029\" summary=\"Debut du CommentaireController.php\">\n      <created>1606210668736</created>\n      <option name=\"number\" value=\"00029\" />\n      <option name=\"presentableId\" value=\"LOCAL-00029\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1606210668736</updated>\n    </task>\n    <task id=\"LOCAL-00030\" summary=\"Fin des CommentaireController.php reste le font\">\n      <created>1606213250713</created>\n      <option name=\"number\" value=\"00030\" />\n      <option name=\"presentableId\" value=\"LOCAL-00030\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1606213250713</updated>\n    </task>\n    <task id=\"LOCAL-00031\" summary=\"Ajout la possibiliter de voir un produit selectionner\">\n      <created>1606213879971</created>\n      <option name=\"number\" value=\"00031\" />\n      <option name=\"presentableId\" value=\"LOCAL-00031\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1606213879971</updated>\n    </task>\n    <task id=\"LOCAL-00032\" summary=\"ModifErreur\">\n      <created>1606214438395</created>\n      <option name=\"number\" value=\"00032\" />\n      <option name=\"presentableId\" value=\"LOCAL-00032\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1606214438395</updated>\n    </task>\n    <task id=\"LOCAL-00033\" summary=\"Ajout des champs utilisateur et gestion des danger\">\n      <created>1606215328355</created>\n      <option name=\"number\" value=\"00033\" />\n      <option name=\"presentableId\" value=\"LOCAL-00033\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1606215328355</updated>\n    </task>\n    <task id=\"LOCAL-00034\" summary=\"Ajout des champs utilisateur et gestion des danger\">\n      <created>1606215518201</created>\n      <option name=\"number\" value=\"00034\" />\n      <option name=\"presentableId\" value=\"LOCAL-00034\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1606215518201</updated>\n    </task>\n    <task id=\"LOCAL-00035\" summary=\"Modif des compte utilisateur\">\n      <created>1606216283069</created>\n      <option name=\"number\" value=\"00035\" />\n      <option name=\"presentableId\" value=\"LOCAL-00035\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1606216283069</updated>\n    </task>\n    <task id=\"LOCAL-00036\" summary=\"Update projet\">\n      <created>1606216340687</created>\n      <option name=\"number\" value=\"00036\" />\n      <option name=\"presentableId\" value=\"LOCAL-00036\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1606216340687</updated>\n    </task>\n    <task id=\"LOCAL-00037\" summary=\"Update projet\">\n      <created>1606225089286</created>\n      <option name=\"number\" value=\"00037\" />\n      <option name=\"presentableId\" value=\"LOCAL-00037\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1606225089286</updated>\n    </task>\n    <task id=\"LOCAL-00038\" summary=\"Modification de la disponibiliter\">\n      <created>1606230798963</created>\n      <option name=\"number\" value=\"00038\" />\n      <option name=\"presentableId\" value=\"LOCAL-00038\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1606230798963</updated>\n    </task>\n    <task id=\"LOCAL-00039\" summary=\"Modification de la disponibiliter\">\n      <created>1606231683182</created>\n      <option name=\"number\" value=\"00039\" />\n      <option name=\"presentableId\" value=\"LOCAL-00039\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1606231683182</updated>\n    </task>\n    <task id=\"LOCAL-00040\" summary=\"Prepare Mailer\">\n      <created>1606298905598</created>\n      <option name=\"number\" value=\"00040\" />\n      <option name=\"presentableId\" value=\"LOCAL-00040\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1606298905598</updated>\n    </task>\n    <task id=\"LOCAL-00041\" summary=\"Prepare Mailer\">\n      <created>1606300581176</created>\n      <option name=\"number\" value=\"00041\" />\n      <option name=\"presentableId\" value=\"LOCAL-00041\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1606300581176</updated>\n    </task>\n    <task id=\"LOCAL-00042\" summary=\"Envoie de mail lors de l'inscription\">\n      <created>1606306570141</created>\n      <option name=\"number\" value=\"00042\" />\n      <option name=\"presentableId\" value=\"LOCAL-00042\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1606306570141</updated>\n    </task>\n    <option name=\"localTasksCounter\" value=\"43\" />\n    <servers />\n  </component>\n  <component name=\"TypeScriptGeneratedFilesManager\">\n    <option name=\"version\" value=\"3\" />\n  </component>\n  <component name=\"Vcs.Log.Tabs.Properties\">\n    <option name=\"TAB_STATES\">\n      <map>\n        <entry key=\"MAIN\">\n          <value>\n            <State />\n          </value>\n        </entry>\n      </map>\n    </option>\n    <option name=\"oldMeFiltersMigrated\" value=\"true\" />\n  </component>\n  <component name=\"VcsManagerConfiguration\">\n    <MESSAGE value=\"Ajout de la suppression\" />\n    <MESSAGE value=\"Commit var\" />\n    <MESSAGE value=\"UserMenu\" />\n    <MESSAGE value=\"Affichage des commandes\" />\n    <MESSAGE value=\"Corrige bug img\" />\n    <MESSAGE value=\"Ajouter des LigneCommandeController.php\" />\n    <MESSAGE value=\"Fin de l'ajout de produit\" />\n    <MESSAGE value=\"CommandeController.php\" />\n    <MESSAGE value=\"Modif\" />\n    <MESSAGE value=\"Modification commandes\" />\n    <MESSAGE value=\"Marche pas pour l'image\" />\n    <MESSAGE value=\"Bootstrap\" />\n    <MESSAGE value=\"Est ce que tu as editProduit.html.twig ?\" />\n    <MESSAGE value=\"Ajout des CommentaireController.php.&#10;J'ai voulu faire aussi le keke et j'ai mis CommentaireInterface.php avec les methodes et les commentaires&#10;Rajout aussi de ControllerInterfaceCRUD.php mais ne fonctionne pas encore\" />\n    <MESSAGE value=\"Debut du CommentaireController.php\" />\n    <MESSAGE value=\"Fin des CommentaireController.php reste le font\" />\n    <MESSAGE value=\"Ajout la possibiliter de voir un produit selectionner\" />\n    <MESSAGE value=\"ModifErreur\" />\n    <MESSAGE value=\"CommitPrecedent\" />\n    <MESSAGE value=\"Ajout des champs utilisateur et gestion des danger\" />\n    <MESSAGE value=\"Modif des compte utilisateur\" />\n    <MESSAGE value=\"Update projet\" />\n    <MESSAGE value=\"Modification de la disponibiliter\" />\n    <MESSAGE value=\"Prepare Mailer\" />\n    <MESSAGE value=\"Envoie de mail lors de l'inscription\" />\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"Envoie de mail lors de l'inscription\" />\n  </component>\n  <component name=\"WindowStateProjectService\">\n    <state x=\"769\" y=\"432\" width=\"444\" height=\"249\" key=\"#Composer\" timestamp=\"1604676211710\">\n      <screen x=\"72\" y=\"27\" width=\"1848\" height=\"1053\" />\n    </state>\n    <state x=\"769\" y=\"432\" width=\"444\" height=\"249\" key=\"#Composer/72.27.1848.1053@72.27.1848.1053\" timestamp=\"1604676211710\" />\n    <state x=\"340\" y=\"116\" width=\"800\" height=\"684\" key=\"#com.intellij.execution.impl.EditConfigurationsDialog\" timestamp=\"1606060409334\">\n      <screen x=\"72\" y=\"27\" width=\"1848\" height=\"1053\" />\n    </state>\n    <state x=\"223\" y=\"70\" key=\"#com.intellij.execution.impl.EditConfigurationsDialog/0.0.1536.824@0.0.1536.824\" timestamp=\"1604677374925\" />\n    <state x=\"340\" y=\"116\" width=\"800\" height=\"684\" key=\"#com.intellij.execution.impl.EditConfigurationsDialog/72.27.1848.1053@72.27.1848.1053\" timestamp=\"1606060409334\" />\n    <state x=\"577\" y=\"355\" width=\"828\" height=\"403\" key=\"#com.intellij.fileTypes.FileTypeChooser\" timestamp=\"1604772337751\">\n      <screen x=\"72\" y=\"27\" width=\"1848\" height=\"1053\" />\n    </state>\n    <state x=\"577\" y=\"355\" width=\"828\" height=\"403\" key=\"#com.intellij.fileTypes.FileTypeChooser/72.27.1848.1053@72.27.1848.1053\" timestamp=\"1604772337751\" />\n    <state x=\"785\" y=\"234\" width=\"411\" height=\"659\" key=\"#com.intellij.ide.util.MemberChooser\" timestamp=\"1606235319769\">\n      <screen x=\"72\" y=\"27\" width=\"1848\" height=\"1053\" />\n    </state>\n    <state x=\"785\" y=\"234\" width=\"411\" height=\"659\" key=\"#com.intellij.ide.util.MemberChooser/72.27.1848.1053@72.27.1848.1053\" timestamp=\"1606235319769\" />\n    <state x=\"567\" y=\"164\" width=\"838\" height=\"793\" key=\"#com.intellij.refactoring.rename.AutomaticRenamingDialog\" timestamp=\"1606205548474\">\n      <screen x=\"72\" y=\"27\" width=\"1848\" height=\"1053\" />\n    </state>\n    <state x=\"567\" y=\"164\" width=\"838\" height=\"793\" key=\"#com.intellij.refactoring.rename.AutomaticRenamingDialog/72.27.1848.1053@72.27.1848.1053\" timestamp=\"1606205548474\" />\n    <state x=\"729\" y=\"311\" width=\"524\" height=\"491\" key=\"#com.jetbrains.php.actions.copyPaste.importReferences.PhpImportReferencesDialog\" timestamp=\"1606214106941\">\n      <screen x=\"72\" y=\"27\" width=\"1848\" height=\"1053\" />\n    </state>\n    <state x=\"729\" y=\"311\" width=\"524\" height=\"491\" key=\"#com.jetbrains.php.actions.copyPaste.importReferences.PhpImportReferencesDialog/72.27.1848.1053@72.27.1848.1053\" timestamp=\"1606214106941\" />\n    <state x=\"368\" y=\"11\" key=\"CommitChangelistDialog2\" timestamp=\"1605777570242\">\n      <screen x=\"0\" y=\"0\" width=\"1536\" height=\"824\" />\n    </state>\n    <state x=\"368\" y=\"11\" key=\"CommitChangelistDialog2/0.0.1536.824@0.0.1536.824\" timestamp=\"1605777570242\" />\n    <state x=\"731\" y=\"468\" width=\"520\" height=\"178\" key=\"ComposerInitDialogKey\" timestamp=\"1606300079358\">\n      <screen x=\"72\" y=\"27\" width=\"1848\" height=\"1053\" />\n    </state>\n    <state x=\"731\" y=\"468\" width=\"520\" height=\"178\" key=\"ComposerInitDialogKey/72.27.1848.1053@72.27.1848.1053\" timestamp=\"1606300079358\" />\n    <state width=\"1479\" height=\"265\" key=\"GridCell.Tab.0.bottom\" timestamp=\"1604770422917\">\n      <screen x=\"72\" y=\"27\" width=\"1848\" height=\"1053\" />\n    </state>\n    <state width=\"1479\" height=\"265\" key=\"GridCell.Tab.0.bottom/72.27.1848.1053@72.27.1848.1053\" timestamp=\"1604770422917\" />\n    <state width=\"1479\" height=\"265\" key=\"GridCell.Tab.0.center\" timestamp=\"1604770422917\">\n      <screen x=\"72\" y=\"27\" width=\"1848\" height=\"1053\" />\n    </state>\n    <state width=\"1479\" height=\"265\" key=\"GridCell.Tab.0.center/72.27.1848.1053@72.27.1848.1053\" timestamp=\"1604770422917\" />\n    <state width=\"1479\" height=\"265\" key=\"GridCell.Tab.0.left\" timestamp=\"1604770422917\">\n      <screen x=\"72\" y=\"27\" width=\"1848\" height=\"1053\" />\n    </state>\n    <state width=\"1479\" height=\"265\" key=\"GridCell.Tab.0.left/72.27.1848.1053@72.27.1848.1053\" timestamp=\"1604770422917\" />\n    <state width=\"1479\" height=\"265\" key=\"GridCell.Tab.0.right\" timestamp=\"1604770422917\">\n      <screen x=\"72\" y=\"27\" width=\"1848\" height=\"1053\" />\n    </state>\n    <state width=\"1479\" height=\"265\" key=\"GridCell.Tab.0.right/72.27.1848.1053@72.27.1848.1053\" timestamp=\"1604770422917\" />\n    <state width=\"263\" height=\"500\" key=\"HiddenNamespacesPopup\" timestamp=\"1606060395829\">\n      <screen x=\"72\" y=\"27\" width=\"1848\" height=\"1053\" />\n    </state>\n    <state width=\"263\" height=\"500\" key=\"HiddenNamespacesPopup/72.27.1848.1053@72.27.1848.1053\" timestamp=\"1606060395829\" />\n    <state x=\"586\" y=\"273\" width=\"969\" height=\"568\" key=\"NewPhpClassDialog\" timestamp=\"1606208595324\">\n      <screen x=\"72\" y=\"27\" width=\"1848\" height=\"1053\" />\n    </state>\n    <state x=\"586\" y=\"273\" width=\"969\" height=\"568\" key=\"NewPhpClassDialog/72.27.1848.1053@72.27.1848.1053\" timestamp=\"1606208595324\" />\n    <state x=\"791\" y=\"479\" width=\"399\" height=\"156\" key=\"NewPhpFileDialog\" timestamp=\"1605176935971\">\n      <screen x=\"72\" y=\"27\" width=\"1848\" height=\"1053\" />\n    </state>\n    <state x=\"791\" y=\"479\" width=\"399\" height=\"156\" key=\"NewPhpFileDialog/72.27.1848.1053@72.27.1848.1053\" timestamp=\"1605176935971\" />\n    <state x=\"622\" y=\"237\" width=\"737\" height=\"640\" key=\"RollbackChangesDialog\" timestamp=\"1605784453571\">\n      <screen x=\"72\" y=\"27\" width=\"1848\" height=\"1053\" />\n    </state>\n    <state x=\"622\" y=\"237\" width=\"737\" height=\"640\" key=\"RollbackChangesDialog/72.27.1848.1053@72.27.1848.1053\" timestamp=\"1605784453571\" />\n    <state x=\"485\" y=\"188\" width=\"1022\" height=\"737\" key=\"SettingsEditor\" timestamp=\"1604746168222\">\n      <screen x=\"72\" y=\"27\" width=\"1848\" height=\"1053\" />\n    </state>\n    <state x=\"485\" y=\"188\" width=\"1022\" height=\"737\" key=\"SettingsEditor/72.27.1848.1053@72.27.1848.1053\" timestamp=\"1604746168222\" />\n    <state x=\"309\" y=\"318\" width=\"800\" height=\"535\" key=\"Vcs.Push.Dialog.v2\" timestamp=\"1606306577441\">\n      <screen x=\"72\" y=\"27\" width=\"1848\" height=\"1053\" />\n    </state>\n    <state x=\"309\" y=\"318\" width=\"800\" height=\"535\" key=\"Vcs.Push.Dialog.v2/72.27.1848.1053@72.27.1848.1053\" timestamp=\"1606306577441\" />\n    <state x=\"749\" y=\"371\" width=\"484\" height=\"368\" key=\"com.intellij.database.psi.DbRenamePsiElementProcessor.DbRenameDialog\" timestamp=\"1606209904181\">\n      <screen x=\"72\" y=\"27\" width=\"1848\" height=\"1053\" />\n    </state>\n    <state x=\"749\" y=\"371\" width=\"484\" height=\"368\" key=\"com.intellij.database.psi.DbRenamePsiElementProcessor.DbRenameDialog/72.27.1848.1053@72.27.1848.1053\" timestamp=\"1606209904181\" />\n    <state x=\"928\" y=\"501\" width=\"136\" height=\"111\" key=\"com.intellij.database.run.ParametersPanel.Standalone\" timestamp=\"1604765369790\">\n      <screen x=\"72\" y=\"27\" width=\"1848\" height=\"1053\" />\n    </state>\n    <state x=\"928\" y=\"501\" width=\"136\" height=\"111\" key=\"com.intellij.database.run.ParametersPanel.Standalone/72.27.1848.1053@72.27.1848.1053\" timestamp=\"1604765369790\" />\n    <state x=\"477\" y=\"240\" key=\"com.intellij.ide.util.TipDialog\" timestamp=\"1605776714697\">\n      <screen x=\"0\" y=\"0\" width=\"1536\" height=\"824\" />\n    </state>\n    <state x=\"477\" y=\"240\" key=\"com.intellij.ide.util.TipDialog/0.0.1536.824@0.0.1536.824\" timestamp=\"1605776714697\" />\n    <state x=\"610\" y=\"182\" width=\"762\" height=\"749\" key=\"com.intellij.openapi.editor.actions.MultiplePasteAction$ClipboardContentChooser\" timestamp=\"1606213826573\">\n      <screen x=\"72\" y=\"27\" width=\"1848\" height=\"1053\" />\n    </state>\n    <state x=\"610\" y=\"182\" width=\"762\" height=\"749\" key=\"com.intellij.openapi.editor.actions.MultiplePasteAction$ClipboardContentChooser/72.27.1848.1053@72.27.1848.1053\" timestamp=\"1606213826573\" />\n    <state x=\"695\" y=\"270\" width=\"592\" height=\"573\" key=\"com.intellij.openapi.vcs.changes.SpecificFilesViewDialog\" timestamp=\"1605195971034\">\n      <screen x=\"72\" y=\"27\" width=\"1848\" height=\"1053\" />\n    </state>\n    <state x=\"695\" y=\"270\" width=\"592\" height=\"573\" key=\"com.intellij.openapi.vcs.changes.SpecificFilesViewDialog/72.27.1848.1053@72.27.1848.1053\" timestamp=\"1605195971034\" />\n    <state x=\"770\" y=\"450\" width=\"437\" height=\"177\" key=\"com.intellij.openapi.vcs.update.UpdateOrStatusOptionsDialogupdate-v2\" timestamp=\"1606152236184\">\n      <screen x=\"72\" y=\"27\" width=\"1848\" height=\"1053\" />\n    </state>\n    <state x=\"580\" y=\"331\" key=\"com.intellij.openapi.vcs.update.UpdateOrStatusOptionsDialogupdate-v2/0.0.1536.824@0.0.1536.824\" timestamp=\"1605776894568\" />\n    <state x=\"770\" y=\"450\" width=\"437\" height=\"177\" key=\"com.intellij.openapi.vcs.update.UpdateOrStatusOptionsDialogupdate-v2/72.27.1848.1053@72.27.1848.1053\" timestamp=\"1606152236184\" />\n    <state x=\"659\" y=\"259\" width=\"672\" height=\"678\" key=\"search.everywhere.popup\" timestamp=\"1606238772028\">\n      <screen x=\"72\" y=\"27\" width=\"1848\" height=\"1053\" />\n    </state>\n    <state x=\"659\" y=\"259\" width=\"672\" height=\"678\" key=\"search.everywhere.popup/72.27.1848.1053@72.27.1848.1053\" timestamp=\"1606238772028\" />\n  </component>\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/workspace.xml	(revision a449d8a584af7c2722ad0d48f553c0917ddead6e)
+++ .idea/workspace.xml	(date 1606374446605)
@@ -23,10 +23,56 @@
   </component>
   <component name="ChangeListManager">
     <list default="true" id="074fb307-b094-4f7d-86ef-eb292289b3f6" name="Default Changelist" comment="Envoie de mail lors de l'inscription">
-      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/Controller/SecurityController.php" beforeDir="false" afterPath="$PROJECT_DIR$/src/Controller/SecurityController.php" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/templates/produit/index.html.twig" beforeDir="false" afterPath="$PROJECT_DIR$/templates/produit/index.html.twig" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/var/log/dev.log" beforeDir="false" afterPath="$PROJECT_DIR$/var/log/dev.log" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/composer.lock" beforeDir="false" afterPath="$PROJECT_DIR$/composer.lock" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/vendor/composer/autoload_classmap.php" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/composer/autoload_classmap.php" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/vendor/composer/autoload_static.php" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/composer/autoload_static.php" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/vendor/composer/installed.json" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/composer/installed.json" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/vendor/composer/package-versions-deprecated/src/PackageVersions/Versions.php" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/composer/package-versions-deprecated/src/PackageVersions/Versions.php" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/vendor/doctrine/dbal/README.md" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/doctrine/dbal/README.md" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/vendor/doctrine/dbal/ci/github/ext/install-ibm_db2.sh" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/vendor/doctrine/dbal/ci/github/phpunit/ibm_db2.xml" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/vendor/doctrine/dbal/ci/github/phpunit/mysqli-tls.xml" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/vendor/doctrine/dbal/ci/github/phpunit/mysqli.xml" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/vendor/doctrine/dbal/ci/github/phpunit/oci8.xml" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/vendor/doctrine/dbal/ci/github/phpunit/pdo_mysql.xml" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/vendor/doctrine/dbal/ci/github/phpunit/pdo_oci.xml" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/vendor/doctrine/dbal/ci/github/phpunit/pdo_pgsql.xml" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/vendor/doctrine/dbal/ci/github/phpunit/pdo_sqlsrv.xml" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/vendor/doctrine/dbal/ci/github/phpunit/sqlite.xml" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/vendor/doctrine/dbal/ci/github/phpunit/sqlsrv.xml" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/vendor/doctrine/dbal/lib/Doctrine/DBAL/Cache/ResultCacheStatement.php" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/doctrine/dbal/lib/Doctrine/DBAL/Cache/ResultCacheStatement.php" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/PDOOracle/Driver.php" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/PDOOracle/Driver.php" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/vendor/doctrine/dbal/lib/Doctrine/DBAL/DriverManager.php" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/doctrine/dbal/lib/Doctrine/DBAL/DriverManager.php" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/vendor/doctrine/dbal/lib/Doctrine/DBAL/Platforms/SQLAnywherePlatform.php" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/doctrine/dbal/lib/Doctrine/DBAL/Platforms/SQLAnywherePlatform.php" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/vendor/doctrine/dbal/lib/Doctrine/DBAL/Platforms/SQLServerPlatform.php" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/doctrine/dbal/lib/Doctrine/DBAL/Platforms/SQLServerPlatform.php" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/vendor/doctrine/dbal/lib/Doctrine/DBAL/SQLParserUtils.php" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/doctrine/dbal/lib/Doctrine/DBAL/SQLParserUtils.php" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/vendor/doctrine/dbal/lib/Doctrine/DBAL/Version.php" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/doctrine/dbal/lib/Doctrine/DBAL/Version.php" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/vendor/doctrine/instantiator/.doctrine-project.json" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/doctrine/instantiator/.doctrine-project.json" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/vendor/doctrine/instantiator/README.md" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/doctrine/instantiator/README.md" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/vendor/doctrine/instantiator/composer.json" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/doctrine/instantiator/composer.json" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/vendor/doctrine/instantiator/phpcs.xml.dist" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/doctrine/instantiator/phpcs.xml.dist" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/vendor/doctrine/instantiator/phpstan.neon.dist" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/doctrine/instantiator/phpstan.neon.dist" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/vendor/doctrine/instantiator/src/Doctrine/Instantiator/Exception/InvalidArgumentException.php" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/doctrine/instantiator/src/Doctrine/Instantiator/Exception/InvalidArgumentException.php" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/vendor/doctrine/instantiator/src/Doctrine/Instantiator/Exception/UnexpectedValueException.php" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/doctrine/instantiator/src/Doctrine/Instantiator/Exception/UnexpectedValueException.php" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/vendor/doctrine/instantiator/src/Doctrine/Instantiator/Instantiator.php" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/doctrine/instantiator/src/Doctrine/Instantiator/Instantiator.php" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/vendor/doctrine/instantiator/src/Doctrine/Instantiator/InstantiatorInterface.php" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/doctrine/instantiator/src/Doctrine/Instantiator/InstantiatorInterface.php" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/vendor/egulias/email-validator/src/EmailLexer.php" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/egulias/email-validator/src/EmailLexer.php" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/vendor/egulias/email-validator/src/Parser/DomainPart.php" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/egulias/email-validator/src/Parser/DomainPart.php" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/vendor/knpuniversity/oauth2-client-bundle/.travis.yml" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/knpuniversity/oauth2-client-bundle/.travis.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/vendor/knpuniversity/oauth2-client-bundle/composer.json" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/knpuniversity/oauth2-client-bundle/composer.json" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/vendor/knpuniversity/oauth2-client-bundle/tests/DependencyInjection/KnpUOAuth2ClientExtensionTest.php" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/knpuniversity/oauth2-client-bundle/tests/DependencyInjection/KnpUOAuth2ClientExtensionTest.php" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/vendor/laminas/laminas-code/CHANGELOG.md" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/laminas/laminas-code/CHANGELOG.md" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/vendor/laminas/laminas-code/COPYRIGHT.md" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/laminas/laminas-code/COPYRIGHT.md" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/vendor/laminas/laminas-code/LICENSE.md" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/laminas/laminas-code/LICENSE.md" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/vendor/laminas/laminas-code/README.md" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/laminas/laminas-code/README.md" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/vendor/laminas/laminas-code/composer.json" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/laminas/laminas-code/composer.json" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/vendor/laminas/laminas-code/src/Generator/ClassGenerator.php" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/laminas/laminas-code/src/Generator/ClassGenerator.php" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/vendor/laminas/laminas-code/src/Generator/FileGenerator.php" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/laminas/laminas-code/src/Generator/FileGenerator.php" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/vendor/laminas/laminas-code/src/Reflection/ParameterReflection.php" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/laminas/laminas-code/src/Reflection/ParameterReflection.php" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/vendor/laminas/laminas-code/src/Scanner/ClassScanner.php" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/laminas/laminas-code/src/Scanner/ClassScanner.php" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/vendor/laminas/laminas-code/src/Scanner/MethodScanner.php" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/laminas/laminas-code/src/Scanner/MethodScanner.php" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/vendor/laminas/laminas-code/src/Scanner/ParameterScanner.php" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/laminas/laminas-code/src/Scanner/ParameterScanner.php" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/vendor/laminas/laminas-code/src/Scanner/TokenArrayScanner.php" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/laminas/laminas-code/src/Scanner/TokenArrayScanner.php" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
@@ -239,6 +285,7 @@
       <workItem from="1606250506635" duration="15000" />
       <workItem from="1606296880511" duration="10480000" />
       <workItem from="1606313670932" duration="1557000" />
+      <workItem from="1606374334819" duration="110000" />
     </task>
     <task id="LOCAL-00001" summary="Install projet">
       <created>1604676645931</created>
Index: vendor/doctrine/dbal/lib/Doctrine/DBAL/Platforms/SQLAnywherePlatform.php
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?php\n\nnamespace Doctrine\\DBAL\\Platforms;\n\nuse Doctrine\\DBAL\\Exception;\nuse Doctrine\\DBAL\\LockMode;\nuse Doctrine\\DBAL\\Schema\\Column;\nuse Doctrine\\DBAL\\Schema\\ColumnDiff;\nuse Doctrine\\DBAL\\Schema\\Constraint;\nuse Doctrine\\DBAL\\Schema\\ForeignKeyConstraint;\nuse Doctrine\\DBAL\\Schema\\Identifier;\nuse Doctrine\\DBAL\\Schema\\Index;\nuse Doctrine\\DBAL\\Schema\\Table;\nuse Doctrine\\DBAL\\Schema\\TableDiff;\nuse Doctrine\\DBAL\\TransactionIsolationLevel;\nuse InvalidArgumentException;\n\nuse function array_merge;\nuse function array_unique;\nuse function array_values;\nuse function assert;\nuse function count;\nuse function explode;\nuse function func_get_args;\nuse function get_class;\nuse function implode;\nuse function is_string;\nuse function preg_match;\nuse function sprintf;\nuse function strlen;\nuse function strpos;\nuse function strtoupper;\nuse function substr;\n\n/**\n * The SQLAnywherePlatform provides the behavior, features and SQL dialect of the\n * SAP Sybase SQL Anywhere 10 database platform.\n *\n * @deprecated Use SQLAnywhere 16 or newer\n */\nclass SQLAnywherePlatform extends AbstractPlatform\n{\n    public const FOREIGN_KEY_MATCH_SIMPLE        = 1;\n    public const FOREIGN_KEY_MATCH_FULL          = 2;\n    public const FOREIGN_KEY_MATCH_SIMPLE_UNIQUE = 129;\n    public const FOREIGN_KEY_MATCH_FULL_UNIQUE   = 130;\n\n    /**\n     * {@inheritdoc}\n     */\n    public function appendLockHint($fromClause, $lockMode)\n    {\n        switch (true) {\n            case $lockMode === LockMode::NONE:\n                return $fromClause . ' WITH (NOLOCK)';\n\n            case $lockMode === LockMode::PESSIMISTIC_READ:\n                return $fromClause . ' WITH (UPDLOCK)';\n\n            case $lockMode === LockMode::PESSIMISTIC_WRITE:\n                return $fromClause . ' WITH (XLOCK)';\n\n            default:\n                return $fromClause;\n        }\n    }\n\n    /**\n     * {@inheritdoc}\n     *\n     * SQL Anywhere supports a maximum length of 128 bytes for identifiers.\n     */\n    public function fixSchemaElementName($schemaElementName)\n    {\n        $maxIdentifierLength = $this->getMaxIdentifierLength();\n\n        if (strlen($schemaElementName) > $maxIdentifierLength) {\n            return substr($schemaElementName, 0, $maxIdentifierLength);\n        }\n\n        return $schemaElementName;\n    }\n\n    /**\n     * {@inheritdoc}\n     */\n    public function getAdvancedForeignKeyOptionsSQL(ForeignKeyConstraint $foreignKey)\n    {\n        $query = '';\n\n        if ($foreignKey->hasOption('match')) {\n            $query = ' MATCH ' . $this->getForeignKeyMatchClauseSQL($foreignKey->getOption('match'));\n        }\n\n        $query .= parent::getAdvancedForeignKeyOptionsSQL($foreignKey);\n\n        if ($foreignKey->hasOption('check_on_commit') && (bool) $foreignKey->getOption('check_on_commit')) {\n            $query .= ' CHECK ON COMMIT';\n        }\n\n        if ($foreignKey->hasOption('clustered') && (bool) $foreignKey->getOption('clustered')) {\n            $query .= ' CLUSTERED';\n        }\n\n        if ($foreignKey->hasOption('for_olap_workload') && (bool) $foreignKey->getOption('for_olap_workload')) {\n            $query .= ' FOR OLAP WORKLOAD';\n        }\n\n        return $query;\n    }\n\n    /**\n     * {@inheritdoc}\n     */\n    public function getAlterTableSQL(TableDiff $diff)\n    {\n        $sql          = [];\n        $columnSql    = [];\n        $commentsSQL  = [];\n        $tableSql     = [];\n        $alterClauses = [];\n\n        foreach ($diff->addedColumns as $column) {\n            if ($this->onSchemaAlterTableAddColumn($column, $diff, $columnSql)) {\n                continue;\n            }\n\n            $alterClauses[] = $this->getAlterTableAddColumnClause($column);\n\n            $comment = $this->getColumnComment($column);\n\n            if ($comment === null || $comment === '') {\n                continue;\n            }\n\n            $commentsSQL[] = $this->getCommentOnColumnSQL(\n                $diff->getName($this)->getQuotedName($this),\n                $column->getQuotedName($this),\n                $comment\n            );\n        }\n\n        foreach ($diff->removedColumns as $column) {\n            if ($this->onSchemaAlterTableRemoveColumn($column, $diff, $columnSql)) {\n                continue;\n            }\n\n            $alterClauses[] = $this->getAlterTableRemoveColumnClause($column);\n        }\n\n        foreach ($diff->changedColumns as $columnDiff) {\n            if ($this->onSchemaAlterTableChangeColumn($columnDiff, $diff, $columnSql)) {\n                continue;\n            }\n\n            $alterClause = $this->getAlterTableChangeColumnClause($columnDiff);\n\n            if ($alterClause !== null) {\n                $alterClauses[] = $alterClause;\n            }\n\n            if (! $columnDiff->hasChanged('comment')) {\n                continue;\n            }\n\n            $column = $columnDiff->column;\n\n            $commentsSQL[] = $this->getCommentOnColumnSQL(\n                $diff->getName($this)->getQuotedName($this),\n                $column->getQuotedName($this),\n                $this->getColumnComment($column)\n            );\n        }\n\n        foreach ($diff->renamedColumns as $oldColumnName => $column) {\n            if ($this->onSchemaAlterTableRenameColumn($oldColumnName, $column, $diff, $columnSql)) {\n                continue;\n            }\n\n            $sql[] = $this->getAlterTableClause($diff->getName($this)) . ' ' .\n                $this->getAlterTableRenameColumnClause($oldColumnName, $column);\n        }\n\n        if (! $this->onSchemaAlterTable($diff, $tableSql)) {\n            if (! empty($alterClauses)) {\n                $sql[] = $this->getAlterTableClause($diff->getName($this)) . ' ' . implode(', ', $alterClauses);\n            }\n\n            $sql = array_merge($sql, $commentsSQL);\n\n            $newName = $diff->getNewName();\n\n            if ($newName !== false) {\n                $sql[] = $this->getAlterTableClause($diff->getName($this)) . ' ' .\n                    $this->getAlterTableRenameTableClause($newName);\n            }\n\n            $sql = array_merge(\n                $this->getPreAlterTableIndexForeignKeySQL($diff),\n                $sql,\n                $this->getPostAlterTableIndexForeignKeySQL($diff)\n            );\n        }\n\n        return array_merge($sql, $tableSql, $columnSql);\n    }\n\n    /**\n     * Returns the SQL clause for creating a column in a table alteration.\n     *\n     * @param Column $column The column to add.\n     *\n     * @return string\n     */\n    protected function getAlterTableAddColumnClause(Column $column)\n    {\n        return 'ADD ' . $this->getColumnDeclarationSQL($column->getQuotedName($this), $column->toArray());\n    }\n\n    /**\n     * Returns the SQL clause for altering a table.\n     *\n     * @param Identifier $tableName The quoted name of the table to alter.\n     *\n     * @return string\n     */\n    protected function getAlterTableClause(Identifier $tableName)\n    {\n        return 'ALTER TABLE ' . $tableName->getQuotedName($this);\n    }\n\n    /**\n     * Returns the SQL clause for dropping a column in a table alteration.\n     *\n     * @param Column $column The column to drop.\n     *\n     * @return string\n     */\n    protected function getAlterTableRemoveColumnClause(Column $column)\n    {\n        return 'DROP ' . $column->getQuotedName($this);\n    }\n\n    /**\n     * Returns the SQL clause for renaming a column in a table alteration.\n     *\n     * @param string $oldColumnName The quoted name of the column to rename.\n     * @param Column $column        The column to rename to.\n     *\n     * @return string\n     */\n    protected function getAlterTableRenameColumnClause($oldColumnName, Column $column)\n    {\n        $oldColumnName = new Identifier($oldColumnName);\n\n        return 'RENAME ' . $oldColumnName->getQuotedName($this) . ' TO ' . $column->getQuotedName($this);\n    }\n\n    /**\n     * Returns the SQL clause for renaming a table in a table alteration.\n     *\n     * @param Identifier $newTableName The quoted name of the table to rename to.\n     *\n     * @return string\n     */\n    protected function getAlterTableRenameTableClause(Identifier $newTableName)\n    {\n        return 'RENAME ' . $newTableName->getQuotedName($this);\n    }\n\n    /**\n     * Returns the SQL clause for altering a column in a table alteration.\n     *\n     * This method returns null in case that only the column comment has changed.\n     * Changes in column comments have to be handled differently.\n     *\n     * @param ColumnDiff $columnDiff The diff of the column to alter.\n     *\n     * @return string|null\n     */\n    protected function getAlterTableChangeColumnClause(ColumnDiff $columnDiff)\n    {\n        $column = $columnDiff->column;\n\n        // Do not return alter clause if only comment has changed.\n        if (! ($columnDiff->hasChanged('comment') && count($columnDiff->changedProperties) === 1)) {\n            $columnAlterationClause = 'ALTER ' .\n                $this->getColumnDeclarationSQL($column->getQuotedName($this), $column->toArray());\n\n            if ($columnDiff->hasChanged('default') && $column->getDefault() === null) {\n                $columnAlterationClause .= ', ALTER ' . $column->getQuotedName($this) . ' DROP DEFAULT';\n            }\n\n            return $columnAlterationClause;\n        }\n\n        return null;\n    }\n\n    /**\n     * {@inheritdoc}\n     */\n    public function getBigIntTypeDeclarationSQL(array $column)\n    {\n        $column['integer_type'] = 'BIGINT';\n\n        return $this->_getCommonIntegerTypeDeclarationSQL($column);\n    }\n\n    /**\n     * {@inheritdoc}\n     */\n    public function getBinaryDefaultLength()\n    {\n        return 1;\n    }\n\n    /**\n     * {@inheritdoc}\n     */\n    public function getBinaryMaxLength()\n    {\n        return 32767;\n    }\n\n    /**\n     * {@inheritdoc}\n     */\n    public function getBlobTypeDeclarationSQL(array $column)\n    {\n        return 'LONG BINARY';\n    }\n\n    /**\n     * {@inheritdoc}\n     *\n     * BIT type columns require an explicit NULL declaration\n     * in SQL Anywhere if they shall be nullable.\n     * Otherwise by just omitting the NOT NULL clause,\n     * SQL Anywhere will declare them NOT NULL nonetheless.\n     */\n    public function getBooleanTypeDeclarationSQL(array $column)\n    {\n        $nullClause = isset($column['notnull']) && (bool) $column['notnull'] === false ? ' NULL' : '';\n\n        return 'BIT' . $nullClause;\n    }\n\n    /**\n     * {@inheritdoc}\n     */\n    public function getClobTypeDeclarationSQL(array $column)\n    {\n        return 'TEXT';\n    }\n\n    /**\n     * {@inheritdoc}\n     */\n    public function getCommentOnColumnSQL($tableName, $columnName, $comment)\n    {\n        $tableName  = new Identifier($tableName);\n        $columnName = new Identifier($columnName);\n        $comment    = $comment === null ? 'NULL' : $this->quoteStringLiteral($comment);\n\n        return sprintf(\n            'COMMENT ON COLUMN %s.%s IS %s',\n            $tableName->getQuotedName($this),\n            $columnName->getQuotedName($this),\n            $comment\n        );\n    }\n\n    /**\n     * {@inheritdoc}\n     */\n    public function getConcatExpression()\n    {\n        return 'STRING(' . implode(', ', (array) func_get_args()) . ')';\n    }\n\n    /**\n     * {@inheritdoc}\n     */\n    public function getCreateConstraintSQL(Constraint $constraint, $table)\n    {\n        if ($constraint instanceof ForeignKeyConstraint) {\n            return $this->getCreateForeignKeySQL($constraint, $table);\n        }\n\n        if ($table instanceof Table) {\n            $table = $table->getQuotedName($this);\n        }\n\n        return 'ALTER TABLE ' . $table .\n               ' ADD ' . $this->getTableConstraintDeclarationSQL($constraint, $constraint->getQuotedName($this));\n    }\n\n    /**\n     * {@inheritdoc}\n     */\n    public function getCreateDatabaseSQL($database)\n    {\n        $database = new Identifier($database);\n\n        return \"CREATE DATABASE '\" . $database->getName() . \"'\";\n    }\n\n    /**\n     * {@inheritdoc}\n     *\n     * Appends SQL Anywhere specific flags if given.\n     */\n    public function getCreateIndexSQL(Index $index, $table)\n    {\n        return parent::getCreateIndexSQL($index, $table) . $this->getAdvancedIndexOptionsSQL($index);\n    }\n\n    /**\n     * {@inheritdoc}\n     */\n    public function getCreatePrimaryKeySQL(Index $index, $table)\n    {\n        if ($table instanceof Table) {\n            $table = $table->getQuotedName($this);\n        }\n\n        return 'ALTER TABLE ' . $table . ' ADD ' . $this->getPrimaryKeyDeclarationSQL($index);\n    }\n\n    /**\n     * {@inheritdoc}\n     */\n    public function getCreateTemporaryTableSnippetSQL()\n    {\n        return 'CREATE ' . $this->getTemporaryTableSQL() . ' TABLE';\n    }\n\n    /**\n     * {@inheritdoc}\n     */\n    public function getCreateViewSQL($name, $sql)\n    {\n        return 'CREATE VIEW ' . $name . ' AS ' . $sql;\n    }\n\n    /**\n     * {@inheritdoc}\n     */\n    public function getCurrentDateSQL()\n    {\n        return 'CURRENT DATE';\n    }\n\n    /**\n     * {@inheritdoc}\n     */\n    public function getCurrentTimeSQL()\n    {\n        return 'CURRENT TIME';\n    }\n\n    /**\n     * {@inheritdoc}\n     */\n    public function getCurrentTimestampSQL()\n    {\n        return 'CURRENT TIMESTAMP';\n    }\n\n    /**\n     * {@inheritdoc}\n     */\n    protected function getDateArithmeticIntervalExpression($date, $operator, $interval, $unit)\n    {\n        $factorClause = '';\n\n        if ($operator === '-') {\n            $factorClause = '-1 * ';\n        }\n\n        return 'DATEADD(' . $unit . ', ' . $factorClause . $interval . ', ' . $date . ')';\n    }\n\n    /**\n     * {@inheritdoc}\n     */\n    public function getDateDiffExpression($date1, $date2)\n    {\n        return 'DATEDIFF(day, ' . $date2 . ', ' . $date1 . ')';\n    }\n\n    /**\n     * {@inheritdoc}\n     */\n    public function getDateTimeFormatString()\n    {\n        return 'Y-m-d H:i:s.u';\n    }\n\n    /**\n     * {@inheritdoc}\n     */\n    public function getDateTimeTypeDeclarationSQL(array $column)\n    {\n        return 'DATETIME';\n    }\n\n    /**\n     * {@inheritdoc}\n     */\n    public function getDateTimeTzFormatString()\n    {\n        return $this->getDateTimeFormatString();\n    }\n\n    /**\n     * {@inheritdoc}\n     */\n    public function getDateTypeDeclarationSQL(array $column)\n    {\n        return 'DATE';\n    }\n\n    /**\n     * {@inheritdoc}\n     */\n    public function getDefaultTransactionIsolationLevel()\n    {\n        return TransactionIsolationLevel::READ_UNCOMMITTED;\n    }\n\n    /**\n     * {@inheritdoc}\n     */\n    public function getDropDatabaseSQL($database)\n    {\n        $database = new Identifier($database);\n\n        return \"DROP DATABASE '\" . $database->getName() . \"'\";\n    }\n\n    /**\n     * {@inheritdoc}\n     */\n    public function getDropIndexSQL($index, $table = null)\n    {\n        if ($index instanceof Index) {\n            $index = $index->getQuotedName($this);\n        }\n\n        if (! is_string($index)) {\n            throw new InvalidArgumentException(\n                __METHOD__ . '() expects $index parameter to be string or ' . Index::class . '.'\n            );\n        }\n\n        if (! isset($table)) {\n            return 'DROP INDEX ' . $index;\n        }\n\n        if ($table instanceof Table) {\n            $table = $table->getQuotedName($this);\n        }\n\n        if (! is_string($table)) {\n            throw new InvalidArgumentException(\n                __METHOD__ . '() expects $table parameter to be string or ' . Index::class . '.'\n            );\n        }\n\n        return 'DROP INDEX ' . $table . '.' . $index;\n    }\n\n    /**\n     * {@inheritdoc}\n     */\n    public function getDropViewSQL($name)\n    {\n        return 'DROP VIEW ' . $name;\n    }\n\n    /**\n     * {@inheritdoc}\n     */\n    public function getForeignKeyBaseDeclarationSQL(ForeignKeyConstraint $foreignKey)\n    {\n        $sql              = '';\n        $foreignKeyName   = $foreignKey->getName();\n        $localColumns     = $foreignKey->getQuotedLocalColumns($this);\n        $foreignColumns   = $foreignKey->getQuotedForeignColumns($this);\n        $foreignTableName = $foreignKey->getQuotedForeignTableName($this);\n\n        if (! empty($foreignKeyName)) {\n            $sql .= 'CONSTRAINT ' . $foreignKey->getQuotedName($this) . ' ';\n        }\n\n        if (empty($localColumns)) {\n            throw new InvalidArgumentException(\"Incomplete definition. 'local' required.\");\n        }\n\n        if (empty($foreignColumns)) {\n            throw new InvalidArgumentException(\"Incomplete definition. 'foreign' required.\");\n        }\n\n        if (empty($foreignTableName)) {\n            throw new InvalidArgumentException(\"Incomplete definition. 'foreignTable' required.\");\n        }\n\n        if ($foreignKey->hasOption('notnull') && (bool) $foreignKey->getOption('notnull')) {\n            $sql .= 'NOT NULL ';\n        }\n\n        return $sql .\n            'FOREIGN KEY (' . $this->getIndexFieldDeclarationListSQL($localColumns) . ') ' .\n            'REFERENCES ' . $foreignKey->getQuotedForeignTableName($this) .\n            ' (' . $this->getIndexFieldDeclarationListSQL($foreignColumns) . ')';\n    }\n\n    /**\n     * Returns foreign key MATCH clause for given type.\n     *\n     * @param int $type The foreign key match type\n     *\n     * @return string\n     *\n     * @throws InvalidArgumentException If unknown match type given.\n     */\n    public function getForeignKeyMatchClauseSQL($type)\n    {\n        switch ((int) $type) {\n            case self::FOREIGN_KEY_MATCH_SIMPLE:\n                return 'SIMPLE';\n\n            case self::FOREIGN_KEY_MATCH_FULL:\n                return 'FULL';\n\n            case self::FOREIGN_KEY_MATCH_SIMPLE_UNIQUE:\n                return 'UNIQUE SIMPLE';\n\n            case self::FOREIGN_KEY_MATCH_FULL_UNIQUE:\n                return 'UNIQUE FULL';\n\n            default:\n                throw new InvalidArgumentException('Invalid foreign key match type: ' . $type);\n        }\n    }\n\n    /**\n     * {@inheritdoc}\n     */\n    public function getForeignKeyReferentialActionSQL($action)\n    {\n        // NO ACTION is not supported, therefore falling back to RESTRICT.\n        if (strtoupper($action) === 'NO ACTION') {\n            return 'RESTRICT';\n        }\n\n        return parent::getForeignKeyReferentialActionSQL($action);\n    }\n\n    /**\n     * {@inheritdoc}\n     */\n    public function getForUpdateSQL()\n    {\n        return '';\n    }\n\n    /**\n     * {@inheritdoc}\n     *\n     * @deprecated Use application-generated UUIDs instead\n     */\n    public function getGuidExpression()\n    {\n        return 'NEWID()';\n    }\n\n    /**\n     * {@inheritdoc}\n     */\n    public function getGuidTypeDeclarationSQL(array $column)\n    {\n        return 'UNIQUEIDENTIFIER';\n    }\n\n    /**\n     * {@inheritdoc}\n     */\n    public function getIndexDeclarationSQL($name, Index $index)\n    {\n        // Index declaration in statements like CREATE TABLE is not supported.\n        throw Exception::notSupported(__METHOD__);\n    }\n\n    /**\n     * {@inheritdoc}\n     */\n    public function getIntegerTypeDeclarationSQL(array $column)\n    {\n        $column['integer_type'] = 'INT';\n\n        return $this->_getCommonIntegerTypeDeclarationSQL($column);\n    }\n\n    /**\n     * {@inheritdoc}\n     */\n    public function getListDatabasesSQL()\n    {\n        return 'SELECT db_name(number) AS name FROM sa_db_list()';\n    }\n\n    /**\n     * {@inheritdoc}\n     */\n    public function getListTableColumnsSQL($table, $database = null)\n    {\n        $user = 'USER_NAME()';\n\n        if (strpos($table, '.') !== false) {\n            [$user, $table] = explode('.', $table);\n            $user           = $this->quoteStringLiteral($user);\n        }\n\n        return sprintf(\n            <<<'SQL'\nSELECT    col.column_name,\n          COALESCE(def.user_type_name, def.domain_name) AS 'type',\n          def.declared_width AS 'length',\n          def.scale,\n          CHARINDEX('unsigned', def.domain_name) AS 'unsigned',\n          IF col.nulls = 'Y' THEN 0 ELSE 1 ENDIF AS 'notnull',\n          col.\"default\",\n          def.is_autoincrement AS 'autoincrement',\n          rem.remarks AS 'comment'\nFROM      sa_describe_query('SELECT * FROM \"%s\"') AS def\nJOIN      SYS.SYSTABCOL AS col\nON        col.table_id = def.base_table_id AND col.column_id = def.base_column_id\nLEFT JOIN SYS.SYSREMARK AS rem\nON        col.object_id = rem.object_id\nWHERE     def.base_owner_name = %s\nORDER BY  def.base_column_id ASC\nSQL\n            ,\n            $table,\n            $user\n        );\n    }\n\n    /**\n     * {@inheritdoc}\n     *\n     * @todo Where is this used? Which information should be retrieved?\n     */\n    public function getListTableConstraintsSQL($table)\n    {\n        $user = '';\n\n        if (strpos($table, '.') !== false) {\n            [$user, $table] = explode('.', $table);\n            $user           = $this->quoteStringLiteral($user);\n            $table          = $this->quoteStringLiteral($table);\n        } else {\n            $table = $this->quoteStringLiteral($table);\n        }\n\n        return sprintf(\n            <<<'SQL'\nSELECT con.*\nFROM   SYS.SYSCONSTRAINT AS con\nJOIN   SYS.SYSTAB AS tab ON con.table_object_id = tab.object_id\nWHERE  tab.table_name = %s\nAND    tab.creator = USER_ID(%s)\nSQL\n            ,\n            $table,\n            $user\n        );\n    }\n\n    /**\n     * {@inheritdoc}\n     */\n    public function getListTableForeignKeysSQL($table)\n    {\n        $user = '';\n\n        if (strpos($table, '.') !== false) {\n            [$user, $table] = explode('.', $table);\n            $user           = $this->quoteStringLiteral($user);\n            $table          = $this->quoteStringLiteral($table);\n        } else {\n            $table = $this->quoteStringLiteral($table);\n        }\n\n        return sprintf(\n            <<<'SQL'\nSELECT    fcol.column_name AS local_column,\n          ptbl.table_name AS foreign_table,\n          pcol.column_name AS foreign_column,\n          idx.index_name,\n          IF fk.nulls = 'N'\n              THEN 1\n              ELSE NULL\n          ENDIF AS notnull,\n          CASE ut.referential_action\n              WHEN 'C' THEN 'CASCADE'\n              WHEN 'D' THEN 'SET DEFAULT'\n              WHEN 'N' THEN 'SET NULL'\n              WHEN 'R' THEN 'RESTRICT'\n              ELSE NULL\n          END AS  on_update,\n          CASE dt.referential_action\n              WHEN 'C' THEN 'CASCADE'\n              WHEN 'D' THEN 'SET DEFAULT'\n              WHEN 'N' THEN 'SET NULL'\n              WHEN 'R' THEN 'RESTRICT'\n              ELSE NULL\n          END AS on_delete,\n          IF fk.check_on_commit = 'Y'\n              THEN 1\n              ELSE NULL\n          ENDIF AS check_on_commit, -- check_on_commit flag\n          IF ftbl.clustered_index_id = idx.index_id\n              THEN 1\n              ELSE NULL\n          ENDIF AS 'clustered', -- clustered flag\n          IF fk.match_type = 0\n              THEN NULL\n              ELSE fk.match_type\n          ENDIF AS 'match', -- match option\n          IF pidx.max_key_distance = 1\n              THEN 1\n              ELSE NULL\n          ENDIF AS for_olap_workload -- for_olap_workload flag\nFROM      SYS.SYSFKEY AS fk\nJOIN      SYS.SYSIDX AS idx\nON        fk.foreign_table_id = idx.table_id\nAND       fk.foreign_index_id = idx.index_id\nJOIN      SYS.SYSPHYSIDX pidx\nON        idx.table_id = pidx.table_id\nAND       idx.phys_index_id = pidx.phys_index_id\nJOIN      SYS.SYSTAB AS ptbl\nON        fk.primary_table_id = ptbl.table_id\nJOIN      SYS.SYSTAB AS ftbl\nON        fk.foreign_table_id = ftbl.table_id\nJOIN      SYS.SYSIDXCOL AS idxcol\nON        idx.table_id = idxcol.table_id\nAND       idx.index_id = idxcol.index_id\nJOIN      SYS.SYSTABCOL AS pcol\nON        ptbl.table_id = pcol.table_id\nAND       idxcol.primary_column_id = pcol.column_id\nJOIN      SYS.SYSTABCOL AS fcol\nON        ftbl.table_id = fcol.table_id\nAND       idxcol.column_id = fcol.column_id\nLEFT JOIN SYS.SYSTRIGGER ut\nON        fk.foreign_table_id = ut.foreign_table_id\nAND       fk.foreign_index_id = ut.foreign_key_id\nAND       ut.event = 'C'\nLEFT JOIN SYS.SYSTRIGGER dt\nON        fk.foreign_table_id = dt.foreign_table_id\nAND       fk.foreign_index_id = dt.foreign_key_id\nAND       dt.event = 'D'\nWHERE     ftbl.table_name = %s\nAND       ftbl.creator = USER_ID(%s)\nORDER BY  fk.foreign_index_id ASC, idxcol.sequence ASC\nSQL\n            ,\n            $table,\n            $user\n        );\n    }\n\n    /**\n     * {@inheritdoc}\n     */\n    public function getListTableIndexesSQL($table, $database = null)\n    {\n        $user = '';\n\n        if (strpos($table, '.') !== false) {\n            [$user, $table] = explode('.', $table);\n            $user           = $this->quoteStringLiteral($user);\n            $table          = $this->quoteStringLiteral($table);\n        } else {\n            $table = $this->quoteStringLiteral($table);\n        }\n\n        return sprintf(\n            <<<'SQL'\nSELECT   idx.index_name AS key_name,\n         IF idx.index_category = 1\n             THEN 1\n             ELSE 0\n         ENDIF AS 'primary',\n         col.column_name,\n         IF idx.\"unique\" IN(1, 2, 5)\n             THEN 0\n             ELSE 1\n         ENDIF AS non_unique,\n         IF tbl.clustered_index_id = idx.index_id\n             THEN 1\n             ELSE NULL\n         ENDIF AS 'clustered', -- clustered flag\n         IF idx.\"unique\" = 5\n             THEN 1\n             ELSE NULL\n         ENDIF AS with_nulls_not_distinct, -- with_nulls_not_distinct flag\n         IF pidx.max_key_distance = 1\n              THEN 1\n              ELSE NULL\n          ENDIF AS for_olap_workload -- for_olap_workload flag\nFROM     SYS.SYSIDX AS idx\nJOIN     SYS.SYSPHYSIDX pidx\nON       idx.table_id = pidx.table_id\nAND      idx.phys_index_id = pidx.phys_index_id\nJOIN     SYS.SYSIDXCOL AS idxcol\nON       idx.table_id = idxcol.table_id AND idx.index_id = idxcol.index_id\nJOIN     SYS.SYSTABCOL AS col\nON       idxcol.table_id = col.table_id AND idxcol.column_id = col.column_id\nJOIN     SYS.SYSTAB AS tbl\nON       idx.table_id = tbl.table_id\nWHERE    tbl.table_name = %s\nAND      tbl.creator = USER_ID(%s)\nAND      idx.index_category != 2 -- exclude indexes implicitly created by foreign key constraints\nORDER BY idx.index_id ASC, idxcol.sequence ASC\nSQL\n            ,\n            $table,\n            $user\n        );\n    }\n\n    /**\n     * {@inheritdoc}\n     */\n    public function getListTablesSQL()\n    {\n        return \"SELECT   tbl.table_name\n                FROM     SYS.SYSTAB AS tbl\n                JOIN     SYS.SYSUSER AS usr ON tbl.creator = usr.user_id\n                JOIN     dbo.SYSOBJECTS AS obj ON tbl.object_id = obj.id\n                WHERE    tbl.table_type IN(1, 3) -- 'BASE', 'GBL TEMP'\n                AND      usr.user_name NOT IN('SYS', 'dbo', 'rs_systabgroup') -- exclude system users\n                AND      obj.type = 'U' -- user created tables only\n                ORDER BY tbl.table_name ASC\";\n    }\n\n    /**\n     * {@inheritdoc}\n     *\n     * @todo Where is this used? Which information should be retrieved?\n     */\n    public function getListUsersSQL()\n    {\n        return 'SELECT * FROM SYS.SYSUSER ORDER BY user_name ASC';\n    }\n\n    /**\n     * {@inheritdoc}\n     */\n    public function getListViewsSQL($database)\n    {\n        return \"SELECT   tbl.table_name, v.view_def\n                FROM     SYS.SYSVIEW v\n                JOIN     SYS.SYSTAB tbl ON v.view_object_id = tbl.object_id\n                JOIN     SYS.SYSUSER usr ON tbl.creator = usr.user_id\n                JOIN     dbo.SYSOBJECTS obj ON tbl.object_id = obj.id\n                WHERE    usr.user_name NOT IN('SYS', 'dbo', 'rs_systabgroup') -- exclude system users\n                ORDER BY tbl.table_name ASC\";\n    }\n\n    /**\n     * {@inheritdoc}\n     */\n    public function getLocateExpression($str, $substr, $startPos = false)\n    {\n        if ($startPos === false) {\n            return 'LOCATE(' . $str . ', ' . $substr . ')';\n        }\n\n        return 'LOCATE(' . $str . ', ' . $substr . ', ' . $startPos . ')';\n    }\n\n    /**\n     * {@inheritdoc}\n     */\n    public function getMaxIdentifierLength()\n    {\n        return 128;\n    }\n\n    /**\n     * {@inheritdoc}\n     */\n    public function getMd5Expression($column)\n    {\n        return 'HASH(' . $column . \", 'MD5')\";\n    }\n\n    /**\n     * {@inheritdoc}\n     */\n    public function getName()\n    {\n        return 'sqlanywhere';\n    }\n\n    /**\n     * Obtain DBMS specific SQL code portion needed to set a primary key\n     * declaration to be used in statements like ALTER TABLE.\n     *\n     * @param Index  $index Index definition\n     * @param string $name  Name of the primary key\n     *\n     * @return string DBMS specific SQL code portion needed to set a primary key\n     *\n     * @throws InvalidArgumentException If the given index is not a primary key.\n     */\n    public function getPrimaryKeyDeclarationSQL(Index $index, $name = null)\n    {\n        if (! $index->isPrimary()) {\n            throw new InvalidArgumentException(\n                'Can only create primary key declarations with getPrimaryKeyDeclarationSQL()'\n            );\n        }\n\n        return $this->getTableConstraintDeclarationSQL($index, $name);\n    }\n\n    /**\n     * {@inheritdoc}\n     */\n    public function getSetTransactionIsolationSQL($level)\n    {\n        return 'SET TEMPORARY OPTION isolation_level = ' . $this->_getTransactionIsolationLevelSQL($level);\n    }\n\n    /**\n     * {@inheritdoc}\n     */\n    public function getSmallIntTypeDeclarationSQL(array $column)\n    {\n        $column['integer_type'] = 'SMALLINT';\n\n        return $this->_getCommonIntegerTypeDeclarationSQL($column);\n    }\n\n    /**\n     * Returns the SQL statement for starting an existing database.\n     *\n     * In SQL Anywhere you can start and stop databases on a\n     * database server instance.\n     * This is a required statement after having created a new database\n     * as it has to be explicitly started to be usable.\n     * SQL Anywhere does not automatically start a database after creation!\n     *\n     * @param string $database Name of the database to start.\n     *\n     * @return string\n     */\n    public function getStartDatabaseSQL($database)\n    {\n        $database = new Identifier($database);\n\n        return \"START DATABASE '\" . $database->getName() . \"' AUTOSTOP OFF\";\n    }\n\n    /**\n     * Returns the SQL statement for stopping a running database.\n     *\n     * In SQL Anywhere you can start and stop databases on a\n     * database server instance.\n     * This is a required statement before dropping an existing database\n     * as it has to be explicitly stopped before it can be dropped.\n     *\n     * @param string $database Name of the database to stop.\n     *\n     * @return string\n     */\n    public function getStopDatabaseSQL($database)\n    {\n        $database = new Identifier($database);\n\n        return 'STOP DATABASE \"' . $database->getName() . '\" UNCONDITIONALLY';\n    }\n\n    /**\n     * {@inheritdoc}\n     */\n    public function getSubstringExpression($string, $start, $length = null)\n    {\n        if ($length === null) {\n            return 'SUBSTRING(' . $string . ', ' . $start . ')';\n        }\n\n        return 'SUBSTRING(' . $string . ', ' . $start . ', ' . $length . ')';\n    }\n\n    /**\n     * {@inheritdoc}\n     */\n    public function getTemporaryTableSQL()\n    {\n        return 'GLOBAL TEMPORARY';\n    }\n\n    /**\n     * {@inheritdoc}\n     */\n    public function getTimeFormatString()\n    {\n        return 'H:i:s.u';\n    }\n\n    /**\n     * {@inheritdoc}\n     */\n    public function getTimeTypeDeclarationSQL(array $column)\n    {\n        return 'TIME';\n    }\n\n    /**\n     * {@inheritdoc}\n     */\n    public function getTrimExpression($str, $mode = TrimMode::UNSPECIFIED, $char = false)\n    {\n        if (! $char) {\n            switch ($mode) {\n                case TrimMode::LEADING:\n                    return $this->getLtrimExpression($str);\n\n                case TrimMode::TRAILING:\n                    return $this->getRtrimExpression($str);\n\n                default:\n                    return 'TRIM(' . $str . ')';\n            }\n        }\n\n        $pattern = \"'%[^' + \" . $char . \" + ']%'\";\n\n        switch ($mode) {\n            case TrimMode::LEADING:\n                return 'SUBSTR(' . $str . ', PATINDEX(' . $pattern . ', ' . $str . '))';\n\n            case TrimMode::TRAILING:\n                return 'REVERSE(SUBSTR(REVERSE(' . $str . '), PATINDEX(' . $pattern . ', REVERSE(' . $str . '))))';\n\n            default:\n                return 'REVERSE(SUBSTR(REVERSE(SUBSTR(' . $str . ', PATINDEX(' . $pattern . ', ' . $str . '))), ' .\n                    'PATINDEX(' . $pattern . ', ' .\n                    'REVERSE(SUBSTR(' . $str . ', PATINDEX(' . $pattern . ', ' . $str . '))))))';\n        }\n    }\n\n    /**\n     * {@inheritdoc}\n     */\n    public function getTruncateTableSQL($tableName, $cascade = false)\n    {\n        $tableIdentifier = new Identifier($tableName);\n\n        return 'TRUNCATE TABLE ' . $tableIdentifier->getQuotedName($this);\n    }\n\n    /**\n     * {@inheritdoc}\n     */\n    public function getUniqueConstraintDeclarationSQL($name, Index $index)\n    {\n        if ($index->isPrimary()) {\n            throw new InvalidArgumentException(\n                'Cannot create primary key constraint declarations with getUniqueConstraintDeclarationSQL().'\n            );\n        }\n\n        if (! $index->isUnique()) {\n            throw new InvalidArgumentException(\n                'Can only create unique constraint declarations, no common index declarations with ' .\n                'getUniqueConstraintDeclarationSQL().'\n            );\n        }\n\n        return $this->getTableConstraintDeclarationSQL($index, $name);\n    }\n\n    /**\n     * {@inheritdoc}\n     */\n    public function getVarcharDefaultLength()\n    {\n        return 1;\n    }\n\n    /**\n     * {@inheritdoc}\n     */\n    public function getVarcharMaxLength()\n    {\n        return 32767;\n    }\n\n    /**\n     * {@inheritdoc}\n     */\n    public function hasNativeGuidType()\n    {\n        return true;\n    }\n\n    /**\n     * {@inheritdoc}\n     */\n    public function prefersIdentityColumns()\n    {\n        return true;\n    }\n\n    /**\n     * {@inheritdoc}\n     */\n    public function supportsCommentOnStatement()\n    {\n        return true;\n    }\n\n    /**\n     * {@inheritdoc}\n     */\n    public function supportsIdentityColumns()\n    {\n        return true;\n    }\n\n    /**\n     * {@inheritdoc}\n     */\n    protected function _getCommonIntegerTypeDeclarationSQL(array $column)\n    {\n        $unsigned      = ! empty($column['unsigned']) ? 'UNSIGNED ' : '';\n        $autoincrement = ! empty($column['autoincrement']) ? ' IDENTITY' : '';\n\n        return $unsigned . $column['integer_type'] . $autoincrement;\n    }\n\n    /**\n     * {@inheritdoc}\n     */\n    protected function _getCreateTableSQL($name, array $columns, array $options = [])\n    {\n        $columnListSql = $this->getColumnDeclarationListSQL($columns);\n        $indexSql      = [];\n\n        if (! empty($options['uniqueConstraints'])) {\n            foreach ((array) $options['uniqueConstraints'] as $name => $definition) {\n                $columnListSql .= ', ' . $this->getUniqueConstraintDeclarationSQL($name, $definition);\n            }\n        }\n\n        if (! empty($options['indexes'])) {\n            foreach ((array) $options['indexes'] as $index) {\n                assert($index instanceof Index);\n                $indexSql[] = $this->getCreateIndexSQL($index, $name);\n            }\n        }\n\n        if (! empty($options['primary'])) {\n            $flags = '';\n\n            if (isset($options['primary_index']) && $options['primary_index']->hasFlag('clustered')) {\n                $flags = ' CLUSTERED ';\n            }\n\n            $columnListSql .= ', PRIMARY KEY' . $flags\n                . ' (' . implode(', ', array_unique(array_values((array) $options['primary']))) . ')';\n        }\n\n        if (! empty($options['foreignKeys'])) {\n            foreach ((array) $options['foreignKeys'] as $definition) {\n                $columnListSql .= ', ' . $this->getForeignKeyDeclarationSQL($definition);\n            }\n        }\n\n        $query = 'CREATE TABLE ' . $name . ' (' . $columnListSql;\n        $check = $this->getCheckDeclarationSQL($columns);\n\n        if (! empty($check)) {\n            $query .= ', ' . $check;\n        }\n\n        $query .= ')';\n\n        return array_merge([$query], $indexSql);\n    }\n\n    /**\n     * {@inheritdoc}\n     */\n    protected function _getTransactionIsolationLevelSQL($level)\n    {\n        switch ($level) {\n            case TransactionIsolationLevel::READ_UNCOMMITTED:\n                return '0';\n\n            case TransactionIsolationLevel::READ_COMMITTED:\n                return '1';\n\n            case TransactionIsolationLevel::REPEATABLE_READ:\n                return '2';\n\n            case TransactionIsolationLevel::SERIALIZABLE:\n                return '3';\n\n            default:\n                throw new InvalidArgumentException('Invalid isolation level:' . $level);\n        }\n    }\n\n    /**\n     * {@inheritdoc}\n     */\n    protected function doModifyLimitQuery($query, $limit, $offset)\n    {\n        $limitOffsetClause = $this->getTopClauseSQL($limit, $offset);\n\n        if ($limitOffsetClause === '') {\n            return $query;\n        }\n\n        if (! preg_match('/^\\s*(SELECT\\s+(DISTINCT\\s+)?)(.*)/i', $query, $matches)) {\n            return $query;\n        }\n\n        return $matches[1] . $limitOffsetClause . ' ' . $matches[3];\n    }\n\n    private function getTopClauseSQL(?int $limit, ?int $offset): string\n    {\n        if ($offset > 0) {\n            return sprintf('TOP %s START AT %d', $limit ?? 'ALL', $offset + 1);\n        }\n\n        return $limit === null ? '' : 'TOP ' . $limit;\n    }\n\n    /**\n     * Return the INDEX query section dealing with non-standard\n     * SQL Anywhere options.\n     *\n     * @param Index $index Index definition\n     *\n     * @return string\n     */\n    protected function getAdvancedIndexOptionsSQL(Index $index)\n    {\n        $sql = '';\n\n        if (! $index->isPrimary() && $index->hasFlag('for_olap_workload')) {\n            $sql .= ' FOR OLAP WORKLOAD';\n        }\n\n        return $sql;\n    }\n\n    /**\n     * {@inheritdoc}\n     */\n    protected function getBinaryTypeDeclarationSQLSnippet($length, $fixed)\n    {\n        return $fixed\n            ? 'BINARY(' . ($length ?: $this->getBinaryDefaultLength()) . ')'\n            : 'VARBINARY(' . ($length ?: $this->getBinaryDefaultLength()) . ')';\n    }\n\n    /**\n     * Returns the SQL snippet for creating a table constraint.\n     *\n     * @param Constraint  $constraint The table constraint to create the SQL snippet for.\n     * @param string|null $name       The table constraint name to use if any.\n     *\n     * @return string\n     *\n     * @throws InvalidArgumentException If the given table constraint type is not supported by this method.\n     */\n    protected function getTableConstraintDeclarationSQL(Constraint $constraint, $name = null)\n    {\n        if ($constraint instanceof ForeignKeyConstraint) {\n            return $this->getForeignKeyDeclarationSQL($constraint);\n        }\n\n        if (! $constraint instanceof Index) {\n            throw new InvalidArgumentException('Unsupported constraint type: ' . get_class($constraint));\n        }\n\n        if (! $constraint->isPrimary() && ! $constraint->isUnique()) {\n            throw new InvalidArgumentException(\n                'Can only create primary, unique or foreign key constraint declarations, no common index declarations'\n                    . ' with getTableConstraintDeclarationSQL().'\n            );\n        }\n\n        $constraintColumns = $constraint->getQuotedColumns($this);\n\n        if (empty($constraintColumns)) {\n            throw new InvalidArgumentException(\"Incomplete definition. 'columns' required.\");\n        }\n\n        $sql   = '';\n        $flags = '';\n\n        if (! empty($name)) {\n            $name = new Identifier($name);\n            $sql .= 'CONSTRAINT ' . $name->getQuotedName($this) . ' ';\n        }\n\n        if ($constraint->hasFlag('clustered')) {\n            $flags = 'CLUSTERED ';\n        }\n\n        if ($constraint->isPrimary()) {\n            return $sql . 'PRIMARY KEY ' . $flags\n                . '(' . $this->getIndexFieldDeclarationListSQL($constraintColumns) . ')';\n        }\n\n        return $sql . 'UNIQUE ' . $flags . '(' . $this->getIndexFieldDeclarationListSQL($constraintColumns) . ')';\n    }\n\n    /**\n     * {@inheritdoc}\n     */\n    protected function getCreateIndexSQLFlags(Index $index)\n    {\n        $type = '';\n        if ($index->hasFlag('virtual')) {\n            $type .= 'VIRTUAL ';\n        }\n\n        if ($index->isUnique()) {\n            $type .= 'UNIQUE ';\n        }\n\n        if ($index->hasFlag('clustered')) {\n            $type .= 'CLUSTERED ';\n        }\n\n        return $type;\n    }\n\n    /**\n     * {@inheritdoc}\n     */\n    protected function getRenameIndexSQL($oldIndexName, Index $index, $tableName)\n    {\n        return ['ALTER INDEX ' . $oldIndexName . ' ON ' . $tableName . ' RENAME TO ' . $index->getQuotedName($this)];\n    }\n\n    /**\n     * {@inheritdoc}\n     */\n    protected function getReservedKeywordsClass()\n    {\n        return Keywords\\SQLAnywhereKeywords::class;\n    }\n\n    /**\n     * {@inheritdoc}\n     */\n    protected function getVarcharTypeDeclarationSQLSnippet($length, $fixed)\n    {\n        return $fixed\n            ? ($length ? 'CHAR(' . $length . ')' : 'CHAR(' . $this->getVarcharDefaultLength() . ')')\n            : ($length ? 'VARCHAR(' . $length . ')' : 'VARCHAR(' . $this->getVarcharDefaultLength() . ')');\n    }\n\n    /**\n     * {@inheritdoc}\n     */\n    protected function initializeDoctrineTypeMappings()\n    {\n        $this->doctrineTypeMapping = [\n            'char' => 'string',\n            'long nvarchar' => 'text',\n            'long varchar' => 'text',\n            'nchar' => 'string',\n            'ntext' => 'text',\n            'nvarchar' => 'string',\n            'text' => 'text',\n            'uniqueidentifierstr' => 'guid',\n            'varchar' => 'string',\n            'xml' => 'text',\n            'bigint' => 'bigint',\n            'unsigned bigint' => 'bigint',\n            'bit' => 'boolean',\n            'decimal' => 'decimal',\n            'double' => 'float',\n            'float' => 'float',\n            'int' => 'integer',\n            'integer' => 'integer',\n            'unsigned int' => 'integer',\n            'numeric' => 'decimal',\n            'smallint' => 'smallint',\n            'unsigned smallint' => 'smallint',\n            'tinyint' => 'smallint',\n            'unsigned tinyint' => 'smallint',\n            'money' => 'decimal',\n            'smallmoney' => 'decimal',\n            'long varbit' => 'text',\n            'varbit' => 'string',\n            'date' => 'date',\n            'datetime' => 'datetime',\n            'smalldatetime' => 'datetime',\n            'time' => 'time',\n            'timestamp' => 'datetime',\n            'binary' => 'binary',\n            'image' => 'blob',\n            'long binary' => 'blob',\n            'uniqueidentifier' => 'guid',\n            'varbinary' => 'binary',\n        ];\n    }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- vendor/doctrine/dbal/lib/Doctrine/DBAL/Platforms/SQLAnywherePlatform.php	(revision a449d8a584af7c2722ad0d48f553c0917ddead6e)
+++ vendor/doctrine/dbal/lib/Doctrine/DBAL/Platforms/SQLAnywherePlatform.php	(date 1605385618000)
@@ -52,7 +52,7 @@
     {
         switch (true) {
             case $lockMode === LockMode::NONE:
-                return $fromClause . ' WITH (NOLOCK)';
+                return $fromClause;
 
             case $lockMode === LockMode::PESSIMISTIC_READ:
                 return $fromClause . ' WITH (UPDLOCK)';
Index: vendor/doctrine/dbal/lib/Doctrine/DBAL/Platforms/SQLServerPlatform.php
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?php\n\nnamespace Doctrine\\DBAL\\Platforms;\n\nuse Doctrine\\DBAL\\LockMode;\nuse Doctrine\\DBAL\\Schema\\Column;\nuse Doctrine\\DBAL\\Schema\\ColumnDiff;\nuse Doctrine\\DBAL\\Schema\\ForeignKeyConstraint;\nuse Doctrine\\DBAL\\Schema\\Identifier;\nuse Doctrine\\DBAL\\Schema\\Index;\nuse Doctrine\\DBAL\\Schema\\Table;\nuse Doctrine\\DBAL\\Schema\\TableDiff;\nuse InvalidArgumentException;\n\nuse function array_merge;\nuse function array_unique;\nuse function array_values;\nuse function count;\nuse function crc32;\nuse function dechex;\nuse function explode;\nuse function func_get_args;\nuse function implode;\nuse function is_array;\nuse function is_bool;\nuse function is_numeric;\nuse function is_string;\nuse function preg_match;\nuse function sprintf;\nuse function str_replace;\nuse function stripos;\nuse function stristr;\nuse function strlen;\nuse function strpos;\nuse function strtoupper;\nuse function substr;\nuse function substr_count;\n\n/**\n * The SQLServerPlatform provides the behavior, features and SQL dialect of the\n * Microsoft SQL Server database platform.\n *\n * @deprecated Use SQL Server 2012 or newer\n */\nclass SQLServerPlatform extends AbstractPlatform\n{\n    /**\n     * {@inheritdoc}\n     */\n    public function getCurrentDateSQL()\n    {\n        return $this->getConvertExpression('date', 'GETDATE()');\n    }\n\n    /**\n     * {@inheritdoc}\n     */\n    public function getCurrentTimeSQL()\n    {\n        return $this->getConvertExpression('time', 'GETDATE()');\n    }\n\n    /**\n     * Returns an expression that converts an expression of one data type to another.\n     *\n     * @param string $dataType   The target native data type. Alias data types cannot be used.\n     * @param string $expression The SQL expression to convert.\n     *\n     * @return string\n     */\n    private function getConvertExpression($dataType, $expression)\n    {\n        return sprintf('CONVERT(%s, %s)', $dataType, $expression);\n    }\n\n    /**\n     * {@inheritdoc}\n     */\n    protected function getDateArithmeticIntervalExpression($date, $operator, $interval, $unit)\n    {\n        $factorClause = '';\n\n        if ($operator === '-') {\n            $factorClause = '-1 * ';\n        }\n\n        return 'DATEADD(' . $unit . ', ' . $factorClause . $interval . ', ' . $date . ')';\n    }\n\n    /**\n     * {@inheritDoc}\n     */\n    public function getDateDiffExpression($date1, $date2)\n    {\n        return 'DATEDIFF(day, ' . $date2 . ',' . $date1 . ')';\n    }\n\n    /**\n     * {@inheritDoc}\n     *\n     * Microsoft SQL Server prefers \"autoincrement\" identity columns\n     * since sequences can only be emulated with a table.\n     */\n    public function prefersIdentityColumns()\n    {\n        return true;\n    }\n\n    /**\n     * {@inheritDoc}\n     *\n     * Microsoft SQL Server supports this through AUTO_INCREMENT columns.\n     */\n    public function supportsIdentityColumns()\n    {\n        return true;\n    }\n\n    /**\n     * {@inheritDoc}\n     */\n    public function supportsReleaseSavepoints()\n    {\n        return false;\n    }\n\n    /**\n     * {@inheritdoc}\n     */\n    public function supportsSchemas()\n    {\n        return true;\n    }\n\n    /**\n     * {@inheritdoc}\n     */\n    public function getDefaultSchemaName()\n    {\n        return 'dbo';\n    }\n\n    /**\n     * {@inheritDoc}\n     */\n    public function supportsColumnCollation()\n    {\n        return true;\n    }\n\n    /**\n     * {@inheritDoc}\n     */\n    public function hasNativeGuidType()\n    {\n        return true;\n    }\n\n    /**\n     * {@inheritDoc}\n     */\n    public function getCreateDatabaseSQL($name)\n    {\n        return 'CREATE DATABASE ' . $name;\n    }\n\n    /**\n     * {@inheritDoc}\n     */\n    public function getDropDatabaseSQL($name)\n    {\n        return 'DROP DATABASE ' . $name;\n    }\n\n    /**\n     * {@inheritDoc}\n     */\n    public function supportsCreateDropDatabase()\n    {\n        return true;\n    }\n\n    /**\n     * {@inheritDoc}\n     */\n    public function getCreateSchemaSQL($schemaName)\n    {\n        return 'CREATE SCHEMA ' . $schemaName;\n    }\n\n    /**\n     * {@inheritDoc}\n     */\n    public function getDropForeignKeySQL($foreignKey, $table)\n    {\n        if (! $foreignKey instanceof ForeignKeyConstraint) {\n            $foreignKey = new Identifier($foreignKey);\n        }\n\n        if (! $table instanceof Table) {\n            $table = new Identifier($table);\n        }\n\n        $foreignKey = $foreignKey->getQuotedName($this);\n        $table      = $table->getQuotedName($this);\n\n        return 'ALTER TABLE ' . $table . ' DROP CONSTRAINT ' . $foreignKey;\n    }\n\n    /**\n     * {@inheritDoc}\n     */\n    public function getDropIndexSQL($index, $table = null)\n    {\n        if ($index instanceof Index) {\n            $index = $index->getQuotedName($this);\n        } elseif (! is_string($index)) {\n            throw new InvalidArgumentException(\n                __METHOD__ . '() expects $index parameter to be string or ' . Index::class . '.'\n            );\n        }\n\n        if (! isset($table)) {\n            return 'DROP INDEX ' . $index;\n        }\n\n        if ($table instanceof Table) {\n            $table = $table->getQuotedName($this);\n        }\n\n        return sprintf(\n            <<<SQL\nIF EXISTS (SELECT * FROM sysobjects WHERE name = '%s')\n    ALTER TABLE %s DROP CONSTRAINT %s\nELSE\n    DROP INDEX %s ON %s\nSQL\n            ,\n            $index,\n            $table,\n            $index,\n            $index,\n            $table\n        );\n    }\n\n    /**\n     * {@inheritDoc}\n     */\n    protected function _getCreateTableSQL($name, array $columns, array $options = [])\n    {\n        $defaultConstraintsSql = [];\n        $commentsSql           = [];\n\n        $tableComment = $options['comment'] ?? null;\n        if ($tableComment !== null) {\n            $commentsSql[] = $this->getCommentOnTableSQL($name, $tableComment);\n        }\n\n        // @todo does other code breaks because of this?\n        // force primary keys to be not null\n        foreach ($columns as &$column) {\n            if (isset($column['primary']) && $column['primary']) {\n                $column['notnull'] = true;\n            }\n\n            // Build default constraints SQL statements.\n            if (isset($column['default'])) {\n                $defaultConstraintsSql[] = 'ALTER TABLE ' . $name .\n                    ' ADD' . $this->getDefaultConstraintDeclarationSQL($name, $column);\n            }\n\n            if (empty($column['comment']) && ! is_numeric($column['comment'])) {\n                continue;\n            }\n\n            $commentsSql[] = $this->getCreateColumnCommentSQL($name, $column['name'], $column['comment']);\n        }\n\n        $columnListSql = $this->getColumnDeclarationListSQL($columns);\n\n        if (isset($options['uniqueConstraints']) && ! empty($options['uniqueConstraints'])) {\n            foreach ($options['uniqueConstraints'] as $name => $definition) {\n                $columnListSql .= ', ' . $this->getUniqueConstraintDeclarationSQL($name, $definition);\n            }\n        }\n\n        if (isset($options['primary']) && ! empty($options['primary'])) {\n            $flags = '';\n            if (isset($options['primary_index']) && $options['primary_index']->hasFlag('nonclustered')) {\n                $flags = ' NONCLUSTERED';\n            }\n\n            $columnListSql .= ', PRIMARY KEY' . $flags\n                . ' (' . implode(', ', array_unique(array_values($options['primary']))) . ')';\n        }\n\n        $query = 'CREATE TABLE ' . $name . ' (' . $columnListSql;\n\n        $check = $this->getCheckDeclarationSQL($columns);\n        if (! empty($check)) {\n            $query .= ', ' . $check;\n        }\n\n        $query .= ')';\n\n        $sql = [$query];\n\n        if (isset($options['indexes']) && ! empty($options['indexes'])) {\n            foreach ($options['indexes'] as $index) {\n                $sql[] = $this->getCreateIndexSQL($index, $name);\n            }\n        }\n\n        if (isset($options['foreignKeys'])) {\n            foreach ((array) $options['foreignKeys'] as $definition) {\n                $sql[] = $this->getCreateForeignKeySQL($definition, $name);\n            }\n        }\n\n        return array_merge($sql, $commentsSql, $defaultConstraintsSql);\n    }\n\n    /**\n     * {@inheritDoc}\n     */\n    public function getCreatePrimaryKeySQL(Index $index, $table)\n    {\n        if ($table instanceof Table) {\n            $identifier = $table->getQuotedName($this);\n        } else {\n            $identifier = $table;\n        }\n\n        $sql = 'ALTER TABLE ' . $identifier . ' ADD PRIMARY KEY';\n\n        if ($index->hasFlag('nonclustered')) {\n            $sql .= ' NONCLUSTERED';\n        }\n\n        return $sql . ' (' . $this->getIndexFieldDeclarationListSQL($index) . ')';\n    }\n\n    /**\n     * Returns the SQL statement for creating a column comment.\n     *\n     * SQL Server does not support native column comments,\n     * therefore the extended properties functionality is used\n     * as a workaround to store them.\n     * The property name used to store column comments is \"MS_Description\"\n     * which provides compatibility with SQL Server Management Studio,\n     * as column comments are stored in the same property there when\n     * specifying a column's \"Description\" attribute.\n     *\n     * @param string      $tableName  The quoted table name to which the column belongs.\n     * @param string      $columnName The quoted column name to create the comment for.\n     * @param string|null $comment    The column's comment.\n     *\n     * @return string\n     */\n    protected function getCreateColumnCommentSQL($tableName, $columnName, $comment)\n    {\n        if (strpos($tableName, '.') !== false) {\n            [$schemaSQL, $tableSQL] = explode('.', $tableName);\n            $schemaSQL              = $this->quoteStringLiteral($schemaSQL);\n            $tableSQL               = $this->quoteStringLiteral($tableSQL);\n        } else {\n            $schemaSQL = \"'dbo'\";\n            $tableSQL  = $this->quoteStringLiteral($tableName);\n        }\n\n        return $this->getAddExtendedPropertySQL(\n            'MS_Description',\n            $comment,\n            'SCHEMA',\n            $schemaSQL,\n            'TABLE',\n            $tableSQL,\n            'COLUMN',\n            $columnName\n        );\n    }\n\n    /**\n     * Returns the SQL snippet for declaring a default constraint.\n     *\n     * @param string  $table  Name of the table to return the default constraint declaration for.\n     * @param mixed[] $column Column definition.\n     *\n     * @return string\n     *\n     * @throws InvalidArgumentException\n     */\n    public function getDefaultConstraintDeclarationSQL($table, array $column)\n    {\n        if (! isset($column['default'])) {\n            throw new InvalidArgumentException(\"Incomplete column definition. 'default' required.\");\n        }\n\n        $columnName = new Identifier($column['name']);\n\n        return ' CONSTRAINT ' .\n            $this->generateDefaultConstraintName($table, $column['name']) .\n            $this->getDefaultValueDeclarationSQL($column) .\n            ' FOR ' . $columnName->getQuotedName($this);\n    }\n\n    /**\n     * {@inheritDoc}\n     */\n    public function getUniqueConstraintDeclarationSQL($name, Index $index)\n    {\n        $constraint = parent::getUniqueConstraintDeclarationSQL($name, $index);\n\n        $constraint = $this->_appendUniqueConstraintDefinition($constraint, $index);\n\n        return $constraint;\n    }\n\n    /**\n     * {@inheritDoc}\n     */\n    public function getCreateIndexSQL(Index $index, $table)\n    {\n        $constraint = parent::getCreateIndexSQL($index, $table);\n\n        if ($index->isUnique() && ! $index->isPrimary()) {\n            $constraint = $this->_appendUniqueConstraintDefinition($constraint, $index);\n        }\n\n        return $constraint;\n    }\n\n    /**\n     * {@inheritDoc}\n     */\n    protected function getCreateIndexSQLFlags(Index $index)\n    {\n        $type = '';\n        if ($index->isUnique()) {\n            $type .= 'UNIQUE ';\n        }\n\n        if ($index->hasFlag('clustered')) {\n            $type .= 'CLUSTERED ';\n        } elseif ($index->hasFlag('nonclustered')) {\n            $type .= 'NONCLUSTERED ';\n        }\n\n        return $type;\n    }\n\n    /**\n     * Extend unique key constraint with required filters\n     *\n     * @param string $sql\n     *\n     * @return string\n     */\n    private function _appendUniqueConstraintDefinition($sql, Index $index)\n    {\n        $fields = [];\n\n        foreach ($index->getQuotedColumns($this) as $field) {\n            $fields[] = $field . ' IS NOT NULL';\n        }\n\n        return $sql . ' WHERE ' . implode(' AND ', $fields);\n    }\n\n    /**\n     * {@inheritDoc}\n     */\n    public function getAlterTableSQL(TableDiff $diff)\n    {\n        $queryParts  = [];\n        $sql         = [];\n        $columnSql   = [];\n        $commentsSql = [];\n\n        foreach ($diff->addedColumns as $column) {\n            if ($this->onSchemaAlterTableAddColumn($column, $diff, $columnSql)) {\n                continue;\n            }\n\n            $columnDef    = $column->toArray();\n            $queryParts[] = 'ADD ' . $this->getColumnDeclarationSQL($column->getQuotedName($this), $columnDef);\n\n            if (isset($columnDef['default'])) {\n                $queryParts[] = $this->getAlterTableAddDefaultConstraintClause($diff->name, $column);\n            }\n\n            $comment = $this->getColumnComment($column);\n\n            if (empty($comment) && ! is_numeric($comment)) {\n                continue;\n            }\n\n            $commentsSql[] = $this->getCreateColumnCommentSQL(\n                $diff->name,\n                $column->getQuotedName($this),\n                $comment\n            );\n        }\n\n        foreach ($diff->removedColumns as $column) {\n            if ($this->onSchemaAlterTableRemoveColumn($column, $diff, $columnSql)) {\n                continue;\n            }\n\n            $queryParts[] = 'DROP COLUMN ' . $column->getQuotedName($this);\n        }\n\n        foreach ($diff->changedColumns as $columnDiff) {\n            if ($this->onSchemaAlterTableChangeColumn($columnDiff, $diff, $columnSql)) {\n                continue;\n            }\n\n            $column     = $columnDiff->column;\n            $comment    = $this->getColumnComment($column);\n            $hasComment = ! empty($comment) || is_numeric($comment);\n\n            if ($columnDiff->fromColumn instanceof Column) {\n                $fromComment    = $this->getColumnComment($columnDiff->fromColumn);\n                $hasFromComment = ! empty($fromComment) || is_numeric($fromComment);\n\n                if ($hasFromComment && $hasComment && $fromComment !== $comment) {\n                    $commentsSql[] = $this->getAlterColumnCommentSQL(\n                        $diff->name,\n                        $column->getQuotedName($this),\n                        $comment\n                    );\n                } elseif ($hasFromComment && ! $hasComment) {\n                    $commentsSql[] = $this->getDropColumnCommentSQL($diff->name, $column->getQuotedName($this));\n                } elseif (! $hasFromComment && $hasComment) {\n                    $commentsSql[] = $this->getCreateColumnCommentSQL(\n                        $diff->name,\n                        $column->getQuotedName($this),\n                        $comment\n                    );\n                }\n            }\n\n            // Do not add query part if only comment has changed.\n            if ($columnDiff->hasChanged('comment') && count($columnDiff->changedProperties) === 1) {\n                continue;\n            }\n\n            $requireDropDefaultConstraint = $this->alterColumnRequiresDropDefaultConstraint($columnDiff);\n\n            if ($requireDropDefaultConstraint) {\n                $queryParts[] = $this->getAlterTableDropDefaultConstraintClause(\n                    $diff->name,\n                    $columnDiff->oldColumnName\n                );\n            }\n\n            $columnDef = $column->toArray();\n\n            $queryParts[] = 'ALTER COLUMN ' . $this->getColumnDeclarationSQL($column->getQuotedName($this), $columnDef);\n\n            if (\n                ! isset($columnDef['default'])\n                || (! $requireDropDefaultConstraint && ! $columnDiff->hasChanged('default'))\n            ) {\n                continue;\n            }\n\n            $queryParts[] = $this->getAlterTableAddDefaultConstraintClause($diff->name, $column);\n        }\n\n        foreach ($diff->renamedColumns as $oldColumnName => $column) {\n            if ($this->onSchemaAlterTableRenameColumn($oldColumnName, $column, $diff, $columnSql)) {\n                continue;\n            }\n\n            $oldColumnName = new Identifier($oldColumnName);\n\n            $sql[] = \"sp_rename '\" .\n                $diff->getName($this)->getQuotedName($this) . '.' . $oldColumnName->getQuotedName($this) .\n                \"', '\" . $column->getQuotedName($this) . \"', 'COLUMN'\";\n\n            // Recreate default constraint with new column name if necessary (for future reference).\n            if ($column->getDefault() === null) {\n                continue;\n            }\n\n            $queryParts[] = $this->getAlterTableDropDefaultConstraintClause(\n                $diff->name,\n                $oldColumnName->getQuotedName($this)\n            );\n            $queryParts[] = $this->getAlterTableAddDefaultConstraintClause($diff->name, $column);\n        }\n\n        $tableSql = [];\n\n        if ($this->onSchemaAlterTable($diff, $tableSql)) {\n            return array_merge($tableSql, $columnSql);\n        }\n\n        foreach ($queryParts as $query) {\n            $sql[] = 'ALTER TABLE ' . $diff->getName($this)->getQuotedName($this) . ' ' . $query;\n        }\n\n        $sql = array_merge($sql, $commentsSql);\n\n        $newName = $diff->getNewName();\n\n        if ($newName !== false) {\n            $sql[] = \"sp_rename '\" . $diff->getName($this)->getQuotedName($this) . \"', '\" . $newName->getName() . \"'\";\n\n            /**\n             * Rename table's default constraints names\n             * to match the new table name.\n             * This is necessary to ensure that the default\n             * constraints can be referenced in future table\n             * alterations as the table name is encoded in\n             * default constraints' names.\n             */\n            $sql[] = \"DECLARE @sql NVARCHAR(MAX) = N''; \" .\n                \"SELECT @sql += N'EXEC sp_rename N''' + dc.name + ''', N''' \" .\n                \"+ REPLACE(dc.name, '\" . $this->generateIdentifierName($diff->name) . \"', \" .\n                \"'\" . $this->generateIdentifierName($newName->getName()) . \"') + ''', ''OBJECT'';' \" .\n                'FROM sys.default_constraints dc ' .\n                'JOIN sys.tables tbl ON dc.parent_object_id = tbl.object_id ' .\n                \"WHERE tbl.name = '\" . $newName->getName() . \"';\" .\n                'EXEC sp_executesql @sql';\n        }\n\n        $sql = array_merge(\n            $this->getPreAlterTableIndexForeignKeySQL($diff),\n            $sql,\n            $this->getPostAlterTableIndexForeignKeySQL($diff)\n        );\n\n        return array_merge($sql, $tableSql, $columnSql);\n    }\n\n    /**\n     * Returns the SQL clause for adding a default constraint in an ALTER TABLE statement.\n     *\n     * @param string $tableName The name of the table to generate the clause for.\n     * @param Column $column    The column to generate the clause for.\n     *\n     * @return string\n     */\n    private function getAlterTableAddDefaultConstraintClause($tableName, Column $column)\n    {\n        $columnDef         = $column->toArray();\n        $columnDef['name'] = $column->getQuotedName($this);\n\n        return 'ADD' . $this->getDefaultConstraintDeclarationSQL($tableName, $columnDef);\n    }\n\n    /**\n     * Returns the SQL clause for dropping an existing default constraint in an ALTER TABLE statement.\n     *\n     * @param string $tableName  The name of the table to generate the clause for.\n     * @param string $columnName The name of the column to generate the clause for.\n     *\n     * @return string\n     */\n    private function getAlterTableDropDefaultConstraintClause($tableName, $columnName)\n    {\n        return 'DROP CONSTRAINT ' . $this->generateDefaultConstraintName($tableName, $columnName);\n    }\n\n    /**\n     * Checks whether a column alteration requires dropping its default constraint first.\n     *\n     * Different to other database vendors SQL Server implements column default values\n     * as constraints and therefore changes in a column's default value as well as changes\n     * in a column's type require dropping the default constraint first before being to\n     * alter the particular column to the new definition.\n     *\n     * @param ColumnDiff $columnDiff The column diff to evaluate.\n     *\n     * @return bool True if the column alteration requires dropping its default constraint first, false otherwise.\n     */\n    private function alterColumnRequiresDropDefaultConstraint(ColumnDiff $columnDiff)\n    {\n        // We can only decide whether to drop an existing default constraint\n        // if we know the original default value.\n        if (! $columnDiff->fromColumn instanceof Column) {\n            return false;\n        }\n\n        // We only need to drop an existing default constraint if we know the\n        // column was defined with a default value before.\n        if ($columnDiff->fromColumn->getDefault() === null) {\n            return false;\n        }\n\n        // We need to drop an existing default constraint if the column was\n        // defined with a default value before and it has changed.\n        if ($columnDiff->hasChanged('default')) {\n            return true;\n        }\n\n        // We need to drop an existing default constraint if the column was\n        // defined with a default value before and the native column type has changed.\n        return $columnDiff->hasChanged('type') || $columnDiff->hasChanged('fixed');\n    }\n\n    /**\n     * Returns the SQL statement for altering a column comment.\n     *\n     * SQL Server does not support native column comments,\n     * therefore the extended properties functionality is used\n     * as a workaround to store them.\n     * The property name used to store column comments is \"MS_Description\"\n     * which provides compatibility with SQL Server Management Studio,\n     * as column comments are stored in the same property there when\n     * specifying a column's \"Description\" attribute.\n     *\n     * @param string      $tableName  The quoted table name to which the column belongs.\n     * @param string      $columnName The quoted column name to alter the comment for.\n     * @param string|null $comment    The column's comment.\n     *\n     * @return string\n     */\n    protected function getAlterColumnCommentSQL($tableName, $columnName, $comment)\n    {\n        if (strpos($tableName, '.') !== false) {\n            [$schemaSQL, $tableSQL] = explode('.', $tableName);\n            $schemaSQL              = $this->quoteStringLiteral($schemaSQL);\n            $tableSQL               = $this->quoteStringLiteral($tableSQL);\n        } else {\n            $schemaSQL = \"'dbo'\";\n            $tableSQL  = $this->quoteStringLiteral($tableName);\n        }\n\n        return $this->getUpdateExtendedPropertySQL(\n            'MS_Description',\n            $comment,\n            'SCHEMA',\n            $schemaSQL,\n            'TABLE',\n            $tableSQL,\n            'COLUMN',\n            $columnName\n        );\n    }\n\n    /**\n     * Returns the SQL statement for dropping a column comment.\n     *\n     * SQL Server does not support native column comments,\n     * therefore the extended properties functionality is used\n     * as a workaround to store them.\n     * The property name used to store column comments is \"MS_Description\"\n     * which provides compatibility with SQL Server Management Studio,\n     * as column comments are stored in the same property there when\n     * specifying a column's \"Description\" attribute.\n     *\n     * @param string $tableName  The quoted table name to which the column belongs.\n     * @param string $columnName The quoted column name to drop the comment for.\n     *\n     * @return string\n     */\n    protected function getDropColumnCommentSQL($tableName, $columnName)\n    {\n        if (strpos($tableName, '.') !== false) {\n            [$schemaSQL, $tableSQL] = explode('.', $tableName);\n            $schemaSQL              = $this->quoteStringLiteral($schemaSQL);\n            $tableSQL               = $this->quoteStringLiteral($tableSQL);\n        } else {\n            $schemaSQL = \"'dbo'\";\n            $tableSQL  = $this->quoteStringLiteral($tableName);\n        }\n\n        return $this->getDropExtendedPropertySQL(\n            'MS_Description',\n            'SCHEMA',\n            $schemaSQL,\n            'TABLE',\n            $tableSQL,\n            'COLUMN',\n            $columnName\n        );\n    }\n\n    /**\n     * {@inheritdoc}\n     */\n    protected function getRenameIndexSQL($oldIndexName, Index $index, $tableName)\n    {\n        return [sprintf(\n            \"EXEC sp_rename N'%s.%s', N'%s', N'INDEX'\",\n            $tableName,\n            $oldIndexName,\n            $index->getQuotedName($this)\n        ),\n        ];\n    }\n\n    /**\n     * Returns the SQL statement for adding an extended property to a database object.\n     *\n     * @link http://msdn.microsoft.com/en-us/library/ms180047%28v=sql.90%29.aspx\n     *\n     * @param string      $name       The name of the property to add.\n     * @param string|null $value      The value of the property to add.\n     * @param string|null $level0Type The type of the object at level 0 the property belongs to.\n     * @param string|null $level0Name The name of the object at level 0 the property belongs to.\n     * @param string|null $level1Type The type of the object at level 1 the property belongs to.\n     * @param string|null $level1Name The name of the object at level 1 the property belongs to.\n     * @param string|null $level2Type The type of the object at level 2 the property belongs to.\n     * @param string|null $level2Name The name of the object at level 2 the property belongs to.\n     *\n     * @return string\n     */\n    public function getAddExtendedPropertySQL(\n        $name,\n        $value = null,\n        $level0Type = null,\n        $level0Name = null,\n        $level1Type = null,\n        $level1Name = null,\n        $level2Type = null,\n        $level2Name = null\n    ) {\n        return 'EXEC sp_addextendedproperty ' .\n            'N' . $this->quoteStringLiteral($name) . ', N' . $this->quoteStringLiteral((string) $value) . ', ' .\n            'N' . $this->quoteStringLiteral((string) $level0Type) . ', ' . $level0Name . ', ' .\n            'N' . $this->quoteStringLiteral((string) $level1Type) . ', ' . $level1Name . ', ' .\n            'N' . $this->quoteStringLiteral((string) $level2Type) . ', ' . $level2Name;\n    }\n\n    /**\n     * Returns the SQL statement for dropping an extended property from a database object.\n     *\n     * @link http://technet.microsoft.com/en-gb/library/ms178595%28v=sql.90%29.aspx\n     *\n     * @param string      $name       The name of the property to drop.\n     * @param string|null $level0Type The type of the object at level 0 the property belongs to.\n     * @param string|null $level0Name The name of the object at level 0 the property belongs to.\n     * @param string|null $level1Type The type of the object at level 1 the property belongs to.\n     * @param string|null $level1Name The name of the object at level 1 the property belongs to.\n     * @param string|null $level2Type The type of the object at level 2 the property belongs to.\n     * @param string|null $level2Name The name of the object at level 2 the property belongs to.\n     *\n     * @return string\n     */\n    public function getDropExtendedPropertySQL(\n        $name,\n        $level0Type = null,\n        $level0Name = null,\n        $level1Type = null,\n        $level1Name = null,\n        $level2Type = null,\n        $level2Name = null\n    ) {\n        return 'EXEC sp_dropextendedproperty ' .\n            'N' . $this->quoteStringLiteral($name) . ', ' .\n            'N' . $this->quoteStringLiteral((string) $level0Type) . ', ' . $level0Name . ', ' .\n            'N' . $this->quoteStringLiteral((string) $level1Type) . ', ' . $level1Name . ', ' .\n            'N' . $this->quoteStringLiteral((string) $level2Type) . ', ' . $level2Name;\n    }\n\n    /**\n     * Returns the SQL statement for updating an extended property of a database object.\n     *\n     * @link http://msdn.microsoft.com/en-us/library/ms186885%28v=sql.90%29.aspx\n     *\n     * @param string      $name       The name of the property to update.\n     * @param string|null $value      The value of the property to update.\n     * @param string|null $level0Type The type of the object at level 0 the property belongs to.\n     * @param string|null $level0Name The name of the object at level 0 the property belongs to.\n     * @param string|null $level1Type The type of the object at level 1 the property belongs to.\n     * @param string|null $level1Name The name of the object at level 1 the property belongs to.\n     * @param string|null $level2Type The type of the object at level 2 the property belongs to.\n     * @param string|null $level2Name The name of the object at level 2 the property belongs to.\n     *\n     * @return string\n     */\n    public function getUpdateExtendedPropertySQL(\n        $name,\n        $value = null,\n        $level0Type = null,\n        $level0Name = null,\n        $level1Type = null,\n        $level1Name = null,\n        $level2Type = null,\n        $level2Name = null\n    ) {\n        return 'EXEC sp_updateextendedproperty ' .\n            'N' . $this->quoteStringLiteral($name) . ', N' . $this->quoteStringLiteral((string) $value) . ', ' .\n            'N' . $this->quoteStringLiteral((string) $level0Type) . ', ' . $level0Name . ', ' .\n            'N' . $this->quoteStringLiteral((string) $level1Type) . ', ' . $level1Name . ', ' .\n            'N' . $this->quoteStringLiteral((string) $level2Type) . ', ' . $level2Name;\n    }\n\n    /**\n     * {@inheritDoc}\n     */\n    public function getEmptyIdentityInsertSQL($quotedTableName, $quotedIdentifierColumnName)\n    {\n        return 'INSERT INTO ' . $quotedTableName . ' DEFAULT VALUES';\n    }\n\n    /**\n     * {@inheritDoc}\n     */\n    public function getListTablesSQL()\n    {\n        // \"sysdiagrams\" table must be ignored as it's internal SQL Server table for Database Diagrams\n        // Category 2 must be ignored as it is \"MS SQL Server 'pseudo-system' object[s]\" for replication\n        return \"SELECT name FROM sysobjects WHERE type = 'U' AND name != 'sysdiagrams' AND category != 2 ORDER BY name\";\n    }\n\n    /**\n     * {@inheritDoc}\n     */\n    public function getListTableColumnsSQL($table, $database = null)\n    {\n        return \"SELECT    col.name,\n                          type.name AS type,\n                          col.max_length AS length,\n                          ~col.is_nullable AS notnull,\n                          def.definition AS [default],\n                          col.scale,\n                          col.precision,\n                          col.is_identity AS autoincrement,\n                          col.collation_name AS collation,\n                          CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type\n                FROM      sys.columns AS col\n                JOIN      sys.types AS type\n                ON        col.user_type_id = type.user_type_id\n                JOIN      sys.objects AS obj\n                ON        col.object_id = obj.object_id\n                JOIN      sys.schemas AS scm\n                ON        obj.schema_id = scm.schema_id\n                LEFT JOIN sys.default_constraints def\n                ON        col.default_object_id = def.object_id\n                AND       col.object_id = def.parent_object_id\n                LEFT JOIN sys.extended_properties AS prop\n                ON        obj.object_id = prop.major_id\n                AND       col.column_id = prop.minor_id\n                AND       prop.name = 'MS_Description'\n                WHERE     obj.type = 'U'\n                AND       \" . $this->getTableWhereClause($table, 'scm.name', 'obj.name');\n    }\n\n    /**\n     * @param string      $table\n     * @param string|null $database\n     *\n     * @return string\n     */\n    public function getListTableForeignKeysSQL($table, $database = null)\n    {\n        return 'SELECT f.name AS ForeignKey,\n                SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,\n                OBJECT_NAME (f.parent_object_id) AS TableName,\n                COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,\n                SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,\n                OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,\n                COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,\n                f.delete_referential_action_desc,\n                f.update_referential_action_desc\n                FROM sys.foreign_keys AS f\n                INNER JOIN sys.foreign_key_columns AS fc\n                INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id\n                ON f.OBJECT_ID = fc.constraint_object_id\n                WHERE ' .\n                $this->getTableWhereClause($table, 'SCHEMA_NAME (f.schema_id)', 'OBJECT_NAME (f.parent_object_id)');\n    }\n\n    /**\n     * {@inheritDoc}\n     */\n    public function getListTableIndexesSQL($table, $database = null)\n    {\n        return \"SELECT idx.name AS key_name,\n                       col.name AS column_name,\n                       ~idx.is_unique AS non_unique,\n                       idx.is_primary_key AS [primary],\n                       CASE idx.type\n                           WHEN '1' THEN 'clustered'\n                           WHEN '2' THEN 'nonclustered'\n                           ELSE NULL\n                       END AS flags\n                FROM sys.tables AS tbl\n                JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id\n                JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id\n                JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id\n                JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id\n                WHERE \" . $this->getTableWhereClause($table, 'scm.name', 'tbl.name') . '\n                ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC';\n    }\n\n    /**\n     * {@inheritDoc}\n     */\n    public function getCreateViewSQL($name, $sql)\n    {\n        return 'CREATE VIEW ' . $name . ' AS ' . $sql;\n    }\n\n    /**\n     * {@inheritDoc}\n     */\n    public function getListViewsSQL($database)\n    {\n        return \"SELECT name FROM sysobjects WHERE type = 'V' ORDER BY name\";\n    }\n\n    /**\n     * Returns the where clause to filter schema and table name in a query.\n     *\n     * @param string $table        The full qualified name of the table.\n     * @param string $schemaColumn The name of the column to compare the schema to in the where clause.\n     * @param string $tableColumn  The name of the column to compare the table to in the where clause.\n     *\n     * @return string\n     */\n    private function getTableWhereClause($table, $schemaColumn, $tableColumn)\n    {\n        if (strpos($table, '.') !== false) {\n            [$schema, $table] = explode('.', $table);\n            $schema           = $this->quoteStringLiteral($schema);\n            $table            = $this->quoteStringLiteral($table);\n        } else {\n            $schema = 'SCHEMA_NAME()';\n            $table  = $this->quoteStringLiteral($table);\n        }\n\n        return sprintf('(%s = %s AND %s = %s)', $tableColumn, $table, $schemaColumn, $schema);\n    }\n\n    /**\n     * {@inheritDoc}\n     */\n    public function getDropViewSQL($name)\n    {\n        return 'DROP VIEW ' . $name;\n    }\n\n    /**\n     * {@inheritDoc}\n     *\n     * @deprecated Use application-generated UUIDs instead\n     */\n    public function getGuidExpression()\n    {\n        return 'NEWID()';\n    }\n\n    /**\n     * {@inheritDoc}\n     */\n    public function getLocateExpression($str, $substr, $startPos = false)\n    {\n        if ($startPos === false) {\n            return 'CHARINDEX(' . $substr . ', ' . $str . ')';\n        }\n\n        return 'CHARINDEX(' . $substr . ', ' . $str . ', ' . $startPos . ')';\n    }\n\n    /**\n     * {@inheritDoc}\n     */\n    public function getModExpression($expression1, $expression2)\n    {\n        return $expression1 . ' % ' . $expression2;\n    }\n\n    /**\n     * {@inheritDoc}\n     */\n    public function getTrimExpression($str, $mode = TrimMode::UNSPECIFIED, $char = false)\n    {\n        if (! $char) {\n            switch ($mode) {\n                case TrimMode::LEADING:\n                    $trimFn = 'LTRIM';\n                    break;\n\n                case TrimMode::TRAILING:\n                    $trimFn = 'RTRIM';\n                    break;\n\n                default:\n                    return 'LTRIM(RTRIM(' . $str . '))';\n            }\n\n            return $trimFn . '(' . $str . ')';\n        }\n\n        $pattern = \"'%[^' + \" . $char . \" + ']%'\";\n\n        if ($mode === TrimMode::LEADING) {\n            return 'stuff(' . $str . ', 1, patindex(' . $pattern . ', ' . $str . ') - 1, null)';\n        }\n\n        if ($mode === TrimMode::TRAILING) {\n            return 'reverse(stuff(reverse(' . $str . '), 1, '\n                . 'patindex(' . $pattern . ', reverse(' . $str . ')) - 1, null))';\n        }\n\n        return 'reverse(stuff(reverse(stuff(' . $str . ', 1, patindex(' . $pattern . ', ' . $str . ') - 1, null)), 1, '\n            . 'patindex(' . $pattern . ', reverse(stuff(' . $str . ', 1, patindex(' . $pattern . ', ' . $str\n            . ') - 1, null))) - 1, null))';\n    }\n\n    /**\n     * {@inheritDoc}\n     */\n    public function getConcatExpression()\n    {\n        $args = func_get_args();\n\n        return '(' . implode(' + ', $args) . ')';\n    }\n\n    /**\n     * {@inheritDoc}\n     */\n    public function getListDatabasesSQL()\n    {\n        return 'SELECT * FROM sys.databases';\n    }\n\n    /**\n     * {@inheritDoc}\n     */\n    public function getListNamespacesSQL()\n    {\n        return \"SELECT name FROM sys.schemas WHERE name NOT IN('guest', 'INFORMATION_SCHEMA', 'sys')\";\n    }\n\n    /**\n     * {@inheritDoc}\n     */\n    public function getSubstringExpression($string, $start, $length = null)\n    {\n        if ($length !== null) {\n            return 'SUBSTRING(' . $string . ', ' . $start . ', ' . $length . ')';\n        }\n\n        return 'SUBSTRING(' . $string . ', ' . $start . ', LEN(' . $string . ') - ' . $start . ' + 1)';\n    }\n\n    /**\n     * {@inheritDoc}\n     */\n    public function getLengthExpression($column)\n    {\n        return 'LEN(' . $column . ')';\n    }\n\n    /**\n     * {@inheritDoc}\n     */\n    public function getSetTransactionIsolationSQL($level)\n    {\n        return 'SET TRANSACTION ISOLATION LEVEL ' . $this->_getTransactionIsolationLevelSQL($level);\n    }\n\n    /**\n     * {@inheritDoc}\n     */\n    public function getIntegerTypeDeclarationSQL(array $column)\n    {\n        return 'INT' . $this->_getCommonIntegerTypeDeclarationSQL($column);\n    }\n\n    /**\n     * {@inheritDoc}\n     */\n    public function getBigIntTypeDeclarationSQL(array $column)\n    {\n        return 'BIGINT' . $this->_getCommonIntegerTypeDeclarationSQL($column);\n    }\n\n    /**\n     * {@inheritDoc}\n     */\n    public function getSmallIntTypeDeclarationSQL(array $column)\n    {\n        return 'SMALLINT' . $this->_getCommonIntegerTypeDeclarationSQL($column);\n    }\n\n    /**\n     * {@inheritDoc}\n     */\n    public function getGuidTypeDeclarationSQL(array $column)\n    {\n        return 'UNIQUEIDENTIFIER';\n    }\n\n    /**\n     * {@inheritDoc}\n     */\n    public function getAsciiStringTypeDeclarationSQL(array $column): string\n    {\n        $length = $column['length'] ?? null;\n\n        if (! isset($column['fixed'])) {\n            return sprintf('VARCHAR(%d)', $length ?? 255);\n        }\n\n        return sprintf('CHAR(%d)', $length ?? 255);\n    }\n\n    /**\n     * {@inheritDoc}\n     */\n    protected function getVarcharTypeDeclarationSQLSnippet($length, $fixed)\n    {\n        return $fixed\n            ? ($length ? 'NCHAR(' . $length . ')' : 'CHAR(255)')\n            : ($length ? 'NVARCHAR(' . $length . ')' : 'NVARCHAR(255)');\n    }\n\n    /**\n     * {@inheritdoc}\n     */\n    protected function getBinaryTypeDeclarationSQLSnippet($length, $fixed)\n    {\n        return $fixed ? 'BINARY(' . ($length ?: 255) . ')' : 'VARBINARY(' . ($length ?: 255) . ')';\n    }\n\n    /**\n     * {@inheritdoc}\n     */\n    public function getBinaryMaxLength()\n    {\n        return 8000;\n    }\n\n    /**\n     * {@inheritDoc}\n     */\n    public function getClobTypeDeclarationSQL(array $column)\n    {\n        return 'VARCHAR(MAX)';\n    }\n\n    /**\n     * {@inheritDoc}\n     */\n    protected function _getCommonIntegerTypeDeclarationSQL(array $column)\n    {\n        return ! empty($column['autoincrement']) ? ' IDENTITY' : '';\n    }\n\n    /**\n     * {@inheritDoc}\n     */\n    public function getDateTimeTypeDeclarationSQL(array $column)\n    {\n        return 'DATETIME';\n    }\n\n    /**\n     * {@inheritDoc}\n     */\n    public function getDateTypeDeclarationSQL(array $column)\n    {\n        return 'DATETIME';\n    }\n\n    /**\n     * {@inheritDoc}\n     */\n    public function getTimeTypeDeclarationSQL(array $column)\n    {\n        return 'DATETIME';\n    }\n\n    /**\n     * {@inheritDoc}\n     */\n    public function getBooleanTypeDeclarationSQL(array $column)\n    {\n        return 'BIT';\n    }\n\n    /**\n     * {@inheritDoc}\n     */\n    protected function doModifyLimitQuery($query, $limit, $offset = null)\n    {\n        $where = [];\n\n        if ($offset > 0) {\n            $where[] = sprintf('doctrine_rownum >= %d', $offset + 1);\n        }\n\n        if ($limit !== null) {\n            $where[] = sprintf('doctrine_rownum <= %d', $offset + $limit);\n            $top     = sprintf('TOP %d', $offset + $limit);\n        } else {\n            $top = 'TOP 9223372036854775807';\n        }\n\n        if (empty($where)) {\n            return $query;\n        }\n\n        // We'll find a SELECT or SELECT distinct and prepend TOP n to it\n        // Even if the TOP n is very large, the use of a CTE will\n        // allow the SQL Server query planner to optimize it so it doesn't\n        // actually scan the entire range covered by the TOP clause.\n        if (! preg_match('/^(\\s*SELECT\\s+(?:DISTINCT\\s+)?)(.*)$/is', $query, $matches)) {\n            return $query;\n        }\n\n        $query = $matches[1] . $top . ' ' . $matches[2];\n\n        if (stristr($query, 'ORDER BY')) {\n            // Inner order by is not valid in SQL Server for our purposes\n            // unless it's in a TOP N subquery.\n            $query = $this->scrubInnerOrderBy($query);\n        }\n\n        // Build a new limited query around the original, using a CTE\n        return sprintf(\n            'WITH dctrn_cte AS (%s) '\n            . 'SELECT * FROM ('\n            . 'SELECT *, ROW_NUMBER() OVER (ORDER BY (SELECT 0)) AS doctrine_rownum FROM dctrn_cte'\n            . ') AS doctrine_tbl '\n            . 'WHERE %s ORDER BY doctrine_rownum ASC',\n            $query,\n            implode(' AND ', $where)\n        );\n    }\n\n    /**\n     * Remove ORDER BY clauses in subqueries - they're not supported by SQL Server.\n     * Caveat: will leave ORDER BY in TOP N subqueries.\n     *\n     * @param string $query\n     *\n     * @return string\n     */\n    private function scrubInnerOrderBy($query)\n    {\n        $count  = substr_count(strtoupper($query), 'ORDER BY');\n        $offset = 0;\n\n        while ($count-- > 0) {\n            $orderByPos = stripos($query, ' ORDER BY', $offset);\n            if ($orderByPos === false) {\n                break;\n            }\n\n            $qLen            = strlen($query);\n            $parenCount      = 0;\n            $currentPosition = $orderByPos;\n\n            while ($parenCount >= 0 && $currentPosition < $qLen) {\n                if ($query[$currentPosition] === '(') {\n                    $parenCount++;\n                } elseif ($query[$currentPosition] === ')') {\n                    $parenCount--;\n                }\n\n                $currentPosition++;\n            }\n\n            if ($this->isOrderByInTopNSubquery($query, $orderByPos)) {\n                // If the order by clause is in a TOP N subquery, do not remove\n                // it and continue iteration from the current position.\n                $offset = $currentPosition;\n                continue;\n            }\n\n            if ($currentPosition >= $qLen - 1) {\n                continue;\n            }\n\n            $query  = substr($query, 0, $orderByPos) . substr($query, $currentPosition - 1);\n            $offset = $orderByPos;\n        }\n\n        return $query;\n    }\n\n    /**\n     * Check an ORDER BY clause to see if it is in a TOP N query or subquery.\n     *\n     * @param string $query           The query\n     * @param int    $currentPosition Start position of ORDER BY clause\n     *\n     * @return bool true if ORDER BY is in a TOP N query, false otherwise\n     */\n    private function isOrderByInTopNSubquery($query, $currentPosition)\n    {\n        // Grab query text on the same nesting level as the ORDER BY clause we're examining.\n        $subQueryBuffer = '';\n        $parenCount     = 0;\n\n        // If $parenCount goes negative, we've exited the subquery we're examining.\n        // If $currentPosition goes negative, we've reached the beginning of the query.\n        while ($parenCount >= 0 && $currentPosition >= 0) {\n            if ($query[$currentPosition] === '(') {\n                $parenCount--;\n            } elseif ($query[$currentPosition] === ')') {\n                $parenCount++;\n            }\n\n            // Only yank query text on the same nesting level as the ORDER BY clause.\n            $subQueryBuffer = ($parenCount === 0 ? $query[$currentPosition] : ' ') . $subQueryBuffer;\n\n            $currentPosition--;\n        }\n\n        return (bool) preg_match('/SELECT\\s+(DISTINCT\\s+)?TOP\\s/i', $subQueryBuffer);\n    }\n\n    /**\n     * {@inheritDoc}\n     */\n    public function supportsLimitOffset()\n    {\n        return false;\n    }\n\n    /**\n     * {@inheritDoc}\n     */\n    public function convertBooleans($item)\n    {\n        if (is_array($item)) {\n            foreach ($item as $key => $value) {\n                if (! is_bool($value) && ! is_numeric($value)) {\n                    continue;\n                }\n\n                $item[$key] = $value ? 1 : 0;\n            }\n        } elseif (is_bool($item) || is_numeric($item)) {\n            $item = $item ? 1 : 0;\n        }\n\n        return $item;\n    }\n\n    /**\n     * {@inheritDoc}\n     */\n    public function getCreateTemporaryTableSnippetSQL()\n    {\n        return 'CREATE TABLE';\n    }\n\n    /**\n     * {@inheritDoc}\n     */\n    public function getTemporaryTableName($tableName)\n    {\n        return '#' . $tableName;\n    }\n\n    /**\n     * {@inheritDoc}\n     */\n    public function getDateTimeFormatString()\n    {\n        return 'Y-m-d H:i:s.000';\n    }\n\n    /**\n     * {@inheritDoc}\n     */\n    public function getDateFormatString()\n    {\n        return 'Y-m-d H:i:s.000';\n    }\n\n    /**\n     * {@inheritDoc}\n     */\n    public function getTimeFormatString()\n    {\n        return 'Y-m-d H:i:s.000';\n    }\n\n    /**\n     * {@inheritDoc}\n     */\n    public function getDateTimeTzFormatString()\n    {\n        return $this->getDateTimeFormatString();\n    }\n\n    /**\n     * {@inheritDoc}\n     */\n    public function getName()\n    {\n        return 'mssql';\n    }\n\n    /**\n     * {@inheritDoc}\n     */\n    protected function initializeDoctrineTypeMappings()\n    {\n        $this->doctrineTypeMapping = [\n            'bigint' => 'bigint',\n            'numeric' => 'decimal',\n            'bit' => 'boolean',\n            'smallint' => 'smallint',\n            'decimal' => 'decimal',\n            'smallmoney' => 'integer',\n            'int' => 'integer',\n            'tinyint' => 'smallint',\n            'money' => 'integer',\n            'float' => 'float',\n            'real' => 'float',\n            'double' => 'float',\n            'double precision' => 'float',\n            'smalldatetime' => 'datetime',\n            'datetime' => 'datetime',\n            'char' => 'string',\n            'varchar' => 'string',\n            'text' => 'text',\n            'nchar' => 'string',\n            'nvarchar' => 'string',\n            'ntext' => 'text',\n            'binary' => 'binary',\n            'varbinary' => 'binary',\n            'image' => 'blob',\n            'uniqueidentifier' => 'guid',\n        ];\n    }\n\n    /**\n     * {@inheritDoc}\n     */\n    public function createSavePoint($savepoint)\n    {\n        return 'SAVE TRANSACTION ' . $savepoint;\n    }\n\n    /**\n     * {@inheritDoc}\n     */\n    public function releaseSavePoint($savepoint)\n    {\n        return '';\n    }\n\n    /**\n     * {@inheritDoc}\n     */\n    public function rollbackSavePoint($savepoint)\n    {\n        return 'ROLLBACK TRANSACTION ' . $savepoint;\n    }\n\n    /**\n     * {@inheritdoc}\n     */\n    public function getForeignKeyReferentialActionSQL($action)\n    {\n        // RESTRICT is not supported, therefore falling back to NO ACTION.\n        if (strtoupper($action) === 'RESTRICT') {\n            return 'NO ACTION';\n        }\n\n        return parent::getForeignKeyReferentialActionSQL($action);\n    }\n\n    /**\n     * {@inheritDoc}\n     */\n    public function appendLockHint($fromClause, $lockMode)\n    {\n        switch (true) {\n            case $lockMode === LockMode::NONE:\n                return $fromClause . ' WITH (NOLOCK)';\n\n            case $lockMode === LockMode::PESSIMISTIC_READ:\n                return $fromClause . ' WITH (HOLDLOCK, ROWLOCK)';\n\n            case $lockMode === LockMode::PESSIMISTIC_WRITE:\n                return $fromClause . ' WITH (UPDLOCK, ROWLOCK)';\n\n            default:\n                return $fromClause;\n        }\n    }\n\n    /**\n     * {@inheritDoc}\n     */\n    public function getForUpdateSQL()\n    {\n        return ' ';\n    }\n\n    /**\n     * {@inheritDoc}\n     */\n    protected function getReservedKeywordsClass()\n    {\n        return Keywords\\SQLServerKeywords::class;\n    }\n\n    /**\n     * {@inheritDoc}\n     */\n    public function quoteSingleIdentifier($str)\n    {\n        return '[' . str_replace(']', '][', $str) . ']';\n    }\n\n    /**\n     * {@inheritDoc}\n     */\n    public function getTruncateTableSQL($tableName, $cascade = false)\n    {\n        $tableIdentifier = new Identifier($tableName);\n\n        return 'TRUNCATE TABLE ' . $tableIdentifier->getQuotedName($this);\n    }\n\n    /**\n     * {@inheritDoc}\n     */\n    public function getBlobTypeDeclarationSQL(array $column)\n    {\n        return 'VARBINARY(MAX)';\n    }\n\n    /**\n     * {@inheritdoc}\n     *\n     * Modifies column declaration order as it differs in Microsoft SQL Server.\n     */\n    public function getColumnDeclarationSQL($name, array $column)\n    {\n        if (isset($column['columnDefinition'])) {\n            $columnDef = $this->getCustomTypeDeclarationSQL($column);\n        } else {\n            $collation = isset($column['collation']) && $column['collation'] ?\n                ' ' . $this->getColumnCollationDeclarationSQL($column['collation']) : '';\n\n            $notnull = isset($column['notnull']) && $column['notnull'] ? ' NOT NULL' : '';\n\n            $unique = isset($column['unique']) && $column['unique'] ?\n                ' ' . $this->getUniqueFieldDeclarationSQL() : '';\n\n            $check = isset($column['check']) && $column['check'] ?\n                ' ' . $column['check'] : '';\n\n            $typeDecl  = $column['type']->getSQLDeclaration($column, $this);\n            $columnDef = $typeDecl . $collation . $notnull . $unique . $check;\n        }\n\n        return $name . ' ' . $columnDef;\n    }\n\n    /**\n     * Returns a unique default constraint name for a table and column.\n     *\n     * @param string $table  Name of the table to generate the unique default constraint name for.\n     * @param string $column Name of the column in the table to generate the unique default constraint name for.\n     *\n     * @return string\n     */\n    private function generateDefaultConstraintName($table, $column)\n    {\n        return 'DF_' . $this->generateIdentifierName($table) . '_' . $this->generateIdentifierName($column);\n    }\n\n    /**\n     * Returns a hash value for a given identifier.\n     *\n     * @param string $identifier Identifier to generate a hash value for.\n     *\n     * @return string\n     */\n    private function generateIdentifierName($identifier)\n    {\n        // Always generate name for unquoted identifiers to ensure consistency.\n        $identifier = new Identifier($identifier);\n\n        return strtoupper(dechex(crc32($identifier->getName())));\n    }\n\n    protected function getCommentOnTableSQL(string $tableName, ?string $comment): string\n    {\n        return sprintf(\n            <<<'SQL'\nEXEC sys.sp_addextendedproperty @name=N'MS_Description',\n  @value=N%s, @level0type=N'SCHEMA', @level0name=N'dbo',\n  @level1type=N'TABLE', @level1name=N%s\nSQL\n            ,\n            $this->quoteStringLiteral((string) $comment),\n            $this->quoteStringLiteral($tableName)\n        );\n    }\n\n    public function getListTableMetadataSQL(string $table): string\n    {\n        return sprintf(\n            <<<'SQL'\nSELECT\n  p.value AS [table_comment]\nFROM\n  sys.tables AS tbl\n  INNER JOIN sys.extended_properties AS p ON p.major_id=tbl.object_id AND p.minor_id=0 AND p.class=1\nWHERE\n  (tbl.name=N%s and SCHEMA_NAME(tbl.schema_id)=N'dbo' and p.name=N'MS_Description')\nSQL\n            ,\n            $this->quoteStringLiteral($table)\n        );\n    }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- vendor/doctrine/dbal/lib/Doctrine/DBAL/Platforms/SQLServerPlatform.php	(revision a449d8a584af7c2722ad0d48f553c0917ddead6e)
+++ vendor/doctrine/dbal/lib/Doctrine/DBAL/Platforms/SQLServerPlatform.php	(date 1605385618000)
@@ -1574,7 +1574,7 @@
     {
         switch (true) {
             case $lockMode === LockMode::NONE:
-                return $fromClause . ' WITH (NOLOCK)';
+                return $fromClause;
 
             case $lockMode === LockMode::PESSIMISTIC_READ:
                 return $fromClause . ' WITH (HOLDLOCK, ROWLOCK)';
Index: vendor/laminas/laminas-code/src/Scanner/ParameterScanner.php
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?php\n\n/**\n * @see       https://github.com/laminas/laminas-code for the canonical source repository\n * @copyright https://github.com/laminas/laminas-code/blob/master/COPYRIGHT.md\n * @license   https://github.com/laminas/laminas-code/blob/master/LICENSE.md New BSD License\n */\n\nnamespace Laminas\\Code\\Scanner;\n\nuse Laminas\\Code\\NameInformation;\n\nuse function current;\nuse function is_string;\nuse function ltrim;\nuse function next;\nuse function reset;\nuse function trim;\n\nclass ParameterScanner\n{\n    /**\n     * @var bool\n     */\n    protected $isScanned = false;\n\n    /**\n     * @var null|ClassScanner\n     */\n    protected $declaringScannerClass;\n\n    /**\n     * @var null|string\n     */\n    protected $declaringClass;\n\n    /**\n     * @var null|MethodScanner\n     */\n    protected $declaringScannerFunction;\n\n    /**\n     * @var null|string\n     */\n    protected $declaringFunction;\n\n    /**\n     * @var null|string\n     */\n    protected $defaultValue;\n\n    /**\n     * @var null|string\n     */\n    protected $class;\n\n    /**\n     * @var null|string\n     */\n    protected $name;\n\n    /**\n     * @var null|int\n     */\n    protected $position;\n\n    /**\n     * @var bool\n     */\n    protected $isArray = false;\n\n    /**\n     * @var bool\n     */\n    protected $isDefaultValueAvailable = false;\n\n    /**\n     * @var bool\n     */\n    protected $isOptional = false;\n\n    /**\n     * @var bool\n     */\n    protected $isPassedByReference = false;\n\n    /**\n     * @var array|null\n     */\n    protected $tokens;\n\n    /**\n     * @var null|NameInformation\n     */\n    protected $nameInformation;\n\n    /**\n     * @param  array $parameterTokens\n     * @param  NameInformation $nameInformation\n     */\n    public function __construct(array $parameterTokens, NameInformation $nameInformation = null)\n    {\n        $this->tokens          = $parameterTokens;\n        $this->nameInformation = $nameInformation;\n    }\n\n    /**\n     * Set declaring class\n     *\n     * @param  string $class\n     * @return void\n     */\n    public function setDeclaringClass($class)\n    {\n        $this->declaringClass = (string) $class;\n    }\n\n    /**\n     * Set declaring scanner class\n     *\n     * @param  ClassScanner $scannerClass\n     * @return void\n     */\n    public function setDeclaringScannerClass(ClassScanner $scannerClass)\n    {\n        $this->declaringScannerClass = $scannerClass;\n    }\n\n    /**\n     * Set declaring function\n     *\n     * @param  string $function\n     * @return void\n     */\n    public function setDeclaringFunction($function)\n    {\n        $this->declaringFunction = $function;\n    }\n\n    /**\n     * Set declaring scanner function\n     *\n     * @param  MethodScanner $scannerFunction\n     * @return void\n     */\n    public function setDeclaringScannerFunction(MethodScanner $scannerFunction)\n    {\n        $this->declaringScannerFunction = $scannerFunction;\n    }\n\n    /**\n     * Set position\n     *\n     * @param  int $position\n     * @return void\n     */\n    public function setPosition($position)\n    {\n        $this->position = $position;\n    }\n\n    /**\n     * Scan\n     *\n     * @return void\n     */\n    protected function scan()\n    {\n        if ($this->isScanned) {\n            return;\n        }\n\n        $tokens = &$this->tokens;\n\n        reset($tokens);\n\n        SCANNER_TOP:\n\n        $token = current($tokens);\n\n        if (is_string($token)) {\n            // check pass by ref\n            if ($token === '&') {\n                $this->isPassedByReference = true;\n                goto SCANNER_CONTINUE;\n            }\n            if ($token === '=') {\n                $this->isOptional              = true;\n                $this->isDefaultValueAvailable = true;\n                goto SCANNER_CONTINUE;\n            }\n        } else {\n            if ($this->name === null && ($token[0] === T_STRING || $token[0] === T_NS_SEPARATOR)) {\n                $this->class .= $token[1];\n                goto SCANNER_CONTINUE;\n            }\n            if ($token[0] === T_VARIABLE) {\n                $this->name = ltrim($token[1], '$');\n                goto SCANNER_CONTINUE;\n            }\n        }\n\n        if ($this->name !== null) {\n            $this->defaultValue .= trim(is_string($token) ? $token : $token[1]);\n        }\n\n        SCANNER_CONTINUE:\n\n        if (next($this->tokens) === false) {\n            goto SCANNER_END;\n        }\n        goto SCANNER_TOP;\n\n        SCANNER_END:\n\n        if ($this->class && $this->nameInformation) {\n            $this->class = $this->nameInformation->resolveName($this->class);\n        }\n\n        $this->isScanned = true;\n    }\n\n    /**\n     * Get declaring scanner class\n     *\n     * @return ClassScanner\n     */\n    public function getDeclaringScannerClass()\n    {\n        return $this->declaringScannerClass;\n    }\n\n    /**\n     * Get declaring class\n     *\n     * @return string\n     */\n    public function getDeclaringClass()\n    {\n        return $this->declaringClass;\n    }\n\n    /**\n     * Get declaring scanner function\n     *\n     * @return MethodScanner\n     */\n    public function getDeclaringScannerFunction()\n    {\n        return $this->declaringScannerFunction;\n    }\n\n    /**\n     * Get declaring function\n     *\n     * @return string\n     */\n    public function getDeclaringFunction()\n    {\n        return $this->declaringFunction;\n    }\n\n    /**\n     * Get default value\n     *\n     * @return string\n     */\n    public function getDefaultValue()\n    {\n        $this->scan();\n\n        return $this->defaultValue;\n    }\n\n    /**\n     * Get class\n     *\n     * @return string\n     */\n    public function getClass()\n    {\n        $this->scan();\n\n        return $this->class;\n    }\n\n    /**\n     * Get name\n     *\n     * @return string\n     */\n    public function getName()\n    {\n        $this->scan();\n\n        return $this->name;\n    }\n\n    /**\n     * Get position\n     *\n     * @return int\n     */\n    public function getPosition()\n    {\n        $this->scan();\n\n        return $this->position;\n    }\n\n    /**\n     * Check if is array\n     *\n     * @return bool\n     */\n    public function isArray()\n    {\n        $this->scan();\n\n        return $this->isArray;\n    }\n\n    /**\n     * Check if default value is available\n     *\n     * @return bool\n     */\n    public function isDefaultValueAvailable()\n    {\n        $this->scan();\n\n        return $this->isDefaultValueAvailable;\n    }\n\n    /**\n     * Check if is optional\n     *\n     * @return bool\n     */\n    public function isOptional()\n    {\n        $this->scan();\n\n        return $this->isOptional;\n    }\n\n    /**\n     * Check if is passed by reference\n     *\n     * @return bool\n     */\n    public function isPassedByReference()\n    {\n        $this->scan();\n\n        return $this->isPassedByReference;\n    }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- vendor/laminas/laminas-code/src/Scanner/ParameterScanner.php	(revision a449d8a584af7c2722ad0d48f553c0917ddead6e)
+++ vendor/laminas/laminas-code/src/Scanner/ParameterScanner.php	(date 1605132687000)
@@ -190,7 +190,14 @@
                 goto SCANNER_CONTINUE;
             }
         } else {
-            if ($this->name === null && ($token[0] === T_STRING || $token[0] === T_NS_SEPARATOR)) {
+            if ($this->name === null
+                && (
+                    $token[0] === T_STRING
+                    || $token[0] === T_NS_SEPARATOR
+                    || $token[0] === T_NAME_QUALIFIED
+                    || $token[0] === T_NAME_FULLY_QUALIFIED
+                )
+            ) {
                 $this->class .= $token[1];
                 goto SCANNER_CONTINUE;
             }
Index: vendor/laminas/laminas-code/src/Generator/ClassGenerator.php
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?php\n\n/**\n * @see       https://github.com/laminas/laminas-code for the canonical source repository\n * @copyright https://github.com/laminas/laminas-code/blob/master/COPYRIGHT.md\n * @license   https://github.com/laminas/laminas-code/blob/master/LICENSE.md New BSD License\n */\n\nnamespace Laminas\\Code\\Generator;\n\nuse Laminas\\Code\\Reflection\\ClassReflection;\n\nuse function array_diff;\nuse function array_map;\nuse function array_pop;\nuse function array_search;\nuse function array_values;\nuse function array_walk;\nuse function explode;\nuse function get_class;\nuse function gettype;\nuse function implode;\nuse function in_array;\nuse function is_array;\nuse function is_scalar;\nuse function is_string;\nuse function ltrim;\nuse function sprintf;\nuse function str_replace;\nuse function strpos;\nuse function strrpos;\nuse function strstr;\nuse function strtolower;\nuse function substr;\n\nclass ClassGenerator extends AbstractGenerator implements TraitUsageInterface\n{\n    const OBJECT_TYPE = 'class';\n    const IMPLEMENTS_KEYWORD = 'implements';\n\n    const FLAG_ABSTRACT = 0x01;\n    const FLAG_FINAL    = 0x02;\n\n    /**\n     * @var FileGenerator\n     */\n    protected $containingFileGenerator;\n\n    /**\n     * @var string\n     */\n    protected $namespaceName;\n\n    /**\n     * @var DocBlockGenerator\n     */\n    protected $docBlock;\n\n    /**\n     * @var string\n     */\n    protected $name;\n\n    /**\n     * @var bool\n     */\n    protected $flags = 0x00;\n\n    /**\n     * @var string\n     */\n    protected $extendedClass;\n\n    /**\n     * @var array Array of string names\n     */\n    protected $implementedInterfaces = [];\n\n    /**\n     * @var PropertyGenerator[] Array of properties\n     */\n    protected $properties = [];\n\n    /**\n     * @var PropertyGenerator[] Array of constants\n     */\n    protected $constants = [];\n\n    /**\n     * @var MethodGenerator[] Array of methods\n     */\n    protected $methods = [];\n\n    /**\n     * @var TraitUsageGenerator Object to encapsulate trait usage logic\n     */\n    protected $traitUsageGenerator;\n\n    /**\n     * Build a Code Generation Php Object from a Class Reflection\n     *\n     * @param  ClassReflection $classReflection\n     * @return self\n     */\n    public static function fromReflection(ClassReflection $classReflection)\n    {\n        $cg = new static($classReflection->getName());\n\n        $cg->setSourceContent($cg->getSourceContent());\n        $cg->setSourceDirty(false);\n\n        if ($classReflection->getDocComment() != '') {\n            $cg->setDocBlock(DocBlockGenerator::fromReflection($classReflection->getDocBlock()));\n        }\n\n        $cg->setAbstract($classReflection->isAbstract());\n\n        // set the namespace\n        if ($classReflection->inNamespace()) {\n            $cg->setNamespaceName($classReflection->getNamespaceName());\n        }\n\n        /* @var \\Laminas\\Code\\Reflection\\ClassReflection $parentClass */\n        $parentClass = $classReflection->getParentClass();\n        $interfaces  = $classReflection->getInterfaces();\n\n        if ($parentClass) {\n            $cg->setExtendedClass($parentClass->getName());\n\n            $interfaces = array_diff($interfaces, $parentClass->getInterfaces());\n        }\n\n        $interfaceNames = [];\n        foreach ($interfaces as $interface) {\n            /* @var \\Laminas\\Code\\Reflection\\ClassReflection $interface */\n            $interfaceNames[] = $interface->getName();\n        }\n\n        $cg->setImplementedInterfaces($interfaceNames);\n\n        $properties = [];\n\n        foreach ($classReflection->getProperties() as $reflectionProperty) {\n            if ($reflectionProperty->getDeclaringClass()->getName() == $classReflection->getName()) {\n                $properties[] = PropertyGenerator::fromReflection($reflectionProperty);\n            }\n        }\n\n        $cg->addProperties($properties);\n\n        $constants = [];\n\n        foreach ($classReflection->getConstants() as $name => $value) {\n            $constants[] = [\n                'name' => $name,\n                'value' => $value,\n            ];\n        }\n\n        $cg->addConstants($constants);\n\n        $methods = [];\n\n        foreach ($classReflection->getMethods() as $reflectionMethod) {\n            $className = $cg->getNamespaceName() ? $cg->getNamespaceName() . '\\\\' . $cg->getName() : $cg->getName();\n\n            if ($reflectionMethod->getDeclaringClass()->getName() == $className) {\n                $methods[] = MethodGenerator::fromReflection($reflectionMethod);\n            }\n        }\n\n        $cg->addMethods($methods);\n\n        return $cg;\n    }\n\n    /**\n     * Generate from array\n     *\n     * @configkey name           string        [required] Class Name\n     * @configkey filegenerator  FileGenerator File generator that holds this class\n     * @configkey namespacename  string        The namespace for this class\n     * @configkey docblock       string        The docblock information\n     * @configkey flags          int           Flags, one of ClassGenerator::FLAG_ABSTRACT ClassGenerator::FLAG_FINAL\n     * @configkey extendedclass  string        Class which this class is extending\n     * @configkey implementedinterfaces\n     * @configkey properties\n     * @configkey methods\n     *\n     * @throws Exception\\InvalidArgumentException\n     * @param  array $array\n     * @return self\n     */\n    public static function fromArray(array $array)\n    {\n        if (! isset($array['name'])) {\n            throw new Exception\\InvalidArgumentException(\n                'Class generator requires that a name is provided for this object'\n            );\n        }\n\n        $cg = new static($array['name']);\n        foreach ($array as $name => $value) {\n            // normalize key\n            switch (strtolower(str_replace(['.', '-', '_'], '', $name))) {\n                case 'containingfile':\n                    $cg->setContainingFileGenerator($value);\n                    break;\n                case 'namespacename':\n                    $cg->setNamespaceName($value);\n                    break;\n                case 'docblock':\n                    $docBlock = $value instanceof DocBlockGenerator ? $value : DocBlockGenerator::fromArray($value);\n                    $cg->setDocBlock($docBlock);\n                    break;\n                case 'flags':\n                    $cg->setFlags($value);\n                    break;\n                case 'extendedclass':\n                    $cg->setExtendedClass($value);\n                    break;\n                case 'implementedinterfaces':\n                    $cg->setImplementedInterfaces($value);\n                    break;\n                case 'properties':\n                    $cg->addProperties($value);\n                    break;\n                case 'methods':\n                    $cg->addMethods($value);\n                    break;\n            }\n        }\n\n        return $cg;\n    }\n\n    /**\n     * @param  string $name\n     * @param  string $namespaceName\n     * @param  array|string $flags\n     * @param  string $extends\n     * @param  array $interfaces\n     * @param  array $properties\n     * @param  array $methods\n     * @param  DocBlockGenerator $docBlock\n     */\n    public function __construct(\n        $name = null,\n        $namespaceName = null,\n        $flags = null,\n        $extends = null,\n        $interfaces = [],\n        $properties = [],\n        $methods = [],\n        $docBlock = null\n    ) {\n        $this->traitUsageGenerator = new TraitUsageGenerator($this);\n\n        if ($name !== null) {\n            $this->setName($name);\n        }\n        if ($namespaceName !== null) {\n            $this->setNamespaceName($namespaceName);\n        }\n        if ($flags !== null) {\n            $this->setFlags($flags);\n        }\n        if ($properties !== []) {\n            $this->addProperties($properties);\n        }\n        if ($extends !== null) {\n            $this->setExtendedClass($extends);\n        }\n        if (is_array($interfaces)) {\n            $this->setImplementedInterfaces($interfaces);\n        }\n        if ($methods !== []) {\n            $this->addMethods($methods);\n        }\n        if ($docBlock !== null) {\n            $this->setDocBlock($docBlock);\n        }\n    }\n\n    /**\n     * @param  string $name\n     * @return self\n     */\n    public function setName($name)\n    {\n        if (false !== strpos($name, '\\\\')) {\n            $namespace = substr($name, 0, strrpos($name, '\\\\'));\n            $name      = substr($name, strrpos($name, '\\\\') + 1);\n            $this->setNamespaceName($namespace);\n        }\n\n        $this->name = $name;\n        return $this;\n    }\n\n    /**\n     * @return string\n     */\n    public function getName()\n    {\n        return $this->name;\n    }\n\n    /**\n     * @param  string $namespaceName\n     * @return self\n     */\n    public function setNamespaceName($namespaceName)\n    {\n        $this->namespaceName = $namespaceName;\n        return $this;\n    }\n\n    /**\n     * @return string\n     */\n    public function getNamespaceName()\n    {\n        return $this->namespaceName;\n    }\n\n    /**\n     * @param  FileGenerator $fileGenerator\n     * @return self\n     */\n    public function setContainingFileGenerator(FileGenerator $fileGenerator)\n    {\n        $this->containingFileGenerator = $fileGenerator;\n        return $this;\n    }\n\n    /**\n     * @return FileGenerator\n     */\n    public function getContainingFileGenerator()\n    {\n        return $this->containingFileGenerator;\n    }\n\n    /**\n     * @param  DocBlockGenerator $docBlock\n     * @return self\n     */\n    public function setDocBlock(DocBlockGenerator $docBlock)\n    {\n        $this->docBlock = $docBlock;\n        return $this;\n    }\n\n    /**\n     * @return DocBlockGenerator\n     */\n    public function getDocBlock()\n    {\n        return $this->docBlock;\n    }\n\n    /**\n     * @param  array|string $flags\n     * @return self\n     */\n    public function setFlags($flags)\n    {\n        if (is_array($flags)) {\n            $flagsArray = $flags;\n            $flags      = 0x00;\n            foreach ($flagsArray as $flag) {\n                $flags |= $flag;\n            }\n        }\n        // check that visibility is one of three\n        $this->flags = $flags;\n\n        return $this;\n    }\n\n    /**\n     * @param  string $flag\n     * @return self\n     */\n    public function addFlag($flag)\n    {\n        $this->setFlags($this->flags | $flag);\n        return $this;\n    }\n\n    /**\n     * @param  string $flag\n     * @return self\n     */\n    public function removeFlag($flag)\n    {\n        $this->setFlags($this->flags & ~$flag);\n        return $this;\n    }\n\n    /**\n     * @param  bool $isAbstract\n     * @return self\n     */\n    public function setAbstract($isAbstract)\n    {\n        return $isAbstract ? $this->addFlag(self::FLAG_ABSTRACT) : $this->removeFlag(self::FLAG_ABSTRACT);\n    }\n\n    /**\n     * @return bool\n     */\n    public function isAbstract()\n    {\n        return (bool) ($this->flags & self::FLAG_ABSTRACT);\n    }\n\n    /**\n     * @param  bool $isFinal\n     * @return self\n     */\n    public function setFinal($isFinal)\n    {\n        return $isFinal ? $this->addFlag(self::FLAG_FINAL) : $this->removeFlag(self::FLAG_FINAL);\n    }\n\n    /**\n     * @return bool\n     */\n    public function isFinal()\n    {\n        return $this->flags & self::FLAG_FINAL;\n    }\n\n    /**\n     * @param  string $extendedClass\n     * @return self\n     */\n    public function setExtendedClass($extendedClass)\n    {\n        $this->extendedClass = $extendedClass;\n        return $this;\n    }\n\n    /**\n     * @return string\n     */\n    public function getExtendedClass()\n    {\n        return $this->extendedClass;\n    }\n\n    /**\n     * @return bool\n     */\n    public function hasExtentedClass()\n    {\n        return ! empty($this->extendedClass);\n    }\n\n    /**\n     * @return self\n     */\n    public function removeExtentedClass()\n    {\n        $this->setExtendedClass(null);\n        return $this;\n    }\n\n    /**\n     * @param  array $implementedInterfaces\n     * @return self\n     */\n    public function setImplementedInterfaces(array $implementedInterfaces)\n    {\n        array_map(function ($implementedInterface) {\n            return (string) TypeGenerator::fromTypeString($implementedInterface);\n        }, $implementedInterfaces);\n\n        $this->implementedInterfaces = $implementedInterfaces;\n        return $this;\n    }\n\n    /**\n     * @return array\n     */\n    public function getImplementedInterfaces()\n    {\n        return $this->implementedInterfaces;\n    }\n\n    /**\n     * @param string $implementedInterface\n     * @return bool\n     */\n    public function hasImplementedInterface($implementedInterface)\n    {\n        $implementedInterface = (string) TypeGenerator::fromTypeString($implementedInterface);\n        return in_array($implementedInterface, $this->implementedInterfaces);\n    }\n\n    /**\n     * @param string $implementedInterface\n     * @return self\n     */\n    public function removeImplementedInterface($implementedInterface)\n    {\n        $implementedInterface = (string) TypeGenerator::fromTypeString($implementedInterface);\n        unset($this->implementedInterfaces[array_search($implementedInterface, $this->implementedInterfaces)]);\n        return $this;\n    }\n\n    /**\n     * @param  string $constantName\n     * @return PropertyGenerator|false\n     */\n    public function getConstant($constantName)\n    {\n        if (isset($this->constants[$constantName])) {\n            return $this->constants[$constantName];\n        }\n\n        return false;\n    }\n\n    /**\n     * @return PropertyGenerator[] indexed by constant name\n     */\n    public function getConstants()\n    {\n        return $this->constants;\n    }\n\n    /**\n     * @param  string $constantName\n     * @return self\n     */\n    public function removeConstant($constantName)\n    {\n        unset($this->constants[$constantName]);\n\n        return $this;\n    }\n\n    /**\n     * @param  string $constantName\n     * @return bool\n     */\n    public function hasConstant($constantName)\n    {\n        return isset($this->constants[$constantName]);\n    }\n\n    /**\n     * Add constant from PropertyGenerator\n     *\n     * @param  PropertyGenerator           $constant\n     * @throws Exception\\InvalidArgumentException\n     * @return self\n     */\n    public function addConstantFromGenerator(PropertyGenerator $constant)\n    {\n        $constantName = $constant->getName();\n\n        if (isset($this->constants[$constantName])) {\n            throw new Exception\\InvalidArgumentException(sprintf(\n                'A constant by name %s already exists in this class.',\n                $constantName\n            ));\n        }\n\n        if (! $constant->isConst()) {\n            throw new Exception\\InvalidArgumentException(sprintf(\n                'The value %s is not defined as a constant.',\n                $constantName\n            ));\n        }\n\n        $this->constants[$constantName] = $constant;\n\n        return $this;\n    }\n\n    /**\n     * Add Constant\n     *\n     * @param  string                      $name Non-empty string\n     * @param  string|int|null|float|array $value Scalar\n     *\n     * @throws Exception\\InvalidArgumentException\n     *\n     * @return self\n     */\n    public function addConstant($name, $value)\n    {\n        if (empty($name) || ! is_string($name)) {\n            throw new Exception\\InvalidArgumentException(sprintf(\n                '%s expects string for name',\n                __METHOD__\n            ));\n        }\n\n        $this->validateConstantValue($value);\n\n        return $this->addConstantFromGenerator(\n            new PropertyGenerator($name, new PropertyValueGenerator($value), PropertyGenerator::FLAG_CONSTANT)\n        );\n    }\n\n    /**\n     * @param  PropertyGenerator[]|array[] $constants\n     *\n     * @return self\n     */\n    public function addConstants(array $constants)\n    {\n        foreach ($constants as $constant) {\n            if ($constant instanceof PropertyGenerator) {\n                $this->addPropertyFromGenerator($constant);\n            } else {\n                if (is_array($constant)) {\n                    $this->addConstant(...array_values($constant));\n                }\n            }\n        }\n\n        return $this;\n    }\n\n    /**\n     * @param  array $properties\n     * @return self\n     */\n    public function addProperties(array $properties)\n    {\n        foreach ($properties as $property) {\n            if ($property instanceof PropertyGenerator) {\n                $this->addPropertyFromGenerator($property);\n            } else {\n                if (is_string($property)) {\n                    $this->addProperty($property);\n                } elseif (is_array($property)) {\n                    $this->addProperty(...array_values($property));\n                }\n            }\n        }\n\n        return $this;\n    }\n\n    /**\n     * Add Property from scalars\n     *\n     * @param  string $name\n     * @param  string|array $defaultValue\n     * @param  int $flags\n     * @throws Exception\\InvalidArgumentException\n     * @return self\n     */\n    public function addProperty($name, $defaultValue = null, $flags = PropertyGenerator::FLAG_PUBLIC)\n    {\n        if (! is_string($name)) {\n            throw new Exception\\InvalidArgumentException(sprintf(\n                '%s::%s expects string for name',\n                get_class($this),\n                __FUNCTION__\n            ));\n        }\n\n        // backwards compatibility\n        // @todo remove this on next major version\n        if ($flags === PropertyGenerator::FLAG_CONSTANT) {\n            return $this->addConstant($name, $defaultValue);\n        }\n\n        return $this->addPropertyFromGenerator(new PropertyGenerator($name, $defaultValue, $flags));\n    }\n\n    /**\n     * Add property from PropertyGenerator\n     *\n     * @param  PropertyGenerator           $property\n     * @throws Exception\\InvalidArgumentException\n     * @return self\n     */\n    public function addPropertyFromGenerator(PropertyGenerator $property)\n    {\n        $propertyName = $property->getName();\n\n        if (isset($this->properties[$propertyName])) {\n            throw new Exception\\InvalidArgumentException(sprintf(\n                'A property by name %s already exists in this class.',\n                $propertyName\n            ));\n        }\n\n        // backwards compatibility\n        // @todo remove this on next major version\n        if ($property->isConst()) {\n            return $this->addConstantFromGenerator($property);\n        }\n\n        $this->properties[$propertyName] = $property;\n        return $this;\n    }\n\n    /**\n     * @return PropertyGenerator[]\n     */\n    public function getProperties()\n    {\n        return $this->properties;\n    }\n\n    /**\n     * @param  string $propertyName\n     * @return PropertyGenerator|false\n     */\n    public function getProperty($propertyName)\n    {\n        foreach ($this->getProperties() as $property) {\n            if ($property->getName() == $propertyName) {\n                return $property;\n            }\n        }\n\n        return false;\n    }\n\n    /**\n     * Add a class to \"use\" classes\n     *\n     * @param  string $use\n     * @param  string|null $useAlias\n     * @return self\n     */\n    public function addUse($use, $useAlias = null)\n    {\n        $this->traitUsageGenerator->addUse($use, $useAlias);\n        return $this;\n    }\n\n    /**\n     * @param string $use\n     * @return bool\n     */\n    public function hasUse($use)\n    {\n        return $this->traitUsageGenerator->hasUse($use);\n    }\n\n    /**\n     * @param  string $use\n     * @return self\n     */\n    public function removeUse($use)\n    {\n        $this->traitUsageGenerator->removeUse($use);\n        return $this;\n    }\n\n    /**\n     * @param string $use\n     * @return bool\n     */\n    public function hasUseAlias($use)\n    {\n        return $this->traitUsageGenerator->hasUseAlias($use);\n    }\n\n    /**\n     * @param string $use\n     * @return self\n     */\n    public function removeUseAlias($use)\n    {\n        $this->traitUsageGenerator->removeUseAlias($use);\n        return $this;\n    }\n\n    /**\n     * Returns the \"use\" classes\n     *\n     * @return array\n     */\n    public function getUses()\n    {\n        return $this->traitUsageGenerator->getUses();\n    }\n\n    /**\n     * @param  string $propertyName\n     * @return self\n     */\n    public function removeProperty($propertyName)\n    {\n        unset($this->properties[$propertyName]);\n\n        return $this;\n    }\n\n    /**\n     * @param  string $propertyName\n     * @return bool\n     */\n    public function hasProperty($propertyName)\n    {\n        return isset($this->properties[$propertyName]);\n    }\n\n    /**\n     * @param  array $methods\n     * @return self\n     */\n    public function addMethods(array $methods)\n    {\n        foreach ($methods as $method) {\n            if ($method instanceof MethodGenerator) {\n                $this->addMethodFromGenerator($method);\n            } else {\n                if (is_string($method)) {\n                    $this->addMethod($method);\n                } elseif (is_array($method)) {\n                    $this->addMethod(...array_values($method));\n                }\n            }\n        }\n\n        return $this;\n    }\n\n    /**\n     * Add Method from scalars\n     *\n     * @param  string $name\n     * @param  array $parameters\n     * @param  int $flags\n     * @param  string $body\n     * @param  string $docBlock\n     * @throws Exception\\InvalidArgumentException\n     * @return self\n     */\n    public function addMethod(\n        $name,\n        array $parameters = [],\n        $flags = MethodGenerator::FLAG_PUBLIC,\n        $body = null,\n        $docBlock = null\n    ) {\n        if (! is_string($name)) {\n            throw new Exception\\InvalidArgumentException(sprintf(\n                '%s::%s expects string for name',\n                get_class($this),\n                __FUNCTION__\n            ));\n        }\n\n        return $this->addMethodFromGenerator(new MethodGenerator($name, $parameters, $flags, $body, $docBlock));\n    }\n\n    /**\n     * Add Method from MethodGenerator\n     *\n     * @param  MethodGenerator                    $method\n     * @throws Exception\\InvalidArgumentException\n     * @return self\n     */\n    public function addMethodFromGenerator(MethodGenerator $method)\n    {\n        $methodName = $method->getName();\n\n        if ($this->hasMethod($methodName)) {\n            throw new Exception\\InvalidArgumentException(sprintf(\n                'A method by name %s already exists in this class.',\n                $methodName\n            ));\n        }\n\n        $this->methods[strtolower($methodName)] = $method;\n        return $this;\n    }\n\n    /**\n     * @return MethodGenerator[]\n     */\n    public function getMethods()\n    {\n        return $this->methods;\n    }\n\n    /**\n     * @param  string $methodName\n     * @return MethodGenerator|false\n     */\n    public function getMethod($methodName)\n    {\n        return $this->hasMethod($methodName) ? $this->methods[strtolower($methodName)] : false;\n    }\n\n    /**\n     * @param  string $methodName\n     * @return self\n     */\n    public function removeMethod($methodName)\n    {\n        unset($this->methods[strtolower($methodName)]);\n\n        return $this;\n    }\n\n    /**\n     * @param  string $methodName\n     * @return bool\n     */\n    public function hasMethod($methodName)\n    {\n        return isset($this->methods[strtolower($methodName)]);\n    }\n\n    /**\n     * @inheritDoc\n     */\n    public function addTrait($trait)\n    {\n        $this->traitUsageGenerator->addTrait($trait);\n        return $this;\n    }\n\n    /**\n     * @inheritDoc\n     */\n    public function addTraits(array $traits)\n    {\n        $this->traitUsageGenerator->addTraits($traits);\n        return $this;\n    }\n\n    /**\n     * @inheritDoc\n     */\n    public function hasTrait($traitName)\n    {\n        return $this->traitUsageGenerator->hasTrait($traitName);\n    }\n\n    /**\n     * @inheritDoc\n     */\n    public function getTraits()\n    {\n        return $this->traitUsageGenerator->getTraits();\n    }\n\n    /**\n     * @inheritDoc\n     */\n    public function removeTrait($traitName)\n    {\n        return $this->traitUsageGenerator->removeTrait($traitName);\n    }\n\n    /**\n     * @inheritDoc\n     */\n    public function addTraitAlias($method, $alias, $visibility = null)\n    {\n        $this->traitUsageGenerator->addTraitAlias($method, $alias, $visibility);\n        return $this;\n    }\n\n    /**\n     * @inheritDoc\n     */\n    public function getTraitAliases()\n    {\n        return $this->traitUsageGenerator->getTraitAliases();\n    }\n\n    /**\n     * @inheritDoc\n     */\n    public function addTraitOverride($method, $traitsToReplace)\n    {\n        $this->traitUsageGenerator->addTraitOverride($method, $traitsToReplace);\n        return $this;\n    }\n\n    /**\n     * @inheritDoc\n     */\n    public function removeTraitOverride($method, $overridesToRemove = null)\n    {\n        $this->traitUsageGenerator->removeTraitOverride($method, $overridesToRemove);\n\n        return $this;\n    }\n\n    /**\n     * @inheritDoc\n     */\n    public function getTraitOverrides()\n    {\n        return $this->traitUsageGenerator->getTraitOverrides();\n    }\n\n    /**\n     * @return bool\n     */\n    public function isSourceDirty()\n    {\n        if (($docBlock = $this->getDocBlock()) && $docBlock->isSourceDirty()) {\n            return true;\n        }\n\n        foreach ($this->getProperties() as $property) {\n            if ($property->isSourceDirty()) {\n                return true;\n            }\n        }\n\n        foreach ($this->getMethods() as $method) {\n            if ($method->isSourceDirty()) {\n                return true;\n            }\n        }\n\n        return parent::isSourceDirty();\n    }\n\n    /**\n     * @inheritDoc\n     */\n    public function generate()\n    {\n        if (! $this->isSourceDirty()) {\n            $output = $this->getSourceContent();\n            if (! empty($output)) {\n                return $output;\n            }\n        }\n\n        $indent = $this->getIndentation();\n        $output = '';\n\n        if (null !== ($namespace = $this->getNamespaceName())) {\n            $output .= 'namespace ' . $namespace . ';' . self::LINE_FEED . self::LINE_FEED;\n        }\n\n        $uses = $this->getUses();\n\n        if (! empty($uses)) {\n            foreach ($uses as $use) {\n                $output .= 'use ' . $use . ';' . self::LINE_FEED;\n            }\n\n            $output .= self::LINE_FEED;\n        }\n\n        if (null !== ($docBlock = $this->getDocBlock())) {\n            $docBlock->setIndentation('');\n            $output .= $docBlock->generate();\n        }\n\n        if ($this->isAbstract()) {\n            $output .= 'abstract ';\n        } elseif ($this->isFinal()) {\n            $output .= 'final ';\n        }\n\n        $output .= static::OBJECT_TYPE . ' ' . $this->getName();\n\n        if (! empty($this->extendedClass)) {\n            $output .= ' extends ' . $this->generateShortOrCompleteClassname($this->extendedClass);\n        }\n\n        $implemented = $this->getImplementedInterfaces();\n\n        if (! empty($implemented)) {\n            $implemented = array_map([$this, 'generateShortOrCompleteClassname'], $implemented);\n            $output .= ' ' . static::IMPLEMENTS_KEYWORD . ' ' . implode(', ', $implemented);\n        }\n\n        $output .= self::LINE_FEED . '{' . self::LINE_FEED . self::LINE_FEED;\n        $output .= $this->traitUsageGenerator->generate();\n\n        $constants = $this->getConstants();\n\n        foreach ($constants as $constant) {\n            $output .= $constant->generate() . self::LINE_FEED . self::LINE_FEED;\n        }\n\n        $properties = $this->getProperties();\n\n        foreach ($properties as $property) {\n            $output .= $property->generate() . self::LINE_FEED . self::LINE_FEED;\n        }\n\n        $methods = $this->getMethods();\n\n        foreach ($methods as $method) {\n            $output .= $method->generate() . self::LINE_FEED;\n        }\n\n        $output .= self::LINE_FEED . '}' . self::LINE_FEED;\n\n        return $output;\n    }\n\n    /**\n     * @param mixed $value\n     *\n     * @return void\n     *\n     * @throws Exception\\InvalidArgumentException\n     */\n    private function validateConstantValue($value)\n    {\n        if (null === $value || is_scalar($value)) {\n            return;\n        }\n\n        if (is_array($value)) {\n            array_walk($value, [$this, 'validateConstantValue']);\n\n            return;\n        }\n\n        throw new Exception\\InvalidArgumentException(sprintf(\n            'Expected value for constant, value must be a \"scalar\" or \"null\", \"%s\" found',\n            gettype($value)\n        ));\n    }\n\n    /**\n     * @param string $fqnClassName\n     *\n     * @return string\n     */\n    private function generateShortOrCompleteClassname($fqnClassName)\n    {\n        $fqnClassName = ltrim($fqnClassName, '\\\\');\n        $parts = explode('\\\\', $fqnClassName);\n        $className = array_pop($parts);\n        $classNamespace = implode('\\\\', $parts);\n        $currentNamespace = (string) $this->getNamespaceName();\n\n        if ($this->hasUseAlias($fqnClassName)) {\n            return $this->traitUsageGenerator->getUseAlias($fqnClassName);\n        }\n        if ($this->hasUseAlias($classNamespace)) {\n            $namespaceAlias = $this->traitUsageGenerator->getUseAlias($classNamespace);\n\n            return $namespaceAlias . '\\\\' . $className;\n        }\n        if ($this->traitUsageGenerator->isUseAlias($fqnClassName)) {\n            return $fqnClassName;\n        }\n        if ($this->traitUsageGenerator->isUseAlias($classNamespace)) {\n            return $fqnClassName;\n        }\n        if ($classNamespace === $currentNamespace || in_array($fqnClassName, $this->getUses())) {\n            return $className;\n        }\n\n        return '\\\\' . $fqnClassName;\n    }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- vendor/laminas/laminas-code/src/Generator/ClassGenerator.php	(revision a449d8a584af7c2722ad0d48f553c0917ddead6e)
+++ vendor/laminas/laminas-code/src/Generator/ClassGenerator.php	(date 1605132687000)
@@ -29,7 +29,6 @@
 use function str_replace;
 use function strpos;
 use function strrpos;
-use function strstr;
 use function strtolower;
 use function substr;
 
Index: vendor/doctrine/dbal/lib/Doctrine/DBAL/DriverManager.php
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?php\n\nnamespace Doctrine\\DBAL;\n\nuse Doctrine\\Common\\EventManager;\nuse Doctrine\\DBAL\\Driver\\DrizzlePDOMySql;\nuse Doctrine\\DBAL\\Driver\\IBMDB2;\nuse Doctrine\\DBAL\\Driver\\Mysqli;\nuse Doctrine\\DBAL\\Driver\\OCI8;\nuse Doctrine\\DBAL\\Driver\\PDO;\nuse Doctrine\\DBAL\\Driver\\SQLAnywhere;\nuse Doctrine\\DBAL\\Driver\\SQLSrv;\n\nuse function array_keys;\nuse function array_merge;\nuse function assert;\nuse function class_implements;\nuse function in_array;\nuse function is_string;\nuse function is_subclass_of;\nuse function parse_str;\nuse function parse_url;\nuse function preg_replace;\nuse function rawurldecode;\nuse function str_replace;\nuse function strpos;\nuse function substr;\n\n/**\n * Factory for creating Doctrine\\DBAL\\Connection instances.\n */\nfinal class DriverManager\n{\n    /**\n     * List of supported drivers and their mappings to the driver classes.\n     *\n     * To add your own driver use the 'driverClass' parameter to\n     * {@link DriverManager::getConnection()}.\n     *\n     * @var string[]\n     */\n    private static $_driverMap = [\n        'pdo_mysql'          => PDO\\MySQL\\Driver::class,\n        'pdo_sqlite'         => PDO\\SQLite\\Driver::class,\n        'pdo_pgsql'          => PDO\\PgSQL\\Driver::class,\n        'pdo_oci'            => PDO\\OCI\\Driver::class,\n        'oci8'               => OCI8\\Driver::class,\n        'ibm_db2'            => IBMDB2\\Driver::class,\n        'pdo_sqlsrv'         => PDO\\SQLSrv\\Driver::class,\n        'mysqli'             => Mysqli\\Driver::class,\n        'drizzle_pdo_mysql'  => DrizzlePDOMySql\\Driver::class,\n        'sqlanywhere'        => SQLAnywhere\\Driver::class,\n        'sqlsrv'             => SQLSrv\\Driver::class,\n    ];\n\n    /**\n     * List of URL schemes from a database URL and their mappings to driver.\n     *\n     * @var string[]\n     */\n    private static $driverSchemeAliases = [\n        'db2'        => 'ibm_db2',\n        'mssql'      => 'pdo_sqlsrv',\n        'mysql'      => 'pdo_mysql',\n        'mysql2'     => 'pdo_mysql', // Amazon RDS, for some weird reason\n        'postgres'   => 'pdo_pgsql',\n        'postgresql' => 'pdo_pgsql',\n        'pgsql'      => 'pdo_pgsql',\n        'sqlite'     => 'pdo_sqlite',\n        'sqlite3'    => 'pdo_sqlite',\n    ];\n\n    /**\n     * Private constructor. This class cannot be instantiated.\n     *\n     * @codeCoverageIgnore\n     */\n    private function __construct()\n    {\n    }\n\n    /**\n     * Creates a connection object based on the specified parameters.\n     * This method returns a Doctrine\\DBAL\\Connection which wraps the underlying\n     * driver connection.\n     *\n     * $params must contain at least one of the following.\n     *\n     * Either 'driver' with one of the array keys of {@link $_driverMap},\n     * OR 'driverClass' that contains the full class name (with namespace) of the\n     * driver class to instantiate.\n     *\n     * Other (optional) parameters:\n     *\n     * <b>user (string)</b>:\n     * The username to use when connecting.\n     *\n     * <b>password (string)</b>:\n     * The password to use when connecting.\n     *\n     * <b>driverOptions (array)</b>:\n     * Any additional driver-specific options for the driver. These are just passed\n     * through to the driver.\n     *\n     * <b>pdo</b>:\n     * You can pass an existing PDO instance through this parameter. The PDO\n     * instance will be wrapped in a Doctrine\\DBAL\\Connection.\n     *\n     * <b>wrapperClass</b>:\n     * You may specify a custom wrapper class through the 'wrapperClass'\n     * parameter but this class MUST inherit from Doctrine\\DBAL\\Connection.\n     *\n     * <b>driverClass</b>:\n     * The driver class to use.\n     *\n     * @param array{wrapperClass?: class-string<T>} $params\n     * @param Configuration|null                    $config       The configuration to use.\n     * @param EventManager|null                     $eventManager The event manager to use.\n     *\n     * @throws Exception\n     *\n     * @phpstan-param mixed[] $params\n     * @psalm-return ($params is array{wrapperClass:mixed} ? T : Connection)\n     * @template T of Connection\n     */\n    public static function getConnection(\n        array $params,\n        ?Configuration $config = null,\n        ?EventManager $eventManager = null\n    ): Connection {\n        // create default config and event manager, if not set\n        if (! $config) {\n            $config = new Configuration();\n        }\n\n        if (! $eventManager) {\n            $eventManager = new EventManager();\n        }\n\n        $params = self::parseDatabaseUrl($params);\n\n        // @todo: deprecated, notice thrown by connection constructor\n        if (isset($params['master'])) {\n            $params['master'] = self::parseDatabaseUrl($params['master']);\n        }\n\n        // @todo: deprecated, notice thrown by connection constructor\n        if (isset($params['slaves'])) {\n            foreach ($params['slaves'] as $key => $slaveParams) {\n                $params['slaves'][$key] = self::parseDatabaseUrl($slaveParams);\n            }\n        }\n\n        // URL support for PrimaryReplicaConnection\n        if (isset($params['primary'])) {\n            $params['primary'] = self::parseDatabaseUrl($params['primary']);\n        }\n\n        if (isset($params['replica'])) {\n            foreach ($params['replica'] as $key => $replicaParams) {\n                $params['replica'][$key] = self::parseDatabaseUrl($replicaParams);\n            }\n        }\n\n        // URL support for PoolingShardConnection\n        if (isset($params['global'])) {\n            $params['global'] = self::parseDatabaseUrl($params['global']);\n        }\n\n        if (isset($params['shards'])) {\n            foreach ($params['shards'] as $key => $shardParams) {\n                $params['shards'][$key] = self::parseDatabaseUrl($shardParams);\n            }\n        }\n\n        // check for existing pdo object\n        if (isset($params['pdo']) && ! $params['pdo'] instanceof \\PDO) {\n            throw Exception::invalidPdoInstance();\n        }\n\n        if (isset($params['pdo'])) {\n            $params['pdo']->setAttribute(\\PDO::ATTR_ERRMODE, \\PDO::ERRMODE_EXCEPTION);\n            $params['driver'] = 'pdo_' . $params['pdo']->getAttribute(\\PDO::ATTR_DRIVER_NAME);\n        } else {\n            self::_checkParams($params);\n        }\n\n        $className = $params['driverClass'] ?? self::$_driverMap[$params['driver']];\n\n        $driver = new $className();\n\n        $wrapperClass = Connection::class;\n        if (isset($params['wrapperClass'])) {\n            if (! is_subclass_of($params['wrapperClass'], $wrapperClass)) {\n                throw Exception::invalidWrapperClass($params['wrapperClass']);\n            }\n\n            /** @var class-string<Connection> $wrapperClass */\n            $wrapperClass = $params['wrapperClass'];\n        }\n\n        return new $wrapperClass($params, $driver, $config, $eventManager);\n    }\n\n    /**\n     * Returns the list of supported drivers.\n     *\n     * @return string[]\n     */\n    public static function getAvailableDrivers(): array\n    {\n        return array_keys(self::$_driverMap);\n    }\n\n    /**\n     * Checks the list of parameters.\n     *\n     * @param mixed[] $params The list of parameters.\n     *\n     * @throws Exception\n     */\n    private static function _checkParams(array $params): void\n    {\n        // check existence of mandatory parameters\n\n        // driver\n        if (! isset($params['driver']) && ! isset($params['driverClass'])) {\n            throw Exception::driverRequired();\n        }\n\n        // check validity of parameters\n\n        // driver\n        if (isset($params['driver']) && ! isset(self::$_driverMap[$params['driver']])) {\n            throw Exception::unknownDriver($params['driver'], array_keys(self::$_driverMap));\n        }\n\n        if (\n            isset($params['driverClass'])\n            && ! in_array(Driver::class, class_implements($params['driverClass'], true))\n        ) {\n            throw Exception::invalidDriverClass($params['driverClass']);\n        }\n    }\n\n    /**\n     * Normalizes the given connection URL path.\n     *\n     * @return string The normalized connection URL path\n     */\n    private static function normalizeDatabaseUrlPath(string $urlPath): string\n    {\n        // Trim leading slash from URL path.\n        return substr($urlPath, 1);\n    }\n\n    /**\n     * Extracts parts from a database URL, if present, and returns an\n     * updated list of parameters.\n     *\n     * @param mixed[] $params The list of parameters.\n     *\n     * @return mixed[] A modified list of parameters with info from a database\n     *                 URL extracted into indidivual parameter parts.\n     *\n     * @throws Exception\n     */\n    private static function parseDatabaseUrl(array $params): array\n    {\n        if (! isset($params['url'])) {\n            return $params;\n        }\n\n        // (pdo_)?sqlite3?:///... => (pdo_)?sqlite3?://localhost/... or else the URL will be invalid\n        $url = preg_replace('#^((?:pdo_)?sqlite3?):///#', '$1://localhost/', $params['url']);\n        assert(is_string($url));\n\n        $url = parse_url($url);\n\n        if ($url === false) {\n            throw new Exception('Malformed parameter \"url\".');\n        }\n\n        foreach ($url as $param => $value) {\n            if (! is_string($value)) {\n                continue;\n            }\n\n            $url[$param] = rawurldecode($value);\n        }\n\n        // If we have a connection URL, we have to unset the default PDO instance connection parameter (if any)\n        // as we cannot merge connection details from the URL into the PDO instance (URL takes precedence).\n        unset($params['pdo']);\n\n        $params = self::parseDatabaseUrlScheme($url['scheme'] ?? null, $params);\n\n        if (isset($url['host'])) {\n            $params['host'] = $url['host'];\n        }\n\n        if (isset($url['port'])) {\n            $params['port'] = $url['port'];\n        }\n\n        if (isset($url['user'])) {\n            $params['user'] = $url['user'];\n        }\n\n        if (isset($url['pass'])) {\n            $params['password'] = $url['pass'];\n        }\n\n        $params = self::parseDatabaseUrlPath($url, $params);\n        $params = self::parseDatabaseUrlQuery($url, $params);\n\n        return $params;\n    }\n\n    /**\n     * Parses the given connection URL and resolves the given connection parameters.\n     *\n     * Assumes that the connection URL scheme is already parsed and resolved into the given connection parameters\n     * via {@link parseDatabaseUrlScheme}.\n     *\n     * @see parseDatabaseUrlScheme\n     *\n     * @param mixed[] $url    The URL parts to evaluate.\n     * @param mixed[] $params The connection parameters to resolve.\n     *\n     * @return mixed[] The resolved connection parameters.\n     */\n    private static function parseDatabaseUrlPath(array $url, array $params): array\n    {\n        if (! isset($url['path'])) {\n            return $params;\n        }\n\n        $url['path'] = self::normalizeDatabaseUrlPath($url['path']);\n\n        // If we do not have a known DBAL driver, we do not know any connection URL path semantics to evaluate\n        // and therefore treat the path as regular DBAL connection URL path.\n        if (! isset($params['driver'])) {\n            return self::parseRegularDatabaseUrlPath($url, $params);\n        }\n\n        if (strpos($params['driver'], 'sqlite') !== false) {\n            return self::parseSqliteDatabaseUrlPath($url, $params);\n        }\n\n        return self::parseRegularDatabaseUrlPath($url, $params);\n    }\n\n    /**\n     * Parses the query part of the given connection URL and resolves the given connection parameters.\n     *\n     * @param mixed[] $url    The connection URL parts to evaluate.\n     * @param mixed[] $params The connection parameters to resolve.\n     *\n     * @return mixed[] The resolved connection parameters.\n     */\n    private static function parseDatabaseUrlQuery(array $url, array $params): array\n    {\n        if (! isset($url['query'])) {\n            return $params;\n        }\n\n        $query = [];\n\n        parse_str($url['query'], $query); // simply ingest query as extra params, e.g. charset or sslmode\n\n        return array_merge($params, $query); // parse_str wipes existing array elements\n    }\n\n    /**\n     * Parses the given regular connection URL and resolves the given connection parameters.\n     *\n     * Assumes that the \"path\" URL part is already normalized via {@link normalizeDatabaseUrlPath}.\n     *\n     * @see normalizeDatabaseUrlPath\n     *\n     * @param mixed[] $url    The regular connection URL parts to evaluate.\n     * @param mixed[] $params The connection parameters to resolve.\n     *\n     * @return mixed[] The resolved connection parameters.\n     */\n    private static function parseRegularDatabaseUrlPath(array $url, array $params): array\n    {\n        $params['dbname'] = $url['path'];\n\n        return $params;\n    }\n\n    /**\n     * Parses the given SQLite connection URL and resolves the given connection parameters.\n     *\n     * Assumes that the \"path\" URL part is already normalized via {@link normalizeDatabaseUrlPath}.\n     *\n     * @see normalizeDatabaseUrlPath\n     *\n     * @param mixed[] $url    The SQLite connection URL parts to evaluate.\n     * @param mixed[] $params The connection parameters to resolve.\n     *\n     * @return mixed[] The resolved connection parameters.\n     */\n    private static function parseSqliteDatabaseUrlPath(array $url, array $params): array\n    {\n        if ($url['path'] === ':memory:') {\n            $params['memory'] = true;\n\n            return $params;\n        }\n\n        $params['path'] = $url['path']; // pdo_sqlite driver uses 'path' instead of 'dbname' key\n\n        return $params;\n    }\n\n    /**\n     * Parses the scheme part from given connection URL and resolves the given connection parameters.\n     *\n     * @param string|null $scheme The connection URL scheme, if available\n     * @param mixed[]     $params The connection parameters to resolve.\n     *\n     * @return mixed[] The resolved connection parameters.\n     *\n     * @throws Exception If parsing failed or resolution is not possible.\n     */\n    private static function parseDatabaseUrlScheme($scheme, array $params): array\n    {\n        if ($scheme !== null) {\n            // The requested driver from the URL scheme takes precedence\n            // over the default custom driver from the connection parameters (if any).\n            unset($params['driverClass']);\n\n            // URL schemes must not contain underscores, but dashes are ok\n            $driver = str_replace('-', '_', $scheme);\n\n            // The requested driver from the URL scheme takes precedence over the\n            // default driver from the connection parameters. If the driver is\n            // an alias (e.g. \"postgres\"), map it to the actual name (\"pdo-pgsql\").\n            // Otherwise, let checkParams decide later if the driver exists.\n            $params['driver'] = self::$driverSchemeAliases[$driver] ?? $driver;\n\n            return $params;\n        }\n\n        // If a schemeless connection URL is given, we require a default driver or default custom driver\n        // as connection parameter.\n        if (! isset($params['driverClass']) && ! isset($params['driver'])) {\n            throw Exception::driverRequired($params['url']);\n        }\n\n        return $params;\n    }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- vendor/doctrine/dbal/lib/Doctrine/DBAL/DriverManager.php	(revision a449d8a584af7c2722ad0d48f553c0917ddead6e)
+++ vendor/doctrine/dbal/lib/Doctrine/DBAL/DriverManager.php	(date 1605385618000)
@@ -119,7 +119,6 @@
      *
      * @throws Exception
      *
-     * @phpstan-param mixed[] $params
      * @psalm-return ($params is array{wrapperClass:mixed} ? T : Connection)
      * @template T of Connection
      */
Index: vendor/doctrine/dbal/lib/Doctrine/DBAL/Version.php
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?php\n\nnamespace Doctrine\\DBAL;\n\nuse function str_replace;\nuse function strtolower;\nuse function version_compare;\n\n/**\n * Class to store and retrieve the version of Doctrine.\n *\n * @internal\n * @deprecated Refrain from checking the DBAL version at runtime.\n */\nclass Version\n{\n    /**\n     * Current Doctrine Version.\n     */\n    public const VERSION = '2.12.0';\n\n    /**\n     * Compares a Doctrine version with the current one.\n     *\n     * @param string $version The Doctrine version to compare to.\n     *\n     * @return int -1 if older, 0 if it is the same, 1 if version passed as argument is newer.\n     */\n    public static function compare($version)\n    {\n        $currentVersion = str_replace(' ', '', strtolower(self::VERSION));\n        $version        = str_replace(' ', '', $version);\n\n        return version_compare($version, $currentVersion);\n    }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- vendor/doctrine/dbal/lib/Doctrine/DBAL/Version.php	(revision a449d8a584af7c2722ad0d48f553c0917ddead6e)
+++ vendor/doctrine/dbal/lib/Doctrine/DBAL/Version.php	(date 1605385618000)
@@ -17,7 +17,7 @@
     /**
      * Current Doctrine Version.
      */
-    public const VERSION = '2.12.0';
+    public const VERSION = '2.12.1';
 
     /**
      * Compares a Doctrine version with the current one.
Index: vendor/laminas/laminas-code/src/Generator/FileGenerator.php
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?php\n\n/**\n * @see       https://github.com/laminas/laminas-code for the canonical source repository\n * @copyright https://github.com/laminas/laminas-code/blob/master/COPYRIGHT.md\n * @license   https://github.com/laminas/laminas-code/blob/master/LICENSE.md New BSD License\n */\n\nnamespace Laminas\\Code\\Generator;\n\nuse Laminas\\Code\\DeclareStatement;\nuse Laminas\\Code\\Exception\\InvalidArgumentException;\nuse Laminas\\Code\\Reflection\\Exception as ReflectionException;\nuse Laminas\\Code\\Reflection\\FileReflection;\n\nuse function array_key_exists;\nuse function array_merge;\nuse function count;\nuse function current;\nuse function dirname;\nuse function file_put_contents;\nuse function in_array;\nuse function is_array;\nuse function is_string;\nuse function is_writable;\nuse function method_exists;\nuse function preg_match;\nuse function preg_replace;\nuse function property_exists;\nuse function reset;\nuse function sprintf;\nuse function str_repeat;\nuse function str_replace;\nuse function strrpos;\nuse function strtolower;\nuse function substr;\nuse function token_get_all;\n\nclass FileGenerator extends AbstractGenerator\n{\n    /**\n     * @var string\n     */\n    protected $filename;\n\n    /**\n     * @var DocBlockGenerator\n     */\n    protected $docBlock;\n\n    /**\n     * @var array\n     */\n    protected $requiredFiles = [];\n\n    /**\n     * @var string\n     */\n    protected $namespace;\n\n    /**\n     * @var array\n     */\n    protected $uses = [];\n\n    /**\n     * @var array\n     */\n    protected $classes = [];\n\n    /**\n     * @var string\n     */\n    protected $body;\n\n    /**\n     * @var DeclareStatement[]\n     */\n    protected $declares = [];\n\n    /**\n     * Passes $options to {@link setOptions()}.\n     *\n     * @param  array|\\Traversable $options\n     */\n    public function __construct($options = null)\n    {\n        if (null !== $options) {\n            $this->setOptions($options);\n        }\n    }\n\n    /**\n     * Use this if you intend on generating code generation objects based on the same file.\n     * This will keep previous changes to the file in tact during the same PHP process\n     *\n     * @param  string $filePath\n     * @param  bool $includeIfNotAlreadyIncluded\n     * @throws ReflectionException\\InvalidArgumentException If file does not exists\n     * @throws ReflectionException\\RuntimeException If file exists but is not included or required\n     * @return FileGenerator\n     */\n    public static function fromReflectedFileName($filePath, $includeIfNotAlreadyIncluded = true)\n    {\n        $fileReflector = new FileReflection($filePath, $includeIfNotAlreadyIncluded);\n        $codeGenerator = static::fromReflection($fileReflector);\n\n        return $codeGenerator;\n    }\n\n    /**\n     * @param  FileReflection $fileReflection\n     * @return FileGenerator\n     */\n    public static function fromReflection(FileReflection $fileReflection)\n    {\n        $file = new static();\n\n        $file->setSourceContent($fileReflection->getContents());\n        $file->setSourceDirty(false);\n\n        $uses = $fileReflection->getUses();\n\n        foreach ($fileReflection->getClasses() as $class) {\n            $phpClass = ClassGenerator::fromReflection($class);\n            $phpClass->setContainingFileGenerator($file);\n\n            foreach ($uses as $fileUse) {\n                $phpClass->addUse($fileUse['use'], $fileUse['as']);\n            }\n\n            $file->setClass($phpClass);\n        }\n\n        $namespace = $fileReflection->getNamespace();\n\n        if ($namespace != '') {\n            $file->setNamespace($namespace);\n        }\n\n        if ($uses) {\n            $file->setUses($uses);\n        }\n\n        if ($fileReflection->getDocComment() != '') {\n            $docBlock = $fileReflection->getDocBlock();\n            $file->setDocBlock(DocBlockGenerator::fromReflection($docBlock));\n        }\n\n        return $file;\n    }\n\n    /**\n     * @param  array $values\n     * @return FileGenerator\n     */\n    public static function fromArray(array $values)\n    {\n        $fileGenerator = new static();\n        foreach ($values as $name => $value) {\n            switch (strtolower(str_replace(['.', '-', '_'], '', $name))) {\n                case 'filename':\n                    $fileGenerator->setFilename($value);\n                    break;\n                case 'class':\n                    $fileGenerator->setClass(\n                        $value instanceof ClassGenerator\n                        ? $value\n                        : ClassGenerator::fromArray($value)\n                    );\n                    break;\n                case 'requiredfiles':\n                    $fileGenerator->setRequiredFiles($value);\n                    break;\n                case 'declares':\n                    $fileGenerator->setDeclares(array_map(static function ($directive, $value) {\n                        return DeclareStatement::fromArray([$directive => $value]);\n                    }, array_keys($value), $value));\n                    break;\n                default:\n                    if (property_exists($fileGenerator, $name)) {\n                        $fileGenerator->{$name} = $value;\n                    } elseif (method_exists($fileGenerator, 'set' . $name)) {\n                        $fileGenerator->{'set' . $name}($value);\n                    }\n            }\n        }\n\n        return $fileGenerator;\n    }\n\n    /**\n     * @param  DocBlockGenerator|array|string $docBlock\n     * @throws Exception\\InvalidArgumentException\n     * @return FileGenerator\n     */\n    public function setDocBlock($docBlock)\n    {\n        if (is_string($docBlock)) {\n            $docBlock = ['shortDescription' => $docBlock];\n        }\n\n        if (is_array($docBlock)) {\n            $docBlock = new DocBlockGenerator($docBlock);\n        } elseif (! $docBlock instanceof DocBlockGenerator) {\n            throw new Exception\\InvalidArgumentException(sprintf(\n                '%s is expecting either a string, array or an instance of %s\\DocBlockGenerator',\n                __METHOD__,\n                __NAMESPACE__\n            ));\n        }\n\n        $this->docBlock = $docBlock;\n        return $this;\n    }\n\n    /**\n     * @return DocBlockGenerator\n     */\n    public function getDocBlock()\n    {\n        return $this->docBlock;\n    }\n\n    /**\n     * @param  array $requiredFiles\n     * @return FileGenerator\n     */\n    public function setRequiredFiles(array $requiredFiles)\n    {\n        $this->requiredFiles = $requiredFiles;\n        return $this;\n    }\n\n    /**\n     * @return array\n     */\n    public function getRequiredFiles()\n    {\n        return $this->requiredFiles;\n    }\n\n    /**\n     * @return string\n     */\n    public function getNamespace()\n    {\n        return $this->namespace;\n    }\n\n    /**\n     * @param  string $namespace\n     * @return FileGenerator\n     */\n    public function setNamespace($namespace)\n    {\n        $this->namespace = (string) $namespace;\n        return $this;\n    }\n\n    /**\n     * Returns an array with the first element the use statement, second is the as part.\n     * If $withResolvedAs is set to true, there will be a third element that is the\n     * \"resolved\" as statement, as the second part is not required in use statements\n     *\n     * @param  bool $withResolvedAs\n     * @return array\n     */\n    public function getUses($withResolvedAs = false)\n    {\n        $uses = $this->uses;\n        if ($withResolvedAs) {\n            for ($useIndex = 0, $count = count($uses); $useIndex < $count; $useIndex++) {\n                if ($uses[$useIndex][1] == '') {\n                    if (($lastSeparator = strrpos($uses[$useIndex][0], '\\\\')) !== false) {\n                        $uses[$useIndex][2] = substr($uses[$useIndex][0], $lastSeparator + 1);\n                    } else {\n                        $uses[$useIndex][2] = $uses[$useIndex][0];\n                    }\n                } else {\n                    $uses[$useIndex][2] = $uses[$useIndex][1];\n                }\n            }\n        }\n\n        return $uses;\n    }\n\n    /**\n     * @param  array $uses\n     * @return FileGenerator\n     */\n    public function setUses(array $uses)\n    {\n        foreach ($uses as $use) {\n            $use = (array) $use;\n            if (array_key_exists('use', $use) && array_key_exists('as', $use)) {\n                $import = $use['use'];\n                $alias  = $use['as'];\n            } elseif (count($use) == 2) {\n                list($import, $alias) = $use;\n            } else {\n                $import = current($use);\n                $alias  = null;\n            }\n            $this->setUse($import, $alias);\n        }\n        return $this;\n    }\n\n    /**\n     * @param  string $use\n     * @param  null|string $as\n     * @return FileGenerator\n     */\n    public function setUse($use, $as = null)\n    {\n        if (! in_array([$use, $as], $this->uses)) {\n            $this->uses[] = [$use, $as];\n        }\n        return $this;\n    }\n\n    /**\n     * @param  array $classes\n     * @return FileGenerator\n     */\n    public function setClasses(array $classes)\n    {\n        foreach ($classes as $class) {\n            $this->setClass($class);\n        }\n\n        return $this;\n    }\n\n    /**\n     * @param  string $name\n     * @return ClassGenerator\n     */\n    public function getClass($name = null)\n    {\n        if ($name === null) {\n            reset($this->classes);\n\n            return current($this->classes);\n        }\n\n        return $this->classes[(string) $name];\n    }\n\n    /**\n     * @param  array|string|ClassGenerator $class\n     * @throws Exception\\InvalidArgumentException\n     * @return FileGenerator\n     */\n    public function setClass($class)\n    {\n        if (is_array($class)) {\n            $class = ClassGenerator::fromArray($class);\n        } elseif (is_string($class)) {\n            $class = new ClassGenerator($class);\n        } elseif (! $class instanceof ClassGenerator) {\n            throw new Exception\\InvalidArgumentException(sprintf(\n                '%s is expecting either a string, array or an instance of %s\\ClassGenerator',\n                __METHOD__,\n                __NAMESPACE__\n            ));\n        }\n\n        // @todo check for dup here\n        $className                 = $class->getName();\n        $this->classes[$className] = $class;\n\n        return $this;\n    }\n\n    /**\n     * @param  string $filename\n     * @return FileGenerator\n     */\n    public function setFilename($filename)\n    {\n        $this->filename = (string) $filename;\n        return $this;\n    }\n\n    /**\n     * @return string\n     */\n    public function getFilename()\n    {\n        return $this->filename;\n    }\n\n    /**\n     * @return ClassGenerator[]\n     */\n    public function getClasses()\n    {\n        return $this->classes;\n    }\n\n    /**\n     * @param  string $body\n     * @return FileGenerator\n     */\n    public function setBody($body)\n    {\n        $this->body = (string) $body;\n        return $this;\n    }\n\n    /**\n     * @return string\n     */\n    public function getBody()\n    {\n        return $this->body;\n    }\n\n    public function setDeclares(array $declares)\n    {\n        foreach ($declares as $declare) {\n            if (! $declare instanceof DeclareStatement) {\n                throw new InvalidArgumentException(sprintf(\n                    '%s is expecting an array of %s objects',\n                    __METHOD__,\n                    DeclareStatement::class\n                ));\n            }\n\n            if (! array_key_exists($declare->getDirective(), $this->declares)) {\n                $this->declares[$declare->getDirective()] = $declare;\n            }\n        }\n\n        return $this;\n    }\n\n    /**\n     * @return bool\n     */\n    public function isSourceDirty()\n    {\n        $docBlock = $this->getDocBlock();\n        if ($docBlock && $docBlock->isSourceDirty()) {\n            return true;\n        }\n\n        foreach ($this->classes as $class) {\n            if ($class->isSourceDirty()) {\n                return true;\n            }\n        }\n\n        return parent::isSourceDirty();\n    }\n\n    /**\n     * @return string\n     */\n    public function generate()\n    {\n        if ($this->isSourceDirty() === false) {\n            return $this->sourceContent;\n        }\n\n        $output = '';\n\n        // @note body gets populated when FileGenerator created\n        // from a file.  @see fromReflection and may also be set\n        // via FileGenerator::setBody\n        $body = $this->getBody();\n\n        // start with the body (if there), or open tag\n        if (preg_match('#(?:\\s*)<\\?php#', $body) == false) {\n            $output = '<?php' . self::LINE_FEED;\n        }\n\n        // if there are markers, put the body into the output\n        if (preg_match('#/\\* Laminas_Code_Generator_Php_File-(.*?)Marker:#m', $body)) {\n            $tokens = token_get_all($body);\n            foreach ($tokens as $token) {\n                if (is_array($token) && in_array($token[0], [T_OPEN_TAG, T_COMMENT, T_DOC_COMMENT, T_WHITESPACE])) {\n                    $output .= $token[1];\n                }\n            }\n            $body = '';\n        }\n\n        // Add file DocBlock, if any\n        if (null !== ($docBlock = $this->getDocBlock())) {\n            $docBlock->setIndentation('');\n\n            if (preg_match('#/\\* Laminas_Code_Generator_FileGenerator-DocBlockMarker \\*/#m', $output)) {\n                // @codingStandardsIgnoreStart\n                $output = preg_replace('#/\\* Laminas_Code_Generator_FileGenerator-DocBlockMarker \\*/#m', $docBlock->generate(), $output, 1);\n                // @codingStandardsIgnoreEnd\n            } else {\n                $output .= $docBlock->generate() . self::LINE_FEED;\n            }\n        }\n\n        // newline\n        $output .= self::LINE_FEED;\n\n        // namespace, if any\n        $namespace = $this->getNamespace();\n        if ($namespace) {\n            $namespace = sprintf('namespace %s;%s', $namespace, str_repeat(self::LINE_FEED, 2));\n            if (preg_match('#/\\* Laminas_Code_Generator_FileGenerator-NamespaceMarker \\*/#m', $output)) {\n                $output = preg_replace(\n                    '#/\\* Laminas_Code_Generator_FileGenerator-NamespaceMarker \\*/#m',\n                    $namespace,\n                    $output,\n                    1\n                );\n            } else {\n                $output .= $namespace;\n            }\n        }\n\n        // declares, if any\n        if ($this->declares) {\n            $declareStatements = '';\n\n            foreach ($this->declares as $declare) {\n                $declareStatements .= $declare->getStatement() . self::LINE_FEED;\n            }\n\n            if (preg_match('#/\\* Laminas_Code_Generator_FileGenerator-DeclaresMarker \\*/#m', $output)) {\n                $output = preg_replace(\n                    '#/\\* Laminas_Code_Generator_FileGenerator-DeclaresMarker \\*/#m',\n                    $declareStatements,\n                    $output,\n                    1\n                );\n            } else {\n                $output .= $declareStatements;\n            }\n\n            $output .= self::LINE_FEED;\n        }\n\n        // process required files\n        // @todo marker replacement for required files\n        $requiredFiles = $this->getRequiredFiles();\n        if (! empty($requiredFiles)) {\n            foreach ($requiredFiles as $requiredFile) {\n                $output .= 'require_once \\'' . $requiredFile . '\\';' . self::LINE_FEED;\n            }\n\n            $output .= self::LINE_FEED;\n        }\n\n        $classes = $this->getClasses();\n        $classUses = [];\n        //build uses array\n        foreach ($classes as $class) {\n            //check for duplicate use statements\n            $uses = $class->getUses();\n            if (! empty($uses) && is_array($uses)) {\n                $classUses = array_merge($classUses, $uses);\n            }\n        }\n\n        // process import statements\n        $uses = $this->getUses();\n        if (! empty($uses)) {\n            $useOutput = '';\n\n            foreach ($uses as $use) {\n                list($import, $alias) = $use;\n                if (null === $alias) {\n                    $tempOutput = sprintf('%s', $import);\n                } else {\n                    $tempOutput = sprintf('%s as %s', $import, $alias);\n                }\n\n                //don't duplicate use statements\n                if (! in_array($tempOutput, $classUses)) {\n                    $useOutput .= 'use ' . $tempOutput . ';';\n                    $useOutput .= self::LINE_FEED;\n                }\n            }\n            $useOutput .= self::LINE_FEED;\n\n            if (preg_match('#/\\* Laminas_Code_Generator_FileGenerator-UseMarker \\*/#m', $output)) {\n                $output = preg_replace(\n                    '#/\\* Laminas_Code_Generator_FileGenerator-UseMarker \\*/#m',\n                    $useOutput,\n                    $output,\n                    1\n                );\n            } else {\n                $output .= $useOutput;\n            }\n        }\n\n        // process classes\n        if (! empty($classes)) {\n            foreach ($classes as $class) {\n                // @codingStandardsIgnoreStart\n                $regex = str_replace('&', $class->getName(), '/\\* Laminas_Code_Generator_Php_File-ClassMarker: \\{[A-Za-z0-9\\\\\\]+?&\\} \\*/');\n                // @codingStandardsIgnoreEnd\n                if (preg_match('#' . $regex . '#m', $output)) {\n                    $output = preg_replace('#' . $regex . '#', $class->generate(), $output, 1);\n                } else {\n                    if ($namespace) {\n                        $class->setNamespaceName(null);\n                    }\n                    $output .= $class->generate() . self::LINE_FEED;\n                }\n            }\n        }\n\n        if (! empty($body)) {\n            // add an extra space between classes and\n            if (! empty($classes)) {\n                $output .= self::LINE_FEED;\n            }\n\n            $output .= $body;\n        }\n\n        return $output;\n    }\n\n    /**\n     * @return FileGenerator\n     * @throws Exception\\RuntimeException\n     */\n    public function write()\n    {\n        if ($this->filename == '' || ! is_writable(dirname($this->filename))) {\n            throw new Exception\\RuntimeException('This code generator object is not writable.');\n        }\n        file_put_contents($this->filename, $this->generate());\n\n        return $this;\n    }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- vendor/laminas/laminas-code/src/Generator/FileGenerator.php	(revision a449d8a584af7c2722ad0d48f553c0917ddead6e)
+++ vendor/laminas/laminas-code/src/Generator/FileGenerator.php	(date 1605132687000)
@@ -10,6 +10,7 @@
 
 use Laminas\Code\DeclareStatement;
 use Laminas\Code\Exception\InvalidArgumentException;
+use Laminas\Code\Generator\Exception\ClassNotFoundException;
 use Laminas\Code\Reflection\Exception as ReflectionException;
 use Laminas\Code\Reflection\FileReflection;
 
@@ -335,18 +336,28 @@
     }
 
     /**
-     * @param  string $name
+     * @param string $name
+     *
      * @return ClassGenerator
+     * @throws ClassNotFoundException
      */
     public function getClass($name = null)
     {
         if ($name === null) {
             reset($this->classes);
+            $class = current($this->classes);
+            if (false === $class) {
+                throw new ClassNotFoundException('No class is set');
+            }
 
-            return current($this->classes);
+            return $class;
+        }
+
+        if (false === array_key_exists($name, $this->classes)) {
+            throw new ClassNotFoundException(sprintf('Class %s is not set', $name));
         }
 
-        return $this->classes[(string) $name];
+        return $this->classes[(string)$name];
     }
 
     /**
Index: vendor/doctrine/instantiator/phpstan.neon.dist
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>includes:\n    - vendor/phpstan/phpstan-phpunit/extension.neon\n    - vendor/phpstan/phpstan-phpunit/rules.neon\n\nparameters:\n    level: max\n    paths:\n        - src\n        - tests\n\n    ignoreErrors:\n        -\n            message: '#::__construct\\(\\) does not call parent constructor from#'\n            path: '*/tests/DoctrineTest/InstantiatorTestAsset/*.php'\n\n        # dynamic properties confuse static analysis\n        -\n            message: '#Access to an undefined property object::\\$foo\\.#'\n            path: '*/tests/DoctrineTest/InstantiatorTest/InstantiatorTest.php'\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- vendor/doctrine/instantiator/phpstan.neon.dist	(revision a449d8a584af7c2722ad0d48f553c0917ddead6e)
+++ vendor/doctrine/instantiator/phpstan.neon.dist	(date 1605034078000)
@@ -9,10 +9,6 @@
         - tests
 
     ignoreErrors:
-        -
-            message: '#::__construct\(\) does not call parent constructor from#'
-            path: '*/tests/DoctrineTest/InstantiatorTestAsset/*.php'
-
         # dynamic properties confuse static analysis
         -
             message: '#Access to an undefined property object::\$foo\.#'
Index: vendor/doctrine/instantiator/phpcs.xml.dist
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\"?>\n<ruleset>\n    <arg name=\"basepath\" value=\".\"/>\n    <arg name=\"extensions\" value=\"php\"/>\n    <arg name=\"parallel\" value=\"80\"/>\n    <arg name=\"cache\" value=\".phpcs-cache\"/>\n    <arg name=\"colors\"/>\n\n    <!-- Ignore warnings, show progress of the run and show sniff names -->\n    <arg value=\"nps\"/>\n\n    <file>src</file>\n    <file>tests</file>\n\n    <rule ref=\"Doctrine\">\n        <exclude name=\"SlevomatCodingStandard.TypeHints.DeclareStrictTypes\"/>\n        <exclude name=\"SlevomatCodingStandard.TypeHints.TypeHintDeclaration.MissingParameterTypeHint\"/>\n        <exclude name=\"SlevomatCodingStandard.TypeHints.TypeHintDeclaration.MissingReturnTypeHint\"/>\n        <exclude name=\"SlevomatCodingStandard.Exceptions.ReferenceThrowableOnly.ReferencedGeneralException\"/>\n    </rule>\n\n    <rule ref=\"SlevomatCodingStandard.Classes.SuperfluousAbstractClassNaming\">\n        <exclude-pattern>tests/DoctrineTest/InstantiatorTestAsset/AbstractClassAsset.php</exclude-pattern>\n    </rule>\n\n    <rule ref=\"SlevomatCodingStandard.Classes.SuperfluousExceptionNaming\">\n        <exclude-pattern>src/Doctrine/Instantiator/Exception/UnexpectedValueException.php</exclude-pattern>\n        <exclude-pattern>src/Doctrine/Instantiator/Exception/InvalidArgumentException.php</exclude-pattern>\n    </rule>\n\n    <rule ref=\"SlevomatCodingStandard.Classes.SuperfluousInterfaceNaming\">\n        <exclude-pattern>src/Doctrine/Instantiator/Exception/ExceptionInterface.php</exclude-pattern>\n        <exclude-pattern>src/Doctrine/Instantiator/InstantiatorInterface.php</exclude-pattern>\n    </rule>\n</ruleset>\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- vendor/doctrine/instantiator/phpcs.xml.dist	(revision a449d8a584af7c2722ad0d48f553c0917ddead6e)
+++ vendor/doctrine/instantiator/phpcs.xml.dist	(date 1605034078000)
@@ -19,6 +19,21 @@
         <exclude name="SlevomatCodingStandard.Exceptions.ReferenceThrowableOnly.ReferencedGeneralException"/>
     </rule>
 
+    <!-- Disable the rules that will require PHP 7.4 -->
+    <rule ref="SlevomatCodingStandard.TypeHints.PropertyTypeHint">
+        <properties>
+            <property name="enableNativeTypeHint" value="false"/>
+        </properties>
+    </rule>
+
+    <rule ref="SlevomatCodingStandard.TypeHints.ParameterTypeHint.MissingNativeTypeHint">
+        <exclude-pattern>*/src/*</exclude-pattern>
+    </rule>
+
+    <rule ref="SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint">
+        <exclude-pattern>*/src/*</exclude-pattern>
+    </rule>
+
     <rule ref="SlevomatCodingStandard.Classes.SuperfluousAbstractClassNaming">
         <exclude-pattern>tests/DoctrineTest/InstantiatorTestAsset/AbstractClassAsset.php</exclude-pattern>
     </rule>
Index: vendor/doctrine/instantiator/README.md
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+># Instantiator\n\nThis library provides a way of avoiding usage of constructors when instantiating PHP classes.\n\n[![Build Status](https://travis-ci.org/doctrine/instantiator.svg?branch=master)](https://travis-ci.org/doctrine/instantiator)\n[![Code Coverage](https://scrutinizer-ci.com/g/doctrine/instantiator/badges/coverage.png?b=master)](https://scrutinizer-ci.com/g/doctrine/instantiator/?branch=master)\n[![Scrutinizer Code Quality](https://scrutinizer-ci.com/g/doctrine/instantiator/badges/quality-score.png?b=master)](https://scrutinizer-ci.com/g/doctrine/instantiator/?branch=master)\n[![Dependency Status](https://www.versioneye.com/package/php--doctrine--instantiator/badge.svg)](https://www.versioneye.com/package/php--doctrine--instantiator)\n\n[![Latest Stable Version](https://poser.pugx.org/doctrine/instantiator/v/stable.png)](https://packagist.org/packages/doctrine/instantiator)\n[![Latest Unstable Version](https://poser.pugx.org/doctrine/instantiator/v/unstable.png)](https://packagist.org/packages/doctrine/instantiator)\n\n## Installation\n\nThe suggested installation method is via [composer](https://getcomposer.org/):\n\n```sh\nphp composer.phar require \"doctrine/instantiator:~1.0.3\"\n```\n\n## Usage\n\nThe instantiator is able to create new instances of any class without using the constructor or any API of the class\nitself:\n\n```php\n$instantiator = new \\Doctrine\\Instantiator\\Instantiator();\n\n$instance = $instantiator->instantiate(\\My\\ClassName\\Here::class);\n```\n\n## Contributing\n\nPlease read the [CONTRIBUTING.md](CONTRIBUTING.md) contents if you wish to help out!\n\n## Credits\n\nThis library was migrated from [ocramius/instantiator](https://github.com/Ocramius/Instantiator), which\nhas been donated to the doctrine organization, and which is now deprecated in favour of this package.\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- vendor/doctrine/instantiator/README.md	(revision a449d8a584af7c2722ad0d48f553c0917ddead6e)
+++ vendor/doctrine/instantiator/README.md	(date 1605034078000)
@@ -3,8 +3,7 @@
 This library provides a way of avoiding usage of constructors when instantiating PHP classes.
 
 [![Build Status](https://travis-ci.org/doctrine/instantiator.svg?branch=master)](https://travis-ci.org/doctrine/instantiator)
-[![Code Coverage](https://scrutinizer-ci.com/g/doctrine/instantiator/badges/coverage.png?b=master)](https://scrutinizer-ci.com/g/doctrine/instantiator/?branch=master)
-[![Scrutinizer Code Quality](https://scrutinizer-ci.com/g/doctrine/instantiator/badges/quality-score.png?b=master)](https://scrutinizer-ci.com/g/doctrine/instantiator/?branch=master)
+[![Code Coverage](https://codecov.io/gh/doctrine/instantiator/branch/master/graph/badge.svg)](https://codecov.io/gh/doctrine/instantiator/branch/master)
 [![Dependency Status](https://www.versioneye.com/package/php--doctrine--instantiator/badge.svg)](https://www.versioneye.com/package/php--doctrine--instantiator)
 
 [![Latest Stable Version](https://poser.pugx.org/doctrine/instantiator/v/stable.png)](https://packagist.org/packages/doctrine/instantiator)
Index: vendor/doctrine/instantiator/composer.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>{\n    \"name\":              \"doctrine/instantiator\",\n    \"description\":       \"A small, lightweight utility to instantiate objects in PHP without invoking their constructors\",\n    \"type\":              \"library\",\n    \"license\":           \"MIT\",\n    \"homepage\":          \"https://www.doctrine-project.org/projects/instantiator.html\",\n    \"keywords\":          [\n        \"instantiate\",\n        \"constructor\"\n    ],\n    \"authors\": [\n        {\n            \"name\":     \"Marco Pivetta\",\n            \"email\":    \"ocramius@gmail.com\",\n            \"homepage\": \"http://ocramius.github.com/\"\n        }\n    ],\n    \"config\": {\n        \"platform\": {\n            \"php\": \"7.1.27\"\n        }\n    },\n    \"require\": {\n        \"php\": \"^7.1 || ^8.0\"\n    },\n    \"require-dev\": {\n        \"ext-phar\":                  \"*\",\n        \"ext-pdo\":                   \"*\",\n        \"doctrine/coding-standard\":  \"^6.0\",\n        \"phpbench/phpbench\":         \"^0.13\",\n        \"phpstan/phpstan-phpunit\":   \"^0.11\",\n        \"phpstan/phpstan-shim\":      \"^0.11\",\n        \"phpunit/phpunit\":           \"^7.0\"\n    },\n    \"autoload\": {\n        \"psr-4\": {\n            \"Doctrine\\\\Instantiator\\\\\": \"src/Doctrine/Instantiator/\"\n        }\n    },\n    \"autoload-dev\": {\n        \"psr-0\": {\n            \"DoctrineTest\\\\InstantiatorPerformance\\\\\": \"tests\",\n            \"DoctrineTest\\\\InstantiatorTest\\\\\": \"tests\",\n            \"DoctrineTest\\\\InstantiatorTestAsset\\\\\": \"tests\"\n        }\n    },\n    \"extra\": {\n        \"branch-alias\": {\n            \"dev-master\": \"1.2.x-dev\"\n        }\n    }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- vendor/doctrine/instantiator/composer.json	(revision a449d8a584af7c2722ad0d48f553c0917ddead6e)
+++ vendor/doctrine/instantiator/composer.json	(date 1605034078000)
@@ -12,25 +12,20 @@
         {
             "name":     "Marco Pivetta",
             "email":    "ocramius@gmail.com",
-            "homepage": "http://ocramius.github.com/"
+            "homepage": "https://ocramius.github.io/"
         }
     ],
-    "config": {
-        "platform": {
-            "php": "7.1.27"
-        }
-    },
     "require": {
         "php": "^7.1 || ^8.0"
     },
     "require-dev": {
         "ext-phar":                  "*",
         "ext-pdo":                   "*",
-        "doctrine/coding-standard":  "^6.0",
-        "phpbench/phpbench":         "^0.13",
-        "phpstan/phpstan-phpunit":   "^0.11",
-        "phpstan/phpstan-shim":      "^0.11",
-        "phpunit/phpunit":           "^7.0"
+        "doctrine/coding-standard":  "^8.0",
+        "phpbench/phpbench":         "^0.13 || 1.0.0-alpha2",
+        "phpstan/phpstan":           "^0.12",
+        "phpstan/phpstan-phpunit":   "^0.12",
+        "phpunit/phpunit":           "^7.0 || ^8.0 || ^9.0"
     },
     "autoload": {
         "psr-4": {
@@ -43,10 +38,5 @@
             "DoctrineTest\\InstantiatorTest\\": "tests",
             "DoctrineTest\\InstantiatorTestAsset\\": "tests"
         }
-    },
-    "extra": {
-        "branch-alias": {
-            "dev-master": "1.2.x-dev"
-        }
     }
 }
Index: vendor/doctrine/instantiator/.doctrine-project.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>{\n    \"active\": true,\n    \"name\": \"Instantiator\",\n    \"slug\": \"instantiator\",\n    \"docsSlug\": \"doctrine-instantiator\",\n    \"codePath\": \"/src\",\n    \"versions\": [\n        {\n            \"name\": \"1.1\",\n            \"branchName\": \"master\",\n            \"slug\": \"latest\",\n            \"aliases\": [\n                \"current\",\n                \"stable\"\n            ],\n            \"maintained\": true,\n            \"current\": true\n        },\n        {\n            \"name\": \"1.0\",\n            \"branchName\": \"1.0.x\",\n            \"slug\": \"1.0\"\n        }\n    ]\n}\n\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- vendor/doctrine/instantiator/.doctrine-project.json	(revision a449d8a584af7c2722ad0d48f553c0917ddead6e)
+++ vendor/doctrine/instantiator/.doctrine-project.json	(date 1605034078000)
@@ -6,9 +6,15 @@
     "codePath": "/src",
     "versions": [
         {
-            "name": "1.1",
+            "name": "1.4",
             "branchName": "master",
             "slug": "latest",
+            "upcoming": true
+        },
+        {
+            "name": "1.3",
+            "branchName": "1.3.x",
+            "slug": "1.3",
             "aliases": [
                 "current",
                 "stable"
@@ -17,10 +23,19 @@
             "current": true
         },
         {
+            "name": "1.2",
+            "branchName": "1.2.x",
+            "slug": "1.2"
+        },
+        {
+            "name": "1.1",
+            "branchName": "1.1.x",
+            "slug": "1.1"
+        },
+        {
             "name": "1.0",
             "branchName": "1.0.x",
             "slug": "1.0"
         }
     ]
 }
-
Index: vendor/egulias/email-validator/src/EmailLexer.php
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?php\n\nnamespace Egulias\\EmailValidator;\n\nuse Doctrine\\Common\\Lexer\\AbstractLexer;\n\nclass EmailLexer extends AbstractLexer\n{\n    //ASCII values\n    const C_DEL              = 127;\n    const C_NUL              = 0;\n    const S_AT               = 64;\n    const S_BACKSLASH        = 92;\n    const S_DOT              = 46;\n    const S_DQUOTE           = 34;\n    const S_SQUOTE           = 39;\n    const S_OPENPARENTHESIS  = 49;\n    const S_CLOSEPARENTHESIS = 261;\n    const S_OPENBRACKET      = 262;\n    const S_CLOSEBRACKET     = 263;\n    const S_HYPHEN           = 264;\n    const S_COLON            = 265;\n    const S_DOUBLECOLON      = 266;\n    const S_SP               = 267;\n    const S_HTAB             = 268;\n    const S_CR               = 269;\n    const S_LF               = 270;\n    const S_IPV6TAG          = 271;\n    const S_LOWERTHAN        = 272;\n    const S_GREATERTHAN      = 273;\n    const S_COMMA            = 274;\n    const S_SEMICOLON        = 275;\n    const S_OPENQBRACKET     = 276;\n    const S_CLOSEQBRACKET    = 277;\n    const S_SLASH            = 278;\n    const S_EMPTY            = null;\n    const GENERIC            = 300;\n    const CRLF               = 301;\n    const INVALID            = 302;\n    const ASCII_INVALID_FROM = 127;\n    const ASCII_INVALID_TO   = 199;\n\n    /**\n     * US-ASCII visible characters not valid for atext (@link http://tools.ietf.org/html/rfc5322#section-3.2.3)\n     *\n     * @var array\n     */\n    protected $charValue = array(\n        '('    => self::S_OPENPARENTHESIS,\n        ')'    => self::S_CLOSEPARENTHESIS,\n        '<'    => self::S_LOWERTHAN,\n        '>'    => self::S_GREATERTHAN,\n        '['    => self::S_OPENBRACKET,\n        ']'    => self::S_CLOSEBRACKET,\n        ':'    => self::S_COLON,\n        ';'    => self::S_SEMICOLON,\n        '@'    => self::S_AT,\n        '\\\\'   => self::S_BACKSLASH,\n        '/'    => self::S_SLASH,\n        ','    => self::S_COMMA,\n        '.'    => self::S_DOT,\n        \"'\"    => self::S_SQUOTE,\n        '\"'    => self::S_DQUOTE,\n        '-'    => self::S_HYPHEN,\n        '::'   => self::S_DOUBLECOLON,\n        ' '    => self::S_SP,\n        \"\\t\"   => self::S_HTAB,\n        \"\\r\"   => self::S_CR,\n        \"\\n\"   => self::S_LF,\n        \"\\r\\n\" => self::CRLF,\n        'IPv6' => self::S_IPV6TAG,\n        '{'    => self::S_OPENQBRACKET,\n        '}'    => self::S_CLOSEQBRACKET,\n        ''     => self::S_EMPTY,\n        '\\0'   => self::C_NUL,\n    );\n\n    /**\n     * @var bool\n     */\n    protected $hasInvalidTokens = false;\n\n    /**\n     * @var array\n     *\n     * @psalm-var array{value:string, type:null|int, position:int}|array<empty, empty>\n     */\n    protected $previous = [];\n\n    /**\n     * The last matched/seen token.\n     *\n     * @var array\n     *\n     * @psalm-var array{value:string, type:null|int, position:int}\n     */\n    public $token;\n\n    /**\n     * The next token in the input.\n     *\n     * @var array|null\n     */\n    public $lookahead;\n\n    /**\n     * @psalm-var array{value:'', type:null, position:0}\n     */\n    private static $nullToken = [\n        'value' => '',\n        'type' => null,\n        'position' => 0,\n    ];\n\n    public function __construct()\n    {\n        $this->previous = $this->token = self::$nullToken;\n        $this->lookahead = null;\n    }\n\n    /**\n     * @return void\n     */\n    public function reset()\n    {\n        $this->hasInvalidTokens = false;\n        parent::reset();\n        $this->previous = $this->token = self::$nullToken;\n    }\n\n    /**\n     * @return bool\n     */\n    public function hasInvalidTokens()\n    {\n        return $this->hasInvalidTokens;\n    }\n\n    /**\n     * @param int $type\n     * @throws \\UnexpectedValueException\n     * @return boolean\n     *\n     * @psalm-suppress InvalidScalarArgument\n     */\n    public function find($type)\n    {\n        $search = clone $this;\n        $search->skipUntil($type);\n\n        if (!$search->lookahead) {\n            throw new \\UnexpectedValueException($type . ' not found');\n        }\n        return true;\n    }\n\n    /**\n     * getPrevious\n     *\n     * @return array\n     */\n    public function getPrevious()\n    {\n        return $this->previous;\n    }\n\n    /**\n     * moveNext\n     *\n     * @return boolean\n     */\n    public function moveNext()\n    {\n        $this->previous = $this->token;\n        $hasNext = parent::moveNext();\n        $this->token = $this->token ?: self::$nullToken;\n\n        return $hasNext;\n    }\n\n    /**\n     * Lexical catchable patterns.\n     *\n     * @return string[]\n     */\n    protected function getCatchablePatterns()\n    {\n        return array(\n            '[a-zA-Z_]+[46]?', //ASCII and domain literal\n            '[^\\x00-\\x7F]',  //UTF-8\n            '[0-9]+',\n            '\\r\\n',\n            '::',\n            '\\s+?',\n            '.',\n            );\n    }\n\n    /**\n     * Lexical non-catchable patterns.\n     *\n     * @return string[]\n     */\n    protected function getNonCatchablePatterns()\n    {\n        return array('[\\xA0-\\xff]+');\n    }\n\n    /**\n     * Retrieve token type. Also processes the token value if necessary.\n     *\n     * @param string $value\n     * @throws \\InvalidArgumentException\n     * @return integer\n     */\n    protected function getType(&$value)\n    {\n        if ($this->isNullType($value)) {\n            return self::C_NUL;\n        }\n\n        if ($this->isValid($value)) {\n            return $this->charValue[$value];\n        }\n\n        if ($this->isUTF8Invalid($value)) {\n            $this->hasInvalidTokens = true;\n            return self::INVALID;\n        }\n\n        return  self::GENERIC;\n    }\n\n    /**\n     * @param string $value\n     *\n     * @return bool\n     */\n    protected function isValid($value)\n    {\n        if (isset($this->charValue[$value])) {\n            return true;\n        }\n\n        return false;\n    }\n\n    /**\n     * @param string $value\n     * @return bool\n     */\n    protected function isNullType($value)\n    {\n        if ($value === \"\\0\") {\n            return true;\n        }\n\n        return false;\n    }\n\n    /**\n     * @param string $value\n     * @return bool\n     */\n    protected function isUTF8Invalid($value)\n    {\n        if (preg_match('/\\p{Cc}+/u', $value)) {\n            return true;\n        }\n\n        return false;\n    }\n\n    /**\n     * @return string\n     */\n    protected function getModifiers()\n    {\n        return 'iu';\n    }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- vendor/egulias/email-validator/src/EmailLexer.php	(revision a449d8a584af7c2722ad0d48f553c0917ddead6e)
+++ vendor/egulias/email-validator/src/EmailLexer.php	(date 1605369387000)
@@ -14,6 +14,7 @@
     const S_DOT              = 46;
     const S_DQUOTE           = 34;
     const S_SQUOTE           = 39;
+    const S_BACKTICK         = 96;
     const S_OPENPARENTHESIS  = 49;
     const S_CLOSEPARENTHESIS = 261;
     const S_OPENBRACKET      = 262;
@@ -60,6 +61,7 @@
         ','    => self::S_COMMA,
         '.'    => self::S_DOT,
         "'"    => self::S_SQUOTE,
+        "`"    => self::S_BACKTICK,
         '"'    => self::S_DQUOTE,
         '-'    => self::S_HYPHEN,
         '::'   => self::S_DOUBLECOLON,
Index: vendor/laminas/laminas-code/COPYRIGHT.md
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>Copyright (c) 2019, Laminas Foundation.\nAll rights reserved. (https://getlaminas.org/)\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- vendor/laminas/laminas-code/COPYRIGHT.md	(revision a449d8a584af7c2722ad0d48f553c0917ddead6e)
+++ vendor/laminas/laminas-code/COPYRIGHT.md	(date 1605132687000)
@@ -1,2 +1,1 @@
-Copyright (c) 2019, Laminas Foundation.
-All rights reserved. (https://getlaminas.org/)
+Copyright (c) 2020 Laminas Project a Series of LF Projects, LLC. (https://getlaminas.org/)
Index: vendor/laminas/laminas-code/composer.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>{\n    \"name\": \"laminas/laminas-code\",\n    \"description\": \"Extensions to the PHP Reflection API, static code scanning, and code generation\",\n    \"license\": \"BSD-3-Clause\",\n    \"keywords\": [\n        \"laminas\",\n        \"code\"\n    ],\n    \"homepage\": \"https://laminas.dev\",\n    \"support\": {\n        \"docs\": \"https://docs.laminas.dev/laminas-code/\",\n        \"issues\": \"https://github.com/laminas/laminas-code/issues\",\n        \"source\": \"https://github.com/laminas/laminas-code\",\n        \"rss\": \"https://github.com/laminas/laminas-code/releases.atom\",\n        \"chat\": \"https://laminas.dev/chat\",\n        \"forum\": \"https://discourse.laminas.dev\"\n    },\n    \"config\": {\n        \"sort-packages\": true\n    },\n    \"extra\": {\n        \"branch-alias\": {\n            \"dev-master\": \"3.4.x-dev\",\n            \"dev-develop\": \"3.5.x-dev\",\n            \"dev-dev-4.0\": \"4.0.x-dev\"\n        }\n    },\n    \"require\": {\n        \"php\": \"^7.1\",\n        \"laminas/laminas-eventmanager\": \"^2.6 || ^3.0\",\n        \"laminas/laminas-zendframework-bridge\": \"^1.0\"\n    },\n    \"require-dev\": {\n        \"ext-phar\": \"*\",\n        \"doctrine/annotations\": \"^1.7\",\n        \"laminas/laminas-coding-standard\": \"^1.0\",\n        \"laminas/laminas-stdlib\": \"^2.7 || ^3.0\",\n        \"phpunit/phpunit\": \"^7.5.16 || ^8.4\"\n    },\n    \"conflict\": {\n        \"phpspec/prophecy\": \"<1.9.0\"\n    },\n    \"suggest\": {\n        \"doctrine/annotations\": \"Doctrine\\\\Common\\\\Annotations >=1.0 for annotation features\",\n        \"laminas/laminas-stdlib\": \"Laminas\\\\Stdlib component\"\n    },\n    \"autoload\": {\n        \"psr-4\": {\n            \"Laminas\\\\Code\\\\\": \"src/\"\n        }\n    },\n    \"autoload-dev\": {\n        \"psr-4\": {\n            \"LaminasTest\\\\Code\\\\\": \"test/\"\n        }\n    },\n    \"scripts\": {\n        \"check\": [\n            \"@cs-check\",\n            \"@test\"\n        ],\n        \"cs-check\": \"phpcs\",\n        \"cs-fix\": \"phpcbf\",\n        \"test\": \"phpunit --colors=always\",\n        \"test-coverage\": \"phpunit --colors=always --coverage-clover clover.xml\"\n    },\n    \"replace\": {\n        \"zendframework/zend-code\": \"self.version\"\n    }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- vendor/laminas/laminas-code/composer.json	(revision a449d8a584af7c2722ad0d48f553c0917ddead6e)
+++ vendor/laminas/laminas-code/composer.json	(date 1605132687000)
@@ -19,23 +19,18 @@
         "sort-packages": true
     },
     "extra": {
-        "branch-alias": {
-            "dev-master": "3.4.x-dev",
-            "dev-develop": "3.5.x-dev",
-            "dev-dev-4.0": "4.0.x-dev"
-        }
     },
     "require": {
-        "php": "^7.1",
-        "laminas/laminas-eventmanager": "^2.6 || ^3.0",
-        "laminas/laminas-zendframework-bridge": "^1.0"
+        "php": "^7.3 || ~8.0.0",
+        "laminas/laminas-eventmanager": "^3.3",
+        "laminas/laminas-zendframework-bridge": "^1.1"
     },
     "require-dev": {
         "ext-phar": "*",
-        "doctrine/annotations": "^1.7",
-        "laminas/laminas-coding-standard": "^1.0",
-        "laminas/laminas-stdlib": "^2.7 || ^3.0",
-        "phpunit/phpunit": "^7.5.16 || ^8.4"
+        "doctrine/annotations": "^1.10.4",
+        "laminas/laminas-coding-standard": "^1.0.0",
+        "laminas/laminas-stdlib": "^3.3.0",
+        "phpunit/phpunit": "^9.4.2"
     },
     "conflict": {
         "phpspec/prophecy": "<1.9.0"
@@ -65,6 +60,6 @@
         "test-coverage": "phpunit --colors=always --coverage-clover clover.xml"
     },
     "replace": {
-        "zendframework/zend-code": "self.version"
+        "zendframework/zend-code": "^3.4.1"
     }
 }
Index: vendor/egulias/email-validator/src/Parser/DomainPart.php
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?php\n\nnamespace Egulias\\EmailValidator\\Parser;\n\nuse Egulias\\EmailValidator\\EmailLexer;\nuse Egulias\\EmailValidator\\Exception\\CharNotAllowed;\nuse Egulias\\EmailValidator\\Exception\\CommaInDomain;\nuse Egulias\\EmailValidator\\Exception\\ConsecutiveAt;\nuse Egulias\\EmailValidator\\Exception\\CRLFAtTheEnd;\nuse Egulias\\EmailValidator\\Exception\\CRNoLF;\nuse Egulias\\EmailValidator\\Exception\\DomainHyphened;\nuse Egulias\\EmailValidator\\Exception\\DotAtEnd;\nuse Egulias\\EmailValidator\\Exception\\DotAtStart;\nuse Egulias\\EmailValidator\\Exception\\ExpectingATEXT;\nuse Egulias\\EmailValidator\\Exception\\ExpectingDomainLiteralClose;\nuse Egulias\\EmailValidator\\Exception\\ExpectingDTEXT;\nuse Egulias\\EmailValidator\\Exception\\NoDomainPart;\nuse Egulias\\EmailValidator\\Exception\\UnopenedComment;\nuse Egulias\\EmailValidator\\Warning\\AddressLiteral;\nuse Egulias\\EmailValidator\\Warning\\CFWSWithFWS;\nuse Egulias\\EmailValidator\\Warning\\DeprecatedComment;\nuse Egulias\\EmailValidator\\Warning\\DomainLiteral;\nuse Egulias\\EmailValidator\\Warning\\DomainTooLong;\nuse Egulias\\EmailValidator\\Warning\\IPV6BadChar;\nuse Egulias\\EmailValidator\\Warning\\IPV6ColonEnd;\nuse Egulias\\EmailValidator\\Warning\\IPV6ColonStart;\nuse Egulias\\EmailValidator\\Warning\\IPV6Deprecated;\nuse Egulias\\EmailValidator\\Warning\\IPV6DoubleColon;\nuse Egulias\\EmailValidator\\Warning\\IPV6GroupCount;\nuse Egulias\\EmailValidator\\Warning\\IPV6MaxGroups;\nuse Egulias\\EmailValidator\\Warning\\LabelTooLong;\nuse Egulias\\EmailValidator\\Warning\\ObsoleteDTEXT;\nuse Egulias\\EmailValidator\\Warning\\TLD;\n\nclass DomainPart extends Parser\n{\n    const DOMAIN_MAX_LENGTH = 254;\n\n    /**\n     * @var string\n     */\n    protected $domainPart = '';\n\n    public function parse($domainPart)\n    {\n        $this->lexer->moveNext();\n\n        $this->performDomainStartChecks();\n\n        $domain = $this->doParseDomainPart();\n\n        $prev = $this->lexer->getPrevious();\n        $length = strlen($domain);\n\n        if ($prev['type'] === EmailLexer::S_DOT) {\n            throw new DotAtEnd();\n        }\n        if ($prev['type'] === EmailLexer::S_HYPHEN) {\n            throw new DomainHyphened();\n        }\n        if ($length > self::DOMAIN_MAX_LENGTH) {\n            $this->warnings[DomainTooLong::CODE] = new DomainTooLong();\n        }\n        if ($prev['type'] === EmailLexer::S_CR) {\n            throw new CRLFAtTheEnd();\n        }\n        $this->domainPart = $domain;\n    }\n\n    private function performDomainStartChecks()\n    {\n        $this->checkInvalidTokensAfterAT();\n        $this->checkEmptyDomain();\n\n        if ($this->lexer->token['type'] === EmailLexer::S_OPENPARENTHESIS) {\n            $this->warnings[DeprecatedComment::CODE] = new DeprecatedComment();\n            $this->parseDomainComments();\n        }\n    }\n\n    private function checkEmptyDomain()\n    {\n        $thereIsNoDomain = $this->lexer->token['type'] === EmailLexer::S_EMPTY ||\n            ($this->lexer->token['type'] === EmailLexer::S_SP &&\n            !$this->lexer->isNextToken(EmailLexer::GENERIC));\n\n        if ($thereIsNoDomain) {\n            throw new NoDomainPart();\n        }\n    }\n\n    private function checkInvalidTokensAfterAT()\n    {\n        if ($this->lexer->token['type'] === EmailLexer::S_DOT) {\n            throw new DotAtStart();\n        }\n        if ($this->lexer->token['type'] === EmailLexer::S_HYPHEN) {\n            throw new DomainHyphened();\n        }\n    }\n\n    /**\n     * @return string\n     */\n    public function getDomainPart()\n    {\n        return $this->domainPart;\n    }\n\n    /**\n     * @param string $addressLiteral\n     * @param int $maxGroups\n     */\n    public function checkIPV6Tag($addressLiteral, $maxGroups = 8)\n    {\n        $prev = $this->lexer->getPrevious();\n        if ($prev['type'] === EmailLexer::S_COLON) {\n            $this->warnings[IPV6ColonEnd::CODE] = new IPV6ColonEnd();\n        }\n\n        $IPv6       = substr($addressLiteral, 5);\n        //Daniel Marschall's new IPv6 testing strategy\n        $matchesIP  = explode(':', $IPv6);\n        $groupCount = count($matchesIP);\n        $colons     = strpos($IPv6, '::');\n\n        if (count(preg_grep('/^[0-9A-Fa-f]{0,4}$/', $matchesIP, PREG_GREP_INVERT)) !== 0) {\n            $this->warnings[IPV6BadChar::CODE] = new IPV6BadChar();\n        }\n\n        if ($colons === false) {\n            // We need exactly the right number of groups\n            if ($groupCount !== $maxGroups) {\n                $this->warnings[IPV6GroupCount::CODE] = new IPV6GroupCount();\n            }\n            return;\n        }\n\n        if ($colons !== strrpos($IPv6, '::')) {\n            $this->warnings[IPV6DoubleColon::CODE] = new IPV6DoubleColon();\n            return;\n        }\n\n        if ($colons === 0 || $colons === (strlen($IPv6) - 2)) {\n            // RFC 4291 allows :: at the start or end of an address\n            //with 7 other groups in addition\n            ++$maxGroups;\n        }\n\n        if ($groupCount > $maxGroups) {\n            $this->warnings[IPV6MaxGroups::CODE] = new IPV6MaxGroups();\n        } elseif ($groupCount === $maxGroups) {\n            $this->warnings[IPV6Deprecated::CODE] = new IPV6Deprecated();\n        }\n    }\n\n    /**\n     * @return string\n     */\n    protected function doParseDomainPart()\n    {\n        $domain = '';\n        $openedParenthesis = 0;\n        do {\n            $prev = $this->lexer->getPrevious();\n\n            $this->checkNotAllowedChars($this->lexer->token);\n\n            if ($this->lexer->token['type'] === EmailLexer::S_OPENPARENTHESIS) {\n                $this->parseComments();\n                $openedParenthesis += $this->getOpenedParenthesis();\n                $this->lexer->moveNext();\n                $tmpPrev = $this->lexer->getPrevious();\n                if ($tmpPrev['type'] === EmailLexer::S_CLOSEPARENTHESIS) {\n                    $openedParenthesis--;\n                }\n            }\n            if ($this->lexer->token['type'] === EmailLexer::S_CLOSEPARENTHESIS) {\n                if ($openedParenthesis === 0) {\n                    throw new UnopenedComment();\n                } else {\n                    $openedParenthesis--;\n                }\n            }\n\n            $this->checkConsecutiveDots();\n            $this->checkDomainPartExceptions($prev);\n\n            if ($this->hasBrackets()) {\n                $this->parseDomainLiteral();\n            }\n\n            $this->checkLabelLength($prev);\n\n            if ($this->isFWS()) {\n                $this->parseFWS();\n            }\n\n            $domain .= $this->lexer->token['value'];\n            $this->lexer->moveNext();\n            if ($this->lexer->token['type'] === EmailLexer::S_SP) {\n                throw new CharNotAllowed();\n            }\n        } while (null !== $this->lexer->token['type']);\n\n        return $domain;\n    }\n\n    private function checkNotAllowedChars(array $token)\n    {\n        $notAllowed = [EmailLexer::S_BACKSLASH => true, EmailLexer::S_SLASH=> true];\n        if (isset($notAllowed[$token['type']])) {\n            throw new CharNotAllowed();\n        }\n    }\n\n    /**\n     * @return string|false\n     */\n    protected function parseDomainLiteral()\n    {\n        if ($this->lexer->isNextToken(EmailLexer::S_COLON)) {\n            $this->warnings[IPV6ColonStart::CODE] = new IPV6ColonStart();\n        }\n        if ($this->lexer->isNextToken(EmailLexer::S_IPV6TAG)) {\n            $lexer = clone $this->lexer;\n            $lexer->moveNext();\n            if ($lexer->isNextToken(EmailLexer::S_DOUBLECOLON)) {\n                $this->warnings[IPV6ColonStart::CODE] = new IPV6ColonStart();\n            }\n        }\n\n        return $this->doParseDomainLiteral();\n    }\n\n    /**\n     * @return string|false\n     */\n    protected function doParseDomainLiteral()\n    {\n        $IPv6TAG = false;\n        $addressLiteral = '';\n        do {\n            if ($this->lexer->token['type'] === EmailLexer::C_NUL) {\n                throw new ExpectingDTEXT();\n            }\n\n            if ($this->lexer->token['type'] === EmailLexer::INVALID ||\n                $this->lexer->token['type'] === EmailLexer::C_DEL   ||\n                $this->lexer->token['type'] === EmailLexer::S_LF\n            ) {\n                $this->warnings[ObsoleteDTEXT::CODE] = new ObsoleteDTEXT();\n            }\n\n            if ($this->lexer->isNextTokenAny(array(EmailLexer::S_OPENQBRACKET, EmailLexer::S_OPENBRACKET))) {\n                throw new ExpectingDTEXT();\n            }\n\n            if ($this->lexer->isNextTokenAny(\n                array(EmailLexer::S_HTAB, EmailLexer::S_SP, $this->lexer->token['type'] === EmailLexer::CRLF)\n            )) {\n                $this->warnings[CFWSWithFWS::CODE] = new CFWSWithFWS();\n                $this->parseFWS();\n            }\n\n            if ($this->lexer->isNextToken(EmailLexer::S_CR)) {\n                throw new CRNoLF();\n            }\n\n            if ($this->lexer->token['type'] === EmailLexer::S_BACKSLASH) {\n                $this->warnings[ObsoleteDTEXT::CODE] = new ObsoleteDTEXT();\n                $addressLiteral .= $this->lexer->token['value'];\n                $this->lexer->moveNext();\n                $this->validateQuotedPair();\n            }\n            if ($this->lexer->token['type'] === EmailLexer::S_IPV6TAG) {\n                $IPv6TAG = true;\n            }\n            if ($this->lexer->token['type'] === EmailLexer::S_CLOSEQBRACKET) {\n                break;\n            }\n\n            $addressLiteral .= $this->lexer->token['value'];\n\n        } while ($this->lexer->moveNext());\n\n        $addressLiteral = str_replace('[', '', $addressLiteral);\n        $addressLiteral = $this->checkIPV4Tag($addressLiteral);\n\n        if (false === $addressLiteral) {\n            return $addressLiteral;\n        }\n\n        if (!$IPv6TAG) {\n            $this->warnings[DomainLiteral::CODE] = new DomainLiteral();\n            return $addressLiteral;\n        }\n\n        $this->warnings[AddressLiteral::CODE] = new AddressLiteral();\n\n        $this->checkIPV6Tag($addressLiteral);\n\n        return $addressLiteral;\n    }\n\n    /**\n     * @param string $addressLiteral\n     *\n     * @return string|false\n     */\n    protected function checkIPV4Tag($addressLiteral)\n    {\n        $matchesIP  = array();\n\n        // Extract IPv4 part from the end of the address-literal (if there is one)\n        if (preg_match(\n            '/\\\\b(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/',\n            $addressLiteral,\n            $matchesIP\n        ) > 0\n        ) {\n            $index = strrpos($addressLiteral, $matchesIP[0]);\n            if ($index === 0) {\n                $this->warnings[AddressLiteral::CODE] = new AddressLiteral();\n                return false;\n            }\n            // Convert IPv4 part to IPv6 format for further testing\n            $addressLiteral = substr($addressLiteral, 0, (int) $index) . '0:0';\n        }\n\n        return $addressLiteral;\n    }\n\n    protected function checkDomainPartExceptions(array $prev)\n    {\n        $invalidDomainTokens = array(\n            EmailLexer::S_DQUOTE => true,\n            EmailLexer::S_SQUOTE => true,\n            EmailLexer::S_SEMICOLON => true,\n            EmailLexer::S_GREATERTHAN => true,\n            EmailLexer::S_LOWERTHAN => true,\n        );\n\n        if (isset($invalidDomainTokens[$this->lexer->token['type']])) {\n            throw new ExpectingATEXT();\n        }\n\n        if ($this->lexer->token['type'] === EmailLexer::S_COMMA) {\n            throw new CommaInDomain();\n        }\n\n        if ($this->lexer->token['type'] === EmailLexer::S_AT) {\n            throw new ConsecutiveAt();\n        }\n\n        if ($this->lexer->token['type'] === EmailLexer::S_OPENQBRACKET && $prev['type'] !== EmailLexer::S_AT) {\n            throw new ExpectingATEXT();\n        }\n\n        if ($this->lexer->token['type'] === EmailLexer::S_HYPHEN && $this->lexer->isNextToken(EmailLexer::S_DOT)) {\n            throw new DomainHyphened();\n        }\n\n        if ($this->lexer->token['type'] === EmailLexer::S_BACKSLASH\n            && $this->lexer->isNextToken(EmailLexer::GENERIC)) {\n            throw new ExpectingATEXT();\n        }\n    }\n\n    /**\n     * @return bool\n     */\n    protected function hasBrackets()\n    {\n        if ($this->lexer->token['type'] !== EmailLexer::S_OPENBRACKET) {\n            return false;\n        }\n\n        try {\n            $this->lexer->find(EmailLexer::S_CLOSEBRACKET);\n        } catch (\\RuntimeException $e) {\n            throw new ExpectingDomainLiteralClose();\n        }\n\n        return true;\n    }\n\n    protected function checkLabelLength(array $prev)\n    {\n        if ($this->lexer->token['type'] === EmailLexer::S_DOT &&\n            $prev['type'] === EmailLexer::GENERIC &&\n            strlen($prev['value']) > 63\n        ) {\n            $this->warnings[LabelTooLong::CODE] = new LabelTooLong();\n        }\n    }\n\n    protected function parseDomainComments()\n    {\n        $this->isUnclosedComment();\n        while (!$this->lexer->isNextToken(EmailLexer::S_CLOSEPARENTHESIS)) {\n            $this->warnEscaping();\n            $this->lexer->moveNext();\n        }\n\n        $this->lexer->moveNext();\n        if ($this->lexer->isNextToken(EmailLexer::S_DOT)) {\n            throw new ExpectingATEXT();\n        }\n    }\n\n    protected function addTLDWarnings()\n    {\n        if ($this->warnings[DomainLiteral::CODE]) {\n            $this->warnings[TLD::CODE] = new TLD();\n        }\n    }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- vendor/egulias/email-validator/src/Parser/DomainPart.php	(revision a449d8a584af7c2722ad0d48f553c0917ddead6e)
+++ vendor/egulias/email-validator/src/Parser/DomainPart.php	(date 1605369387000)
@@ -336,6 +336,7 @@
         $invalidDomainTokens = array(
             EmailLexer::S_DQUOTE => true,
             EmailLexer::S_SQUOTE => true,
+            EmailLexer::S_BACKTICK => true,
             EmailLexer::S_SEMICOLON => true,
             EmailLexer::S_GREATERTHAN => true,
             EmailLexer::S_LOWERTHAN => true,
Index: vendor/laminas/laminas-code/CHANGELOG.md
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+># Changelog\n\nAll notable changes to this project will be documented in this file, in reverse chronological order by release.\n\n## 3.4.1 - 2019-12-10\n\n### Added\n\n- [zendframework/zend-code#180](https://github.com/zendframework/zend-code/pull/180) adds support for PHP 7.4.\n\n### Changed\n\n- Nothing.\n\n### Deprecated\n\n- Nothing.\n\n### Removed\n\n- Nothing.\n\n### Fixed\n\n- [zendframework/zend-code#179](https://github.com/zendframework/zend-code/pull/179) fixes exception message when invalid value provided in `Laminas\\Code\\Generator\\ValueGenerator`.\n\n- [zendframework/zend-code#180](https://github.com/zendframework/zend-code/pull/190) fixes PHP 7.4 compatibility.\n\n## 3.4.0 - 2019-10-06\n\n### Added\n\n- [zendframework/zend-code#170](https://github.com/zendframework/zend-code/pull/170) adds class constant visibility modifiers support.\n\n- [zendframework/zend-code#169](https://github.com/zendframework/zend-code/pull/169) adds the ability to define declare statements.\n\n- [zendframework/zend-code#167](https://github.com/zendframework/zend-code/pull/167) adds the ability to remove doc block of a member.\n\n### Changed\n\n- [zendframework/zend-code#166](https://github.com/zendframework/zend-code/pull/166) changes omitting default property value if it is null.\n\n### Deprecated\n\n- Nothing.\n\n### Removed\n\n- Nothing.\n\n### Fixed\n\n- [zendframework/zend-code#172](https://github.com/zendframework/zend-code/pull/172) fixes PHP 7.4 compatibility.\n\n## 3.3.2 - 2019-08-31\n\n### Added\n\n- [zendframework/zend-code#162](https://github.com/zendframework/zend-code/pull/162) adds support for PHP 7.3.\n\n### Changed\n\n- Nothing.\n\n### Deprecated\n\n- Nothing.\n\n### Removed\n\n- Nothing.\n\n### Fixed\n\n- [zendframework/zend-code#171](https://github.com/zendframework/zend-code/pull/171) changes\n  curly braces in array and string offset access to square brackets\n  in order to prevent issues under the upcoming PHP 7.4 release.\n\n- [zendframework/zend-code#164](https://github.com/zendframework/zend-code/pull/164) fixes indentation in multi-level arrays generated by `ValueGenerator`.\n\n## 3.3.1 - 2018-08-13\n\n### Added\n\n- Nothing.\n\n### Changed\n\n- Nothing.\n\n### Deprecated\n\n- Nothing.\n\n### Removed\n\n- Nothing.\n\n### Fixed\n\n- [zendframework/zend-code#158](https://github.com/zendframework/zend-code/pull/158) updates several `switch` cases to use `break` instead of `continue`\n  in order to prevent issues under the upcoming PHP 7.3 release.\n\n- [zendframework/zend-code#147](https://github.com/zendframework/zend-code/pull/147) fixes the regular expression used for `@var` annotations to\n  allow omission of the variable name.\n\n- [zendframework/zend-code#146](https://github.com/zendframework/zend-code/pull/146) updates all `@return` annotations to reflect the correct types returned by each method.\n\n- [zendframework/zend-code#144](https://github.com/zendframework/zend-code/pull/144) fixes the class generator such that it now resolves\n  `setExtendedClass()` arguments to aliases provided to the generator.\n\n- [zendframework/zend-code#140](https://github.com/zendframework/zend-code/pull/140) fixes `MethodScanner::setVisibility()` such that it no longer\n  casts the provided visibility token to lower case; this fix is necessary, as\n  the method is supposed to expect only the appropriate\n  `T_(PUBLIC|PROTECTED|PRIVATE)` token values, which are integers.\n\n- [zendframework/zend-code#140](https://github.com/zendframework/zend-code/pull/140) updates the `MethodScanner::setVisibility()` method to raise\n  a package-specific `InvalidArgumentException` instead of the non-existent\n  package `Exception` class when an invalid visibility is provided.\n\n## 3.3.0 - 2017-10-20\n\n### Added\n\n- [zendframework/zend-code#131](https://github.com/zendframework/zend-code/pull/131) added the\n  ability to omit a parameter type declaration\n- [zendframework/zend-code#132](https://github.com/zendframework/zend-code/pull/132) added a\n  lightweight `MethodGenerator::copyMethodSignature()` constructor that\n  only copies the method declaration with no body nor docblock.\n- [zendframework/zend-code#134](https://github.com/zendframework/zend-code/pull/134) short array\n  notation is now used by default for generated array values\n- [zendframework/zend-code#136](https://github.com/zendframework/zend-code/pull/136) added the\n  ability to specify an `omitdefaultvalue` key when using\n  `ParameterGenerator::fromArray()`\n\n### Deprecated\n\n- Nothing.\n\n### Removed\n\n- Nothing.\n\n### Fixed\n\n- [zendframework/zend-code#130](https://github.com/zendframework/zend-code/pull/130) Updated \n  links to the documentation\n- [zendframework/zend-code#133](https://github.com/zendframework/zend-code/pull/133) The default\n  value of a `ParameterGenerator` is always a `ValueGenerator`\n\n## 3.2.0 - 2017-07-23\n\n### Added\n\n- [zendframework/zend-code#112](https://github.com/zendframework/zend-code/pull/112)\n  [zendframework/zend-code#110](https://github.com/zendframework/zend-code/pull/110) Introduced\n  support for the PHP `7.2` `object` type-hint\n- [zendframework/zend-code#41](https://github.com/zendframework/zend-code/pull/41) Added `VarTag`\n  support to the docblock generators and reflectors: allows generating\n  and parsing `@var` tags.\n- [zendframework/zend-code#113](https://github.com/zendframework/zend-code/pull/113) Added\n  PHP `7.2` to the build matrix\n- [zendframework/zend-code#114](https://github.com/zendframework/zend-code/pull/114) Increased\n  minimum supported PHP version to `^7.1.0`\n- [zendframework/zend-code#114](https://github.com/zendframework/zend-code/pull/114) Upgraded\n  PHPUnit dependency to `^6.2.2`\n- [zendframework/zend-code#121](https://github.com/zendframework/zend-code/pull/121) Imported\n  global functions via `use` statements (experimenting with OpCache\n  OPCODE inlining optimisations)\n\n### Deprecated\n\n- Nothing.\n\n### Removed\n\n- [zendframework/zend-code#113](https://github.com/zendframework/zend-code/pull/113)\n  [zendframework/zend-code#118](https://github.com/zendframework/zend-code/pull/118) Removed\n  HHVM support\n- [zendframework/zend-code#122](https://github.com/zendframework/zend-code/pull/122) Removed\n  IRC notifications for pushes/build statuses\n\n### Fixed\n\n- [zendframework/zend-code#101](https://github.com/zendframework/zend-code/pull/101) avoid\n  calling `isInternalPhpType` twice in the `TypeGenerator`\n- [zendframework/zend-code#115](https://github.com/zendframework/zend-code/pull/115) Replaced\n  assertions in the test suite with their static counterparts where\n  applicable\n- [zendframework/zend-code#120](https://github.com/zendframework/zend-code/pull/120)\n  [zendframework/zend-code#109](https://github.com/zendframework/zend-code/pull/109)\n  [zendframework/zend-code#100](https://github.com/zendframework/zend-code/pull/100) Applied\n  Laminas coding standard to the library code\n- [zendframework/zend-code#119](https://github.com/zendframework/zend-code/pull/119) Corrected\n  test suite errors caused by mismatching parameter order\n- [zendframework/zend-code#106](https://github.com/zendframework/zend-code/pull/106)\n- [zendframework/zend-code#107](https://github.com/zendframework/zend-code/pull/107) Minor\n  typing error corrections in documentation and error messages\n\n## 3.1.0 - 2016-10-24\n\n### Added\n\n- [zendframework/zend-code#87](https://github.com/zendframework/zend-code/pull/87) support for\n  PHP 7.1's `void` return type declaration.\n- [zendframework/zend-code#87](https://github.com/zendframework/zend-code/pull/87) support for\n  PHP 7.1's nullable type declarations.\n- [zendframework/zend-code#87](https://github.com/zendframework/zend-code/pull/87) support for\n  PHP 7.1's `iterable` type declaration.\n- [zendframework/zend-code#62](https://github.com/zendframework/zend-code/pull/62) added\n  `Laminas\\Code\\Generator\\MethodGenerator#getReturnType()` accessor.\n- [zendframework/zend-code#68](https://github.com/zendframework/zend-code/pull/68)\n  [zendframework/zend-code#26](https://github.com/zendframework/zend-code/pull/26) added mutators\n  to allow removing/checking for existence of methods, properties, constants,\n  parameters and type declarations across all the code generator API.\n- [zendframework/zend-code#65](https://github.com/zendframework/zend-code/pull/65) continuous\n  integration testing now checks locked, newest and oldest dependency\n  sets.\n\n### Deprecated\n\n- Nothing.\n\n### Removed\n\n- Nothing.\n\n### Fixed\n\n- Nothing.\n\n## 3.0.5 - 2016-10-24\n\n### Added\n\n- Nothing.\n\n### Deprecated\n\n- Nothing.\n\n### Removed\n\n- Nothing.\n\n### Fixed\n\n- [zendframework/zend-code#92](https://github.com/zendframework/zend-code/pull/92) corrected\n  `Laminas\\Code\\Scanner\\ClassScanner` to detect multiple interface inheritance.\n- [zendframework/zend-code#95](https://github.com/zendframework/zend-code/pull/95) corrected\n  `Laminas\\Code\\Generator\\ParameterGenerator` to allow copying parameter signatures\n  for non-optional parameters that are still nullable via a default `= null`\n  value.\n- [zendframework/zend-code#94](https://github.com/zendframework/zend-code/pull/94) corrected\n  `Laminas\\Code\\Generator\\ValueGenerator` so that class constants can now\n  be generated with arrays as default value (supported since PHP 5.6).\n\n## 3.0.4 - 2016-06-30\n\n### Added\n\n- Nothing.\n\n### Deprecated\n\n- Nothing.\n\n### Removed\n\n- Nothing.\n\n### Fixed\n\n- [zendframework/zend-code#59](https://github.com/zendframework/zend-code/pull/59) fixes an issue with\n  detection of multiple trait `use` statements.\n- [zendframework/zend-code#75](https://github.com/zendframework/zend-code/pull/75) provides a patch to\n  ensure that `extends` statements qualify the parent class based on the current\n  namespace and/or import statements.\n\n## 3.0.3 - 2016-06-27\n\n### Added\n\n- [zendframework/zend-code#66](https://github.com/zendframework/zend-code/pull/66) publishes the\n  documentation to https://docs.laminas.dev/laminas-code/.\n\n### Deprecated\n\n- Nothing.\n\n### Removed\n\n- Nothing.\n\n### Fixed\n\n- [zendframework/zend-code#61](https://github.com/zendframework/zend-code/pull/61) fixes an issue with\n  how parameter typehints were generated; previously, fully-qualified class\n  names were not being generated with the leading backslash, causing them to\n  attempt to resolve as if they were relative to the current namespace.\n- [zendframework/zend-code#69](https://github.com/zendframework/zend-code/pull/69) fixes an issue with\n  how class names under the same namespace are generated when generating\n  typehints, extends, and implements values; they now strip the\n  common namespace from the class name.\n- [zendframework/zend-code#72](https://github.com/zendframework/zend-code/pull/72) fixes an issue\n  within the `TokenArrayScanner` when scanning closures.\n\n## 3.0.2 - 2016-04-20\n\n### Added\n\n- Nothing.\n\n### Deprecated\n\n- Nothing.\n\n### Removed\n\n- Nothing.\n\n### Fixed\n\n- [zendframework/zend-code#52](https://github.com/zendframework/zend-code/pull/52) updates several\n  dependency constraints:\n  - laminas-stdlib now allows either the 2.7 or 3.0 series, as the APIs consumed by\n    laminas-code are compatible across versions.\n  - PHP now excludes the 7.0.5 release, as it has known issues in its tokenizer\n    implementation that make the laminas-code token scanner unusable.\n- [zendframework/zend-code#46](https://github.com/zendframework/zend-code/pull/46) updates all\n  generators to use `\\n` for line endings in generated code, vs `PHP_EOL`,\n  ensuring cross-platform consistency.\n\n## 3.0.1 - 2016-01-26\n\n### Added\n\n- Nothing.\n\n### Deprecated\n\n- Nothing.\n\n### Removed\n\n- Nothing.\n\n### Fixed\n\n- [zendframework/zend-code#34](https://github.com/zendframework/zend-code/pull/34) method name cannot be optional when adding a method\n  to a class generator.\n- [zendframework/zend-code#38](https://github.com/zendframework/zend-code/pull/38) PHP_CodeSniffer was moved to dev dependencies\n\n## 3.0.0 - 2016-01-13\n\n### Changed\n\n- [zendframework/zend-code#140](https://github.com/zendframework/zend-code/pull/140) updates the `MethodScanner::setVisibility()` method to raise a package-specific `InvalidArgumentException` instead of\n  the non-existent package `Exception` class when an invalid visibility is provided.\n\nThis section refers to breaking changes: please refer to\n[docs/book/migration.md](docs/book/migration.md) for migration instructions.\n\n- Types `string`, `int`, `float`, `bool` passed to `Laminas\\Code\\Generator\\ParameterGenerator#setType()`\n  are no longer ignored in generated code [zendframework/zend-code#30](https://github.com/zendframework/zend-code/pull/30)\n- Types declared in DocBlocks are now ignored when creating a `Laminas\\Code\\Generator\\ParameterGenerator` via\n  `Laminas\\Code\\Generator\\ParameterGenerator::fromReflection()`. [zendframework/zend-code#30](https://github.com/zendframework/zend-code/pull/30)\n- Type strings are now validated: passing an invalid type to any method in the generator API\n  may lead to a `Laminas\\Code\\Generator\\InvalidArgumentException` being thrown.\n  [zendframework/zend-code#30](https://github.com/zendframework/zend-code/pull/30)\n- `Laminas\\Code\\Generator\\ParameterGenerator::$simple` was removed. [zendframework/zend-code#30](https://github.com/zendframework/zend-code/pull/30)\n- `Laminas\\Code\\Generator\\ParameterGenerator#$type` is now a `null|Laminas\\Code\\Generator\\TypeGenerator`: was a\n  `string` before. [zendframework/zend-code#30](https://github.com/zendframework/zend-code/pull/30)\n- `Laminas\\Code\\Generator` type-hints are now always prefixed with the namespace separator `\\`.\n  [zendframework/zend-code#30](https://github.com/zendframework/zend-code/pull/30)\n- `Laminas\\Code\\Reflection\\ParameterReflection#getType()` was renamed \n  to `Laminas\\Code\\Reflection\\ParameterReflection#detectType()` in order to not override the inherited\n  `ReflectionParameter#getType()`, introduced in PHP 7. [zendframework/zend-code#30](https://github.com/zendframework/zend-code/pull/30)\n\n### Added\n\n- PHP 7 return type hints generation support via `Laminas\\Code\\Generator\\MethodGenerator#setReturnType()`.\n  [zendframework/zend-code#30](https://github.com/zendframework/zend-code/pull/30)\n- PHP 7 scalar type hints generation support via `Laminas\\Code\\Generator\\ParameterGenerator#setType()` and \n  `Laminas\\Code\\Generator\\ParameterGenerator#getType()`. [zendframework/zend-code#30](https://github.com/zendframework/zend-code/pull/30)\n- PHP 5.6 variadic arguments support via `Laminas\\Code\\Generator\\ParameterGenerator#setVariadic()` and\n  `Laminas\\Code\\Generator\\ParameterGenerator#getVariadic()`. [zendframework/zend-code#30](https://github.com/zendframework/zend-code/pull/30)\n- Generation of methods returning by reference is supported via `Laminas\\Code\\Generator\\ParameterGenerator#setReturnsReference()`.\n  [zendframework/zend-code#30](https://github.com/zendframework/zend-code/pull/30)\n\n### Deprecated\n\n- Nothing.\n\n### Removed\n\n- `Laminas\\Code\\ParameterGenerator::$simple` was removed. [zendframework/zend-code#30](https://github.com/zendframework/zend-code/pull/30)\n\n### Fixed\n\n- Nothing.\n\n## 2.6.2 - 2015-01-05\n\n### Added\n\n- Nothing.\n\n### Deprecated\n\n- Nothing.\n\n### Removed\n\n- Nothing.\n\n### Fixed\n\n- [zendframework/zend-code#31](https://github.com/zendframework/zend-code/pull/31) updated license year.\n\n## 2.6.2 - 2015-01-05\n\n### Added\n\n- Nothing.\n\n### Deprecated\n\n- Nothing.\n\n### Removed\n\n- Nothing.\n\n### Fixed\n\n- [zendframework/zend-code#31](https://github.com/zendframework/zend-code/pull/31) updated license year.\n\n## 2.6.1 - 2015-11-24\n\n### Added\n\n- Nothing.\n\n### Deprecated\n\n- Nothing.\n\n### Removed\n\n- Nothing.\n\n### Fixed\n\n- [zendframework/zend-code#25](https://github.com/zendframework/zend-code/pull/25) changes the\n  `doctrine/common` suggestion/dev-dependency to the more specific\n  `doctrine/annotations` package (which is what is actually consumed).\n\n## 2.6.0 - 2015-11-18\n\n### Added\n\n- [zendframework/zend-code#12](https://github.com/zendframework/zend-code/pull/12) adds the ability to\n  generate arrays using either long/standard syntax (`array(...)`) or short\n  syntax (`[...]`). This can be accomplished by setting the value type to\n  `ValueGenerator::TYPE_ARRAY_SHORT` instead of using `TYPE_ARRAY`.\n  Additionally, you can use `TYPE_ARRAY_LONG` instead of `TYPE_ARRAY`; the two\n  constants are synonyms.\n- [zendframework/zend-code#11](https://github.com/zendframework/zend-code/pull/11) adds the ability to\n  generate interfaces via the new class `Laminas\\Code\\Generator\\InterfaceGenerator`.\n\n### Deprecated\n\n- Nothing.\n\n### Removed\n\n- Nothing.\n\n### Fixed\n\n- [zendframework/zend-code#20](https://github.com/zendframework/zend-code/pull/20) updates\n  the laminas-eventmanager dependency to `^2.6|^3.0`, and changes its\n  internal usage to use the `triggerEventUntil()` signature.\n\n## 2.5.3 - 2015-11-18\n\n### Added\n\n- Nothing.\n\n### Deprecated\n\n- Nothing.\n\n### Removed\n\n- [zendframework/zend-code#10](https://github.com/zendframework/zend-code/pull/10) removes a\n  development dependency on zendframework/zend-version.\n- [zendframework/zend-code#23](https://github.com/zendframework/zend-code/pull/23) removes a\n  requirement on laminas/laminas-stdlib. This results in a slight change in\n  `Laminas\\Code\\Generator\\ValueGenerator`: `setConstants()` and `getConstants()`\n  can now receive/emit *either* an SPL `ArrayObject` or\n  `Laminas\\Stdlib\\ArrayObject`. Since these are functionally equivalent, however,\n  you will experience no change in behavior.\n\n### Fixed\n\n- Nothing.\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- vendor/laminas/laminas-code/CHANGELOG.md	(revision a449d8a584af7c2722ad0d48f553c0917ddead6e)
+++ vendor/laminas/laminas-code/CHANGELOG.md	(date 1605132687000)
@@ -2,6 +2,35 @@
 
 All notable changes to this project will be documented in this file, in reverse chronological order by release.
 
+## 3.5.0 - 2020-11-11
+
+### Added
+
+- [#47](https://github.com/laminas/laminas-code/pull/47) adds support for PHP 8. NOTE: this simply means the code runs on PHP 8, not that it can generate code specific to PHP 8.
+
+
+-----
+
+### Release Notes for [3.5.0](https://github.com/laminas/laminas-code/milestone/3)
+
+next feature release (minor)
+
+### 3.5.0
+
+- Total issues resolved: **0**
+- Total pull requests resolved: **3**
+- Total contributors: **3**
+
+#### Enhancement,hacktoberfest-accepted
+
+ - [47: Start PHP 8.0 support](https://github.com/laminas/laminas-code/pull/47) thanks to @Slamdunk
+
+ - [43: QA fix for phpstan](https://github.com/laminas/laminas-code/pull/43) thanks to @janvernieuwe
+
+#### Documentation
+
+ - [31: Modify the examples to make them compatible with PSR-12](https://github.com/laminas/laminas-code/pull/31) thanks to @simivar
+
 ## 3.4.1 - 2019-12-10
 
 ### Added
@@ -24,7 +53,7 @@
 
 - [zendframework/zend-code#179](https://github.com/zendframework/zend-code/pull/179) fixes exception message when invalid value provided in `Laminas\Code\Generator\ValueGenerator`.
 
-- [zendframework/zend-code#180](https://github.com/zendframework/zend-code/pull/190) fixes PHP 7.4 compatibility.
+- [zendframework/zend-code#180](https://github.com/zendframework/zend-code/pull/180) fixes PHP 7.4 compatibility.
 
 ## 3.4.0 - 2019-10-06
 
Index: vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/PDOOracle/Driver.php
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?php\n\nnamespace Doctrine\\DBAL\\Driver\\PDOOracle;\n\nuse Doctrine\\DBAL\\Driver\\AbstractOracleDriver;\nuse Doctrine\\DBAL\\Driver\\PDO;\nuse Doctrine\\DBAL\\Exception;\nuse PDOException;\n\n/**\n * PDO Oracle driver.\n *\n * WARNING: This driver gives us segfaults in our testsuites on CLOB and other\n * stuff. PDO Oracle is not maintained by Oracle or anyone in the PHP community,\n * which leads us to the recommendation to use the \"oci8\" driver to connect\n * to Oracle instead.\n *\n * @deprecated Use {@link PDO\\OCI\\Driver} instead.\n */\nclass Driver extends AbstractOracleDriver\n{\n    /**\n     * {@inheritdoc}\n     */\n    public function connect(array $params, $username = null, $password = null, array $driverOptions = [])\n    {\n        try {\n            return new PDO\\Connection(\n                $this->constructPdoDsn($params),\n                $username,\n                $password,\n                $driverOptions\n            );\n        } catch (PDOException $e) {\n            throw Exception::driverException($this, $e);\n        }\n    }\n\n    /**\n     * Constructs the Oracle PDO DSN.\n     *\n     * @param mixed[] $params\n     *\n     * @return string The DSN.\n     */\n    private function constructPdoDsn(array $params)\n    {\n        $dsn = 'oci:dbname=' . $this->getEasyConnectString($params);\n\n        if (isset($params['charset'])) {\n            $dsn .= ';charset=' . $params['charset'];\n        }\n\n        return $dsn;\n    }\n\n    /**\n     * {@inheritdoc}\n     */\n    public function getName()\n    {\n        return 'pdo_oracle';\n    }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/PDOOracle/Driver.php	(revision a449d8a584af7c2722ad0d48f553c0917ddead6e)
+++ vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/PDOOracle/Driver.php	(date 1605385618000)
@@ -10,11 +10,6 @@
 /**
  * PDO Oracle driver.
  *
- * WARNING: This driver gives us segfaults in our testsuites on CLOB and other
- * stuff. PDO Oracle is not maintained by Oracle or anyone in the PHP community,
- * which leads us to the recommendation to use the "oci8" driver to connect
- * to Oracle instead.
- *
  * @deprecated Use {@link PDO\OCI\Driver} instead.
  */
 class Driver extends AbstractOracleDriver
Index: composer.lock
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>{\n    \"_readme\": [\n        \"This file locks the dependencies of your project to a known state\",\n        \"Read more about it at https://getcomposer.org/doc/01-basic-usage.md#installing-dependencies\",\n        \"This file is @generated automatically\"\n    ],\n    \"content-hash\": \"289efd99229cc323919fc98e0ecdd12c\",\n    \"packages\": [\n        {\n            \"name\": \"composer/package-versions-deprecated\",\n            \"version\": \"1.11.99.1\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/composer/package-versions-deprecated.git\",\n                \"reference\": \"7413f0b55a051e89485c5cb9f765fe24bb02a7b6\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/composer/package-versions-deprecated/zipball/7413f0b55a051e89485c5cb9f765fe24bb02a7b6\",\n                \"reference\": \"7413f0b55a051e89485c5cb9f765fe24bb02a7b6\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"composer-plugin-api\": \"^1.1.0 || ^2.0\",\n                \"php\": \"^7 || ^8\"\n            },\n            \"replace\": {\n                \"ocramius/package-versions\": \"1.11.99\"\n            },\n            \"require-dev\": {\n                \"composer/composer\": \"^1.9.3 || ^2.0@dev\",\n                \"ext-zip\": \"^1.13\",\n                \"phpunit/phpunit\": \"^6.5 || ^7\"\n            },\n            \"type\": \"composer-plugin\",\n            \"extra\": {\n                \"class\": \"PackageVersions\\\\Installer\",\n                \"branch-alias\": {\n                    \"dev-master\": \"1.x-dev\"\n                }\n            },\n            \"autoload\": {\n                \"psr-4\": {\n                    \"PackageVersions\\\\\": \"src/PackageVersions\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Marco Pivetta\",\n                    \"email\": \"ocramius@gmail.com\"\n                },\n                {\n                    \"name\": \"Jordi Boggiano\",\n                    \"email\": \"j.boggiano@seld.be\"\n                }\n            ],\n            \"description\": \"Composer plugin that provides efficient querying for installed package versions (no runtime IO)\",\n            \"funding\": [\n                {\n                    \"url\": \"https://packagist.com\",\n                    \"type\": \"custom\"\n                },\n                {\n                    \"url\": \"https://github.com/composer\",\n                    \"type\": \"github\"\n                },\n                {\n                    \"url\": \"https://tidelift.com/funding/github/packagist/composer/composer\",\n                    \"type\": \"tidelift\"\n                }\n            ],\n            \"time\": \"2020-11-11T10:22:58+00:00\"\n        },\n        {\n            \"name\": \"doctrine/annotations\",\n            \"version\": \"1.11.1\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/doctrine/annotations.git\",\n                \"reference\": \"ce77a7ba1770462cd705a91a151b6c3746f9c6ad\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/doctrine/annotations/zipball/ce77a7ba1770462cd705a91a151b6c3746f9c6ad\",\n                \"reference\": \"ce77a7ba1770462cd705a91a151b6c3746f9c6ad\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"doctrine/lexer\": \"1.*\",\n                \"ext-tokenizer\": \"*\",\n                \"php\": \"^7.1 || ^8.0\"\n            },\n            \"require-dev\": {\n                \"doctrine/cache\": \"1.*\",\n                \"doctrine/coding-standard\": \"^6.0 || ^8.1\",\n                \"phpstan/phpstan\": \"^0.12.20\",\n                \"phpunit/phpunit\": \"^7.5 || ^9.1.5\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"branch-alias\": {\n                    \"dev-master\": \"1.11.x-dev\"\n                }\n            },\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Doctrine\\\\Common\\\\Annotations\\\\\": \"lib/Doctrine/Common/Annotations\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Guilherme Blanco\",\n                    \"email\": \"guilhermeblanco@gmail.com\"\n                },\n                {\n                    \"name\": \"Roman Borschel\",\n                    \"email\": \"roman@code-factory.org\"\n                },\n                {\n                    \"name\": \"Benjamin Eberlei\",\n                    \"email\": \"kontakt@beberlei.de\"\n                },\n                {\n                    \"name\": \"Jonathan Wage\",\n                    \"email\": \"jonwage@gmail.com\"\n                },\n                {\n                    \"name\": \"Johannes Schmitt\",\n                    \"email\": \"schmittjoh@gmail.com\"\n                }\n            ],\n            \"description\": \"Docblock Annotations Parser\",\n            \"homepage\": \"https://www.doctrine-project.org/projects/annotations.html\",\n            \"keywords\": [\n                \"annotations\",\n                \"docblock\",\n                \"parser\"\n            ],\n            \"time\": \"2020-10-26T10:28:16+00:00\"\n        },\n        {\n            \"name\": \"doctrine/cache\",\n            \"version\": \"1.10.2\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/doctrine/cache.git\",\n                \"reference\": \"13e3381b25847283a91948d04640543941309727\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/doctrine/cache/zipball/13e3381b25847283a91948d04640543941309727\",\n                \"reference\": \"13e3381b25847283a91948d04640543941309727\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \"~7.1 || ^8.0\"\n            },\n            \"conflict\": {\n                \"doctrine/common\": \">2.2,<2.4\"\n            },\n            \"require-dev\": {\n                \"alcaeus/mongo-php-adapter\": \"^1.1\",\n                \"doctrine/coding-standard\": \"^6.0\",\n                \"mongodb/mongodb\": \"^1.1\",\n                \"phpunit/phpunit\": \"^7.0\",\n                \"predis/predis\": \"~1.0\"\n            },\n            \"suggest\": {\n                \"alcaeus/mongo-php-adapter\": \"Required to use legacy MongoDB driver\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"branch-alias\": {\n                    \"dev-master\": \"1.9.x-dev\"\n                }\n            },\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Doctrine\\\\Common\\\\Cache\\\\\": \"lib/Doctrine/Common/Cache\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Guilherme Blanco\",\n                    \"email\": \"guilhermeblanco@gmail.com\"\n                },\n                {\n                    \"name\": \"Roman Borschel\",\n                    \"email\": \"roman@code-factory.org\"\n                },\n                {\n                    \"name\": \"Benjamin Eberlei\",\n                    \"email\": \"kontakt@beberlei.de\"\n                },\n                {\n                    \"name\": \"Jonathan Wage\",\n                    \"email\": \"jonwage@gmail.com\"\n                },\n                {\n                    \"name\": \"Johannes Schmitt\",\n                    \"email\": \"schmittjoh@gmail.com\"\n                }\n            ],\n            \"description\": \"PHP Doctrine Cache library is a popular cache implementation that supports many different drivers such as redis, memcache, apc, mongodb and others.\",\n            \"homepage\": \"https://www.doctrine-project.org/projects/cache.html\",\n            \"keywords\": [\n                \"abstraction\",\n                \"apcu\",\n                \"cache\",\n                \"caching\",\n                \"couchdb\",\n                \"memcached\",\n                \"php\",\n                \"redis\",\n                \"xcache\"\n            ],\n            \"funding\": [\n                {\n                    \"url\": \"https://www.doctrine-project.org/sponsorship.html\",\n                    \"type\": \"custom\"\n                },\n                {\n                    \"url\": \"https://www.patreon.com/phpdoctrine\",\n                    \"type\": \"patreon\"\n                },\n                {\n                    \"url\": \"https://tidelift.com/funding/github/packagist/doctrine%2Fcache\",\n                    \"type\": \"tidelift\"\n                }\n            ],\n            \"time\": \"2020-07-07T18:54:01+00:00\"\n        },\n        {\n            \"name\": \"doctrine/collections\",\n            \"version\": \"1.6.7\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/doctrine/collections.git\",\n                \"reference\": \"55f8b799269a1a472457bd1a41b4f379d4cfba4a\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/doctrine/collections/zipball/55f8b799269a1a472457bd1a41b4f379d4cfba4a\",\n                \"reference\": \"55f8b799269a1a472457bd1a41b4f379d4cfba4a\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \"^7.1.3 || ^8.0\"\n            },\n            \"require-dev\": {\n                \"doctrine/coding-standard\": \"^6.0\",\n                \"phpstan/phpstan-shim\": \"^0.9.2\",\n                \"phpunit/phpunit\": \"^7.0\",\n                \"vimeo/psalm\": \"^3.8.1\"\n            },\n            \"type\": \"library\",\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Doctrine\\\\Common\\\\Collections\\\\\": \"lib/Doctrine/Common/Collections\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Guilherme Blanco\",\n                    \"email\": \"guilhermeblanco@gmail.com\"\n                },\n                {\n                    \"name\": \"Roman Borschel\",\n                    \"email\": \"roman@code-factory.org\"\n                },\n                {\n                    \"name\": \"Benjamin Eberlei\",\n                    \"email\": \"kontakt@beberlei.de\"\n                },\n                {\n                    \"name\": \"Jonathan Wage\",\n                    \"email\": \"jonwage@gmail.com\"\n                },\n                {\n                    \"name\": \"Johannes Schmitt\",\n                    \"email\": \"schmittjoh@gmail.com\"\n                }\n            ],\n            \"description\": \"PHP Doctrine Collections library that adds additional functionality on top of PHP arrays.\",\n            \"homepage\": \"https://www.doctrine-project.org/projects/collections.html\",\n            \"keywords\": [\n                \"array\",\n                \"collections\",\n                \"iterators\",\n                \"php\"\n            ],\n            \"time\": \"2020-07-27T17:53:49+00:00\"\n        },\n        {\n            \"name\": \"doctrine/common\",\n            \"version\": \"3.0.2\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/doctrine/common.git\",\n                \"reference\": \"a3c6479858989e242a2465972b4f7a8642baf0d4\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/doctrine/common/zipball/a3c6479858989e242a2465972b4f7a8642baf0d4\",\n                \"reference\": \"a3c6479858989e242a2465972b4f7a8642baf0d4\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"doctrine/persistence\": \"^2.0\",\n                \"php\": \"^7.1 || ^8.0\"\n            },\n            \"require-dev\": {\n                \"doctrine/coding-standard\": \"^1.0\",\n                \"phpstan/phpstan\": \"^0.11\",\n                \"phpstan/phpstan-phpunit\": \"^0.11\",\n                \"phpunit/phpunit\": \"^7.0\",\n                \"squizlabs/php_codesniffer\": \"^3.0\",\n                \"symfony/phpunit-bridge\": \"^4.0.5\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"branch-alias\": {\n                    \"dev-master\": \"3.0.x-dev\"\n                }\n            },\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Doctrine\\\\Common\\\\\": \"lib/Doctrine/Common\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Guilherme Blanco\",\n                    \"email\": \"guilhermeblanco@gmail.com\"\n                },\n                {\n                    \"name\": \"Roman Borschel\",\n                    \"email\": \"roman@code-factory.org\"\n                },\n                {\n                    \"name\": \"Benjamin Eberlei\",\n                    \"email\": \"kontakt@beberlei.de\"\n                },\n                {\n                    \"name\": \"Jonathan Wage\",\n                    \"email\": \"jonwage@gmail.com\"\n                },\n                {\n                    \"name\": \"Johannes Schmitt\",\n                    \"email\": \"schmittjoh@gmail.com\"\n                },\n                {\n                    \"name\": \"Marco Pivetta\",\n                    \"email\": \"ocramius@gmail.com\"\n                }\n            ],\n            \"description\": \"PHP Doctrine Common project is a library that provides additional functionality that other Doctrine projects depend on such as better reflection support, persistence interfaces, proxies, event system and much more.\",\n            \"homepage\": \"https://www.doctrine-project.org/projects/common.html\",\n            \"keywords\": [\n                \"common\",\n                \"doctrine\",\n                \"php\"\n            ],\n            \"funding\": [\n                {\n                    \"url\": \"https://www.doctrine-project.org/sponsorship.html\",\n                    \"type\": \"custom\"\n                },\n                {\n                    \"url\": \"https://www.patreon.com/phpdoctrine\",\n                    \"type\": \"patreon\"\n                },\n                {\n                    \"url\": \"https://tidelift.com/funding/github/packagist/doctrine%2Fcommon\",\n                    \"type\": \"tidelift\"\n                }\n            ],\n            \"time\": \"2020-06-05T16:59:53+00:00\"\n        },\n        {\n            \"name\": \"doctrine/dbal\",\n            \"version\": \"2.12.0\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/doctrine/dbal.git\",\n                \"reference\": \"c6d37b4c42aaa3c3ee175f05eca68056f4185646\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/doctrine/dbal/zipball/c6d37b4c42aaa3c3ee175f05eca68056f4185646\",\n                \"reference\": \"c6d37b4c42aaa3c3ee175f05eca68056f4185646\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"doctrine/cache\": \"^1.0\",\n                \"doctrine/event-manager\": \"^1.0\",\n                \"ext-pdo\": \"*\",\n                \"php\": \"^7.3 || ^8\"\n            },\n            \"require-dev\": {\n                \"doctrine/coding-standard\": \"^8.1\",\n                \"jetbrains/phpstorm-stubs\": \"^2019.1\",\n                \"phpstan/phpstan\": \"^0.12.40\",\n                \"phpunit/phpunit\": \"^9.4\",\n                \"psalm/plugin-phpunit\": \"^0.10.0\",\n                \"symfony/console\": \"^2.0.5|^3.0|^4.0|^5.0\",\n                \"vimeo/psalm\": \"^3.17.2\"\n            },\n            \"suggest\": {\n                \"symfony/console\": \"For helpful console commands such as SQL execution and import of files.\"\n            },\n            \"bin\": [\n                \"bin/doctrine-dbal\"\n            ],\n            \"type\": \"library\",\n            \"extra\": {\n                \"branch-alias\": {\n                    \"dev-master\": \"4.0.x-dev\"\n                }\n            },\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Doctrine\\\\DBAL\\\\\": \"lib/Doctrine/DBAL\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Guilherme Blanco\",\n                    \"email\": \"guilhermeblanco@gmail.com\"\n                },\n                {\n                    \"name\": \"Roman Borschel\",\n                    \"email\": \"roman@code-factory.org\"\n                },\n                {\n                    \"name\": \"Benjamin Eberlei\",\n                    \"email\": \"kontakt@beberlei.de\"\n                },\n                {\n                    \"name\": \"Jonathan Wage\",\n                    \"email\": \"jonwage@gmail.com\"\n                }\n            ],\n            \"description\": \"Powerful PHP database abstraction layer (DBAL) with many features for database schema introspection and management.\",\n            \"homepage\": \"https://www.doctrine-project.org/projects/dbal.html\",\n            \"keywords\": [\n                \"abstraction\",\n                \"database\",\n                \"db2\",\n                \"dbal\",\n                \"mariadb\",\n                \"mssql\",\n                \"mysql\",\n                \"oci8\",\n                \"oracle\",\n                \"pdo\",\n                \"pgsql\",\n                \"postgresql\",\n                \"queryobject\",\n                \"sasql\",\n                \"sql\",\n                \"sqlanywhere\",\n                \"sqlite\",\n                \"sqlserver\",\n                \"sqlsrv\"\n            ],\n            \"funding\": [\n                {\n                    \"url\": \"https://www.doctrine-project.org/sponsorship.html\",\n                    \"type\": \"custom\"\n                },\n                {\n                    \"url\": \"https://www.patreon.com/phpdoctrine\",\n                    \"type\": \"patreon\"\n                },\n                {\n                    \"url\": \"https://tidelift.com/funding/github/packagist/doctrine%2Fdbal\",\n                    \"type\": \"tidelift\"\n                }\n            ],\n            \"time\": \"2020-10-22T17:26:24+00:00\"\n        },\n        {\n            \"name\": \"doctrine/doctrine-bundle\",\n            \"version\": \"2.2.1\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/doctrine/DoctrineBundle.git\",\n                \"reference\": \"9e07bb1ff35d35d9ec4597b79e5d05502d7d4d43\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/doctrine/DoctrineBundle/zipball/9e07bb1ff35d35d9ec4597b79e5d05502d7d4d43\",\n                \"reference\": \"9e07bb1ff35d35d9ec4597b79e5d05502d7d4d43\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"doctrine/dbal\": \"^2.9.0|^3.0\",\n                \"doctrine/persistence\": \"^1.3.3|^2.0\",\n                \"doctrine/sql-formatter\": \"^1.0.1\",\n                \"php\": \"^7.1 || ^8.0\",\n                \"symfony/cache\": \"^4.3.3|^5.0\",\n                \"symfony/config\": \"^4.3.3|^5.0\",\n                \"symfony/console\": \"^3.4.30|^4.3.3|^5.0\",\n                \"symfony/dependency-injection\": \"^4.3.3|^5.0\",\n                \"symfony/doctrine-bridge\": \"^4.3.7|^5.0\",\n                \"symfony/framework-bundle\": \"^3.4.30|^4.3.3|^5.0\",\n                \"symfony/service-contracts\": \"^1.1.1|^2.0\"\n            },\n            \"conflict\": {\n                \"doctrine/orm\": \"<2.6\",\n                \"twig/twig\": \"<1.34|>=2.0,<2.4\"\n            },\n            \"require-dev\": {\n                \"doctrine/coding-standard\": \"^8.0\",\n                \"doctrine/orm\": \"^2.6\",\n                \"ocramius/proxy-manager\": \"^2.1\",\n                \"phpunit/phpunit\": \"^7.5 || ^9.3\",\n                \"symfony/phpunit-bridge\": \"^4.2\",\n                \"symfony/property-info\": \"^4.3.3|^5.0\",\n                \"symfony/proxy-manager-bridge\": \"^3.4|^4.3.3|^5.0\",\n                \"symfony/twig-bridge\": \"^3.4.30|^4.3.3|^5.0\",\n                \"symfony/validator\": \"^3.4.30|^4.3.3|^5.0\",\n                \"symfony/web-profiler-bundle\": \"^3.4.30|^4.3.3|^5.0\",\n                \"symfony/yaml\": \"^3.4.30|^4.3.3|^5.0\",\n                \"twig/twig\": \"^1.34|^2.12|^3.0\"\n            },\n            \"suggest\": {\n                \"doctrine/orm\": \"The Doctrine ORM integration is optional in the bundle.\",\n                \"symfony/web-profiler-bundle\": \"To use the data collector.\"\n            },\n            \"type\": \"symfony-bundle\",\n            \"extra\": {\n                \"branch-alias\": {\n                    \"dev-master\": \"2.3.x-dev\"\n                }\n            },\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Doctrine\\\\Bundle\\\\DoctrineBundle\\\\\": \"\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Fabien Potencier\",\n                    \"email\": \"fabien@symfony.com\"\n                },\n                {\n                    \"name\": \"Benjamin Eberlei\",\n                    \"email\": \"kontakt@beberlei.de\"\n                },\n                {\n                    \"name\": \"Symfony Community\",\n                    \"homepage\": \"http://symfony.com/contributors\"\n                },\n                {\n                    \"name\": \"Doctrine Project\",\n                    \"homepage\": \"http://www.doctrine-project.org/\"\n                }\n            ],\n            \"description\": \"Symfony DoctrineBundle\",\n            \"homepage\": \"http://www.doctrine-project.org\",\n            \"keywords\": [\n                \"database\",\n                \"dbal\",\n                \"orm\",\n                \"persistence\"\n            ],\n            \"funding\": [\n                {\n                    \"url\": \"https://www.doctrine-project.org/sponsorship.html\",\n                    \"type\": \"custom\"\n                },\n                {\n                    \"url\": \"https://www.patreon.com/phpdoctrine\",\n                    \"type\": \"patreon\"\n                },\n                {\n                    \"url\": \"https://tidelift.com/funding/github/packagist/doctrine%2Fdoctrine-bundle\",\n                    \"type\": \"tidelift\"\n                }\n            ],\n            \"time\": \"2020-11-10T20:42:15+00:00\"\n        },\n        {\n            \"name\": \"doctrine/doctrine-migrations-bundle\",\n            \"version\": \"3.0.1\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/doctrine/DoctrineMigrationsBundle.git\",\n                \"reference\": \"96e730b0ffa0bb39c0f913c1966213f1674bf249\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/doctrine/DoctrineMigrationsBundle/zipball/96e730b0ffa0bb39c0f913c1966213f1674bf249\",\n                \"reference\": \"96e730b0ffa0bb39c0f913c1966213f1674bf249\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"doctrine/doctrine-bundle\": \"~1.0|~2.0\",\n                \"doctrine/migrations\": \"~3.0\",\n                \"php\": \"^7.2\",\n                \"symfony/framework-bundle\": \"~3.4|~4.0|~5.0\"\n            },\n            \"require-dev\": {\n                \"doctrine/coding-standard\": \"^5.0\",\n                \"doctrine/orm\": \"^2.6\",\n                \"phpstan/phpstan\": \"^0.11\",\n                \"phpstan/phpstan-deprecation-rules\": \"^0.11\",\n                \"phpstan/phpstan-phpunit\": \"^0.11\",\n                \"phpstan/phpstan-strict-rules\": \"^0.11\",\n                \"phpunit/phpunit\": \"^6.4|^7.0\"\n            },\n            \"type\": \"symfony-bundle\",\n            \"extra\": {\n                \"branch-alias\": {\n                    \"dev-master\": \"3.0.x-dev\"\n                }\n            },\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Doctrine\\\\Bundle\\\\MigrationsBundle\\\\\": \"\"\n                },\n                \"exclude-from-classmap\": [\n                    \"/Tests/\"\n                ]\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Fabien Potencier\",\n                    \"email\": \"fabien@symfony.com\"\n                },\n                {\n                    \"name\": \"Doctrine Project\",\n                    \"homepage\": \"http://www.doctrine-project.org\"\n                },\n                {\n                    \"name\": \"Symfony Community\",\n                    \"homepage\": \"http://symfony.com/contributors\"\n                }\n            ],\n            \"description\": \"Symfony DoctrineMigrationsBundle\",\n            \"homepage\": \"https://www.doctrine-project.org\",\n            \"keywords\": [\n                \"dbal\",\n                \"migrations\",\n                \"schema\"\n            ],\n            \"funding\": [\n                {\n                    \"url\": \"https://www.doctrine-project.org/sponsorship.html\",\n                    \"type\": \"custom\"\n                },\n                {\n                    \"url\": \"https://www.patreon.com/phpdoctrine\",\n                    \"type\": \"patreon\"\n                },\n                {\n                    \"url\": \"https://tidelift.com/funding/github/packagist/doctrine%2Fdoctrine-migrations-bundle\",\n                    \"type\": \"tidelift\"\n                }\n            ],\n            \"time\": \"2020-06-15T06:04:38+00:00\"\n        },\n        {\n            \"name\": \"doctrine/event-manager\",\n            \"version\": \"1.1.1\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/doctrine/event-manager.git\",\n                \"reference\": \"41370af6a30faa9dc0368c4a6814d596e81aba7f\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/doctrine/event-manager/zipball/41370af6a30faa9dc0368c4a6814d596e81aba7f\",\n                \"reference\": \"41370af6a30faa9dc0368c4a6814d596e81aba7f\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \"^7.1 || ^8.0\"\n            },\n            \"conflict\": {\n                \"doctrine/common\": \"<2.9@dev\"\n            },\n            \"require-dev\": {\n                \"doctrine/coding-standard\": \"^6.0\",\n                \"phpunit/phpunit\": \"^7.0\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"branch-alias\": {\n                    \"dev-master\": \"1.0.x-dev\"\n                }\n            },\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Doctrine\\\\Common\\\\\": \"lib/Doctrine/Common\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Guilherme Blanco\",\n                    \"email\": \"guilhermeblanco@gmail.com\"\n                },\n                {\n                    \"name\": \"Roman Borschel\",\n                    \"email\": \"roman@code-factory.org\"\n                },\n                {\n                    \"name\": \"Benjamin Eberlei\",\n                    \"email\": \"kontakt@beberlei.de\"\n                },\n                {\n                    \"name\": \"Jonathan Wage\",\n                    \"email\": \"jonwage@gmail.com\"\n                },\n                {\n                    \"name\": \"Johannes Schmitt\",\n                    \"email\": \"schmittjoh@gmail.com\"\n                },\n                {\n                    \"name\": \"Marco Pivetta\",\n                    \"email\": \"ocramius@gmail.com\"\n                }\n            ],\n            \"description\": \"The Doctrine Event Manager is a simple PHP event system that was built to be used with the various Doctrine projects.\",\n            \"homepage\": \"https://www.doctrine-project.org/projects/event-manager.html\",\n            \"keywords\": [\n                \"event\",\n                \"event dispatcher\",\n                \"event manager\",\n                \"event system\",\n                \"events\"\n            ],\n            \"funding\": [\n                {\n                    \"url\": \"https://www.doctrine-project.org/sponsorship.html\",\n                    \"type\": \"custom\"\n                },\n                {\n                    \"url\": \"https://www.patreon.com/phpdoctrine\",\n                    \"type\": \"patreon\"\n                },\n                {\n                    \"url\": \"https://tidelift.com/funding/github/packagist/doctrine%2Fevent-manager\",\n                    \"type\": \"tidelift\"\n                }\n            ],\n            \"time\": \"2020-05-29T18:28:51+00:00\"\n        },\n        {\n            \"name\": \"doctrine/inflector\",\n            \"version\": \"1.4.3\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/doctrine/inflector.git\",\n                \"reference\": \"4650c8b30c753a76bf44fb2ed00117d6f367490c\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/doctrine/inflector/zipball/4650c8b30c753a76bf44fb2ed00117d6f367490c\",\n                \"reference\": \"4650c8b30c753a76bf44fb2ed00117d6f367490c\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \"^7.2 || ^8.0\"\n            },\n            \"require-dev\": {\n                \"doctrine/coding-standard\": \"^7.0\",\n                \"phpstan/phpstan\": \"^0.11\",\n                \"phpstan/phpstan-phpunit\": \"^0.11\",\n                \"phpstan/phpstan-strict-rules\": \"^0.11\",\n                \"phpunit/phpunit\": \"^7.0 || ^8.0 || ^9.0\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"branch-alias\": {\n                    \"dev-master\": \"2.0.x-dev\"\n                }\n            },\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Doctrine\\\\Common\\\\Inflector\\\\\": \"lib/Doctrine/Common/Inflector\",\n                    \"Doctrine\\\\Inflector\\\\\": \"lib/Doctrine/Inflector\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Guilherme Blanco\",\n                    \"email\": \"guilhermeblanco@gmail.com\"\n                },\n                {\n                    \"name\": \"Roman Borschel\",\n                    \"email\": \"roman@code-factory.org\"\n                },\n                {\n                    \"name\": \"Benjamin Eberlei\",\n                    \"email\": \"kontakt@beberlei.de\"\n                },\n                {\n                    \"name\": \"Jonathan Wage\",\n                    \"email\": \"jonwage@gmail.com\"\n                },\n                {\n                    \"name\": \"Johannes Schmitt\",\n                    \"email\": \"schmittjoh@gmail.com\"\n                }\n            ],\n            \"description\": \"PHP Doctrine Inflector is a small library that can perform string manipulations with regard to upper/lowercase and singular/plural forms of words.\",\n            \"homepage\": \"https://www.doctrine-project.org/projects/inflector.html\",\n            \"keywords\": [\n                \"inflection\",\n                \"inflector\",\n                \"lowercase\",\n                \"manipulation\",\n                \"php\",\n                \"plural\",\n                \"singular\",\n                \"strings\",\n                \"uppercase\",\n                \"words\"\n            ],\n            \"funding\": [\n                {\n                    \"url\": \"https://www.doctrine-project.org/sponsorship.html\",\n                    \"type\": \"custom\"\n                },\n                {\n                    \"url\": \"https://www.patreon.com/phpdoctrine\",\n                    \"type\": \"patreon\"\n                },\n                {\n                    \"url\": \"https://tidelift.com/funding/github/packagist/doctrine%2Finflector\",\n                    \"type\": \"tidelift\"\n                }\n            ],\n            \"time\": \"2020-05-29T07:19:59+00:00\"\n        },\n        {\n            \"name\": \"doctrine/instantiator\",\n            \"version\": \"1.3.1\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/doctrine/instantiator.git\",\n                \"reference\": \"f350df0268e904597e3bd9c4685c53e0e333feea\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/doctrine/instantiator/zipball/f350df0268e904597e3bd9c4685c53e0e333feea\",\n                \"reference\": \"f350df0268e904597e3bd9c4685c53e0e333feea\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \"^7.1 || ^8.0\"\n            },\n            \"require-dev\": {\n                \"doctrine/coding-standard\": \"^6.0\",\n                \"ext-pdo\": \"*\",\n                \"ext-phar\": \"*\",\n                \"phpbench/phpbench\": \"^0.13\",\n                \"phpstan/phpstan-phpunit\": \"^0.11\",\n                \"phpstan/phpstan-shim\": \"^0.11\",\n                \"phpunit/phpunit\": \"^7.0\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"branch-alias\": {\n                    \"dev-master\": \"1.2.x-dev\"\n                }\n            },\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Doctrine\\\\Instantiator\\\\\": \"src/Doctrine/Instantiator/\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Marco Pivetta\",\n                    \"email\": \"ocramius@gmail.com\",\n                    \"homepage\": \"http://ocramius.github.com/\"\n                }\n            ],\n            \"description\": \"A small, lightweight utility to instantiate objects in PHP without invoking their constructors\",\n            \"homepage\": \"https://www.doctrine-project.org/projects/instantiator.html\",\n            \"keywords\": [\n                \"constructor\",\n                \"instantiate\"\n            ],\n            \"funding\": [\n                {\n                    \"url\": \"https://www.doctrine-project.org/sponsorship.html\",\n                    \"type\": \"custom\"\n                },\n                {\n                    \"url\": \"https://www.patreon.com/phpdoctrine\",\n                    \"type\": \"patreon\"\n                },\n                {\n                    \"url\": \"https://tidelift.com/funding/github/packagist/doctrine%2Finstantiator\",\n                    \"type\": \"tidelift\"\n                }\n            ],\n            \"time\": \"2020-05-29T17:27:14+00:00\"\n        },\n        {\n            \"name\": \"doctrine/lexer\",\n            \"version\": \"1.2.1\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/doctrine/lexer.git\",\n                \"reference\": \"e864bbf5904cb8f5bb334f99209b48018522f042\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/doctrine/lexer/zipball/e864bbf5904cb8f5bb334f99209b48018522f042\",\n                \"reference\": \"e864bbf5904cb8f5bb334f99209b48018522f042\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \"^7.2 || ^8.0\"\n            },\n            \"require-dev\": {\n                \"doctrine/coding-standard\": \"^6.0\",\n                \"phpstan/phpstan\": \"^0.11.8\",\n                \"phpunit/phpunit\": \"^8.2\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"branch-alias\": {\n                    \"dev-master\": \"1.2.x-dev\"\n                }\n            },\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Doctrine\\\\Common\\\\Lexer\\\\\": \"lib/Doctrine/Common/Lexer\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Guilherme Blanco\",\n                    \"email\": \"guilhermeblanco@gmail.com\"\n                },\n                {\n                    \"name\": \"Roman Borschel\",\n                    \"email\": \"roman@code-factory.org\"\n                },\n                {\n                    \"name\": \"Johannes Schmitt\",\n                    \"email\": \"schmittjoh@gmail.com\"\n                }\n            ],\n            \"description\": \"PHP Doctrine Lexer parser library that can be used in Top-Down, Recursive Descent Parsers.\",\n            \"homepage\": \"https://www.doctrine-project.org/projects/lexer.html\",\n            \"keywords\": [\n                \"annotations\",\n                \"docblock\",\n                \"lexer\",\n                \"parser\",\n                \"php\"\n            ],\n            \"funding\": [\n                {\n                    \"url\": \"https://www.doctrine-project.org/sponsorship.html\",\n                    \"type\": \"custom\"\n                },\n                {\n                    \"url\": \"https://www.patreon.com/phpdoctrine\",\n                    \"type\": \"patreon\"\n                },\n                {\n                    \"url\": \"https://tidelift.com/funding/github/packagist/doctrine%2Flexer\",\n                    \"type\": \"tidelift\"\n                }\n            ],\n            \"time\": \"2020-05-25T17:44:05+00:00\"\n        },\n        {\n            \"name\": \"doctrine/migrations\",\n            \"version\": \"3.0.1\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/doctrine/migrations.git\",\n                \"reference\": \"69eaf2ca5bc48357b43ddbdc31ccdffc0e2a0882\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/doctrine/migrations/zipball/69eaf2ca5bc48357b43ddbdc31ccdffc0e2a0882\",\n                \"reference\": \"69eaf2ca5bc48357b43ddbdc31ccdffc0e2a0882\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"doctrine/dbal\": \"^2.10\",\n                \"doctrine/event-manager\": \"^1.0\",\n                \"ocramius/package-versions\": \"^1.3\",\n                \"ocramius/proxy-manager\": \"^2.0.2\",\n                \"php\": \"^7.2\",\n                \"psr/log\": \"^1.1.3\",\n                \"symfony/console\": \"^3.4||^4.0||^5.0\",\n                \"symfony/stopwatch\": \"^3.4||^4.0||^5.0\"\n            },\n            \"require-dev\": {\n                \"doctrine/coding-standard\": \"^7.0\",\n                \"doctrine/orm\": \"^2.6\",\n                \"doctrine/persistence\": \"^1.3||^2.0\",\n                \"doctrine/sql-formatter\": \"^1.0\",\n                \"ext-pdo_sqlite\": \"*\",\n                \"phpstan/phpstan\": \"^0.12\",\n                \"phpstan/phpstan-deprecation-rules\": \"^0.12\",\n                \"phpstan/phpstan-phpunit\": \"^0.12\",\n                \"phpstan/phpstan-strict-rules\": \"^0.12\",\n                \"phpstan/phpstan-symfony\": \"^0.12\",\n                \"phpunit/phpunit\": \"^8.4\",\n                \"symfony/process\": \"^3.4||^4.0||^5.0\",\n                \"symfony/yaml\": \"^3.4||^4.0||^5.0\"\n            },\n            \"suggest\": {\n                \"doctrine/sql-formatter\": \"Allows to generate formatted SQL with the diff command.\",\n                \"symfony/yaml\": \"Allows the use of yaml for migration configuration files.\"\n            },\n            \"bin\": [\n                \"bin/doctrine-migrations\"\n            ],\n            \"type\": \"library\",\n            \"extra\": {\n                \"branch-alias\": {\n                    \"dev-master\": \"3.0.x-dev\"\n                }\n            },\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Doctrine\\\\Migrations\\\\\": \"lib/Doctrine/Migrations\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Benjamin Eberlei\",\n                    \"email\": \"kontakt@beberlei.de\"\n                },\n                {\n                    \"name\": \"Jonathan Wage\",\n                    \"email\": \"jonwage@gmail.com\"\n                },\n                {\n                    \"name\": \"Michael Simonson\",\n                    \"email\": \"contact@mikesimonson.com\"\n                }\n            ],\n            \"description\": \"PHP Doctrine Migrations project offer additional functionality on top of the database abstraction layer (DBAL) for versioning your database schema and easily deploying changes to it. It is a very easy to use and a powerful tool.\",\n            \"homepage\": \"https://www.doctrine-project.org/projects/migrations.html\",\n            \"keywords\": [\n                \"database\",\n                \"dbal\",\n                \"migrations\",\n                \"php\"\n            ],\n            \"funding\": [\n                {\n                    \"url\": \"https://www.doctrine-project.org/sponsorship.html\",\n                    \"type\": \"custom\"\n                },\n                {\n                    \"url\": \"https://www.patreon.com/phpdoctrine\",\n                    \"type\": \"patreon\"\n                },\n                {\n                    \"url\": \"https://tidelift.com/funding/github/packagist/doctrine%2Fmigrations\",\n                    \"type\": \"tidelift\"\n                }\n            ],\n            \"time\": \"2020-06-21T08:55:42+00:00\"\n        },\n        {\n            \"name\": \"doctrine/orm\",\n            \"version\": \"2.7.4\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/doctrine/orm.git\",\n                \"reference\": \"7d84a4998091ece4d645253ac65de9f879eeed2f\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/doctrine/orm/zipball/7d84a4998091ece4d645253ac65de9f879eeed2f\",\n                \"reference\": \"7d84a4998091ece4d645253ac65de9f879eeed2f\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"composer/package-versions-deprecated\": \"^1.8\",\n                \"doctrine/annotations\": \"^1.8\",\n                \"doctrine/cache\": \"^1.9.1\",\n                \"doctrine/collections\": \"^1.5\",\n                \"doctrine/common\": \"^2.11 || ^3.0\",\n                \"doctrine/dbal\": \"^2.9.3\",\n                \"doctrine/event-manager\": \"^1.1\",\n                \"doctrine/inflector\": \"^1.0\",\n                \"doctrine/instantiator\": \"^1.3\",\n                \"doctrine/lexer\": \"^1.0\",\n                \"doctrine/persistence\": \"^1.3.3 || ^2.0\",\n                \"ext-pdo\": \"*\",\n                \"php\": \"^7.1\",\n                \"symfony/console\": \"^3.0|^4.0|^5.0\"\n            },\n            \"require-dev\": {\n                \"doctrine/coding-standard\": \"^5.0\",\n                \"phpstan/phpstan\": \"^0.12.18\",\n                \"phpunit/phpunit\": \"^7.5\",\n                \"symfony/yaml\": \"^3.4|^4.0|^5.0\",\n                \"vimeo/psalm\": \"^3.11\"\n            },\n            \"suggest\": {\n                \"symfony/yaml\": \"If you want to use YAML Metadata Mapping Driver\"\n            },\n            \"bin\": [\n                \"bin/doctrine\"\n            ],\n            \"type\": \"library\",\n            \"extra\": {\n                \"branch-alias\": {\n                    \"dev-master\": \"2.7.x-dev\"\n                }\n            },\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Doctrine\\\\ORM\\\\\": \"lib/Doctrine/ORM\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Guilherme Blanco\",\n                    \"email\": \"guilhermeblanco@gmail.com\"\n                },\n                {\n                    \"name\": \"Roman Borschel\",\n                    \"email\": \"roman@code-factory.org\"\n                },\n                {\n                    \"name\": \"Benjamin Eberlei\",\n                    \"email\": \"kontakt@beberlei.de\"\n                },\n                {\n                    \"name\": \"Jonathan Wage\",\n                    \"email\": \"jonwage@gmail.com\"\n                },\n                {\n                    \"name\": \"Marco Pivetta\",\n                    \"email\": \"ocramius@gmail.com\"\n                }\n            ],\n            \"description\": \"Object-Relational-Mapper for PHP\",\n            \"homepage\": \"https://www.doctrine-project.org/projects/orm.html\",\n            \"keywords\": [\n                \"database\",\n                \"orm\"\n            ],\n            \"time\": \"2020-10-10T17:11:26+00:00\"\n        },\n        {\n            \"name\": \"doctrine/persistence\",\n            \"version\": \"2.1.0\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/doctrine/persistence.git\",\n                \"reference\": \"9899c16934053880876b920a3b8b02ed2337ac1d\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/doctrine/persistence/zipball/9899c16934053880876b920a3b8b02ed2337ac1d\",\n                \"reference\": \"9899c16934053880876b920a3b8b02ed2337ac1d\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"doctrine/annotations\": \"^1.0\",\n                \"doctrine/cache\": \"^1.0\",\n                \"doctrine/collections\": \"^1.0\",\n                \"doctrine/event-manager\": \"^1.0\",\n                \"php\": \"^7.1 || ^8.0\"\n            },\n            \"conflict\": {\n                \"doctrine/common\": \"<2.10@dev\"\n            },\n            \"require-dev\": {\n                \"composer/package-versions-deprecated\": \"^1.11\",\n                \"doctrine/coding-standard\": \"^6.0 || ^8.0\",\n                \"doctrine/common\": \"^3.0\",\n                \"phpstan/phpstan\": \"^0.12\",\n                \"phpunit/phpunit\": \"^7.5.20 || ^8.0 || ^9.0\",\n                \"vimeo/psalm\": \"^3.11\"\n            },\n            \"type\": \"library\",\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Doctrine\\\\Common\\\\\": \"lib/Doctrine/Common\",\n                    \"Doctrine\\\\Persistence\\\\\": \"lib/Doctrine/Persistence\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Guilherme Blanco\",\n                    \"email\": \"guilhermeblanco@gmail.com\"\n                },\n                {\n                    \"name\": \"Roman Borschel\",\n                    \"email\": \"roman@code-factory.org\"\n                },\n                {\n                    \"name\": \"Benjamin Eberlei\",\n                    \"email\": \"kontakt@beberlei.de\"\n                },\n                {\n                    \"name\": \"Jonathan Wage\",\n                    \"email\": \"jonwage@gmail.com\"\n                },\n                {\n                    \"name\": \"Johannes Schmitt\",\n                    \"email\": \"schmittjoh@gmail.com\"\n                },\n                {\n                    \"name\": \"Marco Pivetta\",\n                    \"email\": \"ocramius@gmail.com\"\n                }\n            ],\n            \"description\": \"The Doctrine Persistence project is a set of shared interfaces and functionality that the different Doctrine object mappers share.\",\n            \"homepage\": \"https://doctrine-project.org/projects/persistence.html\",\n            \"keywords\": [\n                \"mapper\",\n                \"object\",\n                \"odm\",\n                \"orm\",\n                \"persistence\"\n            ],\n            \"time\": \"2020-10-24T22:13:54+00:00\"\n        },\n        {\n            \"name\": \"doctrine/sql-formatter\",\n            \"version\": \"1.1.1\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/doctrine/sql-formatter.git\",\n                \"reference\": \"56070bebac6e77230ed7d306ad13528e60732871\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/doctrine/sql-formatter/zipball/56070bebac6e77230ed7d306ad13528e60732871\",\n                \"reference\": \"56070bebac6e77230ed7d306ad13528e60732871\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \"^7.1 || ^8.0\"\n            },\n            \"require-dev\": {\n                \"bamarni/composer-bin-plugin\": \"^1.4\"\n            },\n            \"bin\": [\n                \"bin/sql-formatter\"\n            ],\n            \"type\": \"library\",\n            \"extra\": {\n                \"branch-alias\": {\n                    \"dev-master\": \"1.x-dev\"\n                }\n            },\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Doctrine\\\\SqlFormatter\\\\\": \"src\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Jeremy Dorn\",\n                    \"email\": \"jeremy@jeremydorn.com\",\n                    \"homepage\": \"http://jeremydorn.com/\"\n                }\n            ],\n            \"description\": \"a PHP SQL highlighting library\",\n            \"homepage\": \"https://github.com/doctrine/sql-formatter/\",\n            \"keywords\": [\n                \"highlight\",\n                \"sql\"\n            ],\n            \"time\": \"2020-07-30T16:57:33+00:00\"\n        },\n        {\n            \"name\": \"egulias/email-validator\",\n            \"version\": \"2.1.23\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/egulias/EmailValidator.git\",\n                \"reference\": \"5fa792ad1853ae2bc60528dd3e5cbf4542d3c1df\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/egulias/EmailValidator/zipball/5fa792ad1853ae2bc60528dd3e5cbf4542d3c1df\",\n                \"reference\": \"5fa792ad1853ae2bc60528dd3e5cbf4542d3c1df\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"doctrine/lexer\": \"^1.0.1\",\n                \"php\": \">=5.5\",\n                \"symfony/polyfill-intl-idn\": \"^1.10\"\n            },\n            \"require-dev\": {\n                \"dominicsayers/isemail\": \"^3.0.7\",\n                \"phpunit/phpunit\": \"^4.8.36|^7.5.15\",\n                \"satooshi/php-coveralls\": \"^1.0.1\"\n            },\n            \"suggest\": {\n                \"ext-intl\": \"PHP Internationalization Libraries are required to use the SpoofChecking validation\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"branch-alias\": {\n                    \"dev-master\": \"2.1.x-dev\"\n                }\n            },\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Egulias\\\\EmailValidator\\\\\": \"src\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Eduardo Gulias Davis\"\n                }\n            ],\n            \"description\": \"A library for validating emails against several RFCs\",\n            \"homepage\": \"https://github.com/egulias/EmailValidator\",\n            \"keywords\": [\n                \"email\",\n                \"emailvalidation\",\n                \"emailvalidator\",\n                \"validation\",\n                \"validator\"\n            ],\n            \"time\": \"2020-10-31T20:37:35+00:00\"\n        },\n        {\n            \"name\": \"firebase/php-jwt\",\n            \"version\": \"v5.2.0\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/firebase/php-jwt.git\",\n                \"reference\": \"feb0e820b8436873675fd3aca04f3728eb2185cb\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/firebase/php-jwt/zipball/feb0e820b8436873675fd3aca04f3728eb2185cb\",\n                \"reference\": \"feb0e820b8436873675fd3aca04f3728eb2185cb\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=5.3.0\"\n            },\n            \"require-dev\": {\n                \"phpunit/phpunit\": \">=4.8 <=9\"\n            },\n            \"type\": \"library\",\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Firebase\\\\JWT\\\\\": \"src\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"BSD-3-Clause\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Neuman Vong\",\n                    \"email\": \"neuman+pear@twilio.com\",\n                    \"role\": \"Developer\"\n                },\n                {\n                    \"name\": \"Anant Narayanan\",\n                    \"email\": \"anant@php.net\",\n                    \"role\": \"Developer\"\n                }\n            ],\n            \"description\": \"A simple library to encode and decode JSON Web Tokens (JWT) in PHP. Should conform to the current spec.\",\n            \"homepage\": \"https://github.com/firebase/php-jwt\",\n            \"keywords\": [\n                \"jwt\",\n                \"php\"\n            ],\n            \"time\": \"2020-03-25T18:49:23+00:00\"\n        },\n        {\n            \"name\": \"google/apiclient\",\n            \"version\": \"v2.8.3\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/googleapis/google-api-php-client.git\",\n                \"reference\": \"81696e6206322e38c643cfcc96c4494ccfef8a32\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/googleapis/google-api-php-client/zipball/81696e6206322e38c643cfcc96c4494ccfef8a32\",\n                \"reference\": \"81696e6206322e38c643cfcc96c4494ccfef8a32\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"firebase/php-jwt\": \"~2.0||~3.0||~4.0||~5.0\",\n                \"google/apiclient-services\": \"~0.13\",\n                \"google/auth\": \"^1.10\",\n                \"guzzlehttp/guzzle\": \"~5.3.1||~6.0||~7.0\",\n                \"guzzlehttp/psr7\": \"^1.2\",\n                \"monolog/monolog\": \"^1.17|^2.0\",\n                \"php\": \">=5.4\",\n                \"phpseclib/phpseclib\": \"~0.3.10||~2.0\"\n            },\n            \"require-dev\": {\n                \"cache/filesystem-adapter\": \"^0.3.2\",\n                \"composer/composer\": \"^1.10\",\n                \"dealerdirect/phpcodesniffer-composer-installer\": \"^0.7\",\n                \"phpcompatibility/php-compatibility\": \"^9.2\",\n                \"phpunit/phpunit\": \"^4.8.36|^5.0\",\n                \"squizlabs/php_codesniffer\": \"~2.3\",\n                \"symfony/css-selector\": \"~2.1\",\n                \"symfony/dom-crawler\": \"~2.1\"\n            },\n            \"suggest\": {\n                \"cache/filesystem-adapter\": \"For caching certs and tokens (using Google\\\\Client::setCache)\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"branch-alias\": {\n                    \"dev-master\": \"2.x-dev\"\n                }\n            },\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Google\\\\\": \"src/\"\n                },\n                \"files\": [\n                    \"src/aliases.php\"\n                ],\n                \"classmap\": [\n                    \"src/aliases.php\"\n                ]\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"Apache-2.0\"\n            ],\n            \"description\": \"Client library for Google APIs\",\n            \"homepage\": \"http://developers.google.com/api-client-library/php\",\n            \"keywords\": [\n                \"google\"\n            ],\n            \"time\": \"2020-11-17T17:33:35+00:00\"\n        },\n        {\n            \"name\": \"google/apiclient-services\",\n            \"version\": \"v0.154\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/googleapis/google-api-php-client-services.git\",\n                \"reference\": \"7f44a314836c444b7894d648c1c49f83fb9d37ca\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/googleapis/google-api-php-client-services/zipball/7f44a314836c444b7894d648c1c49f83fb9d37ca\",\n                \"reference\": \"7f44a314836c444b7894d648c1c49f83fb9d37ca\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=5.4\"\n            },\n            \"require-dev\": {\n                \"phpunit/phpunit\": \"^4.8|^5\"\n            },\n            \"type\": \"library\",\n            \"autoload\": {\n                \"psr-0\": {\n                    \"Google_Service_\": \"src\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"Apache-2.0\"\n            ],\n            \"description\": \"Client library for Google APIs\",\n            \"homepage\": \"http://developers.google.com/api-client-library/php\",\n            \"keywords\": [\n                \"google\"\n            ],\n            \"time\": \"2020-11-19T19:01:11+00:00\"\n        },\n        {\n            \"name\": \"google/auth\",\n            \"version\": \"v1.14.3\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/googleapis/google-auth-library-php.git\",\n                \"reference\": \"c1503299c779af0cbc99b43788f75930988852cf\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/googleapis/google-auth-library-php/zipball/c1503299c779af0cbc99b43788f75930988852cf\",\n                \"reference\": \"c1503299c779af0cbc99b43788f75930988852cf\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"firebase/php-jwt\": \"~2.0|~3.0|~4.0|~5.0\",\n                \"guzzlehttp/guzzle\": \"^5.3.1|^6.2.1|^7.0\",\n                \"guzzlehttp/psr7\": \"^1.2\",\n                \"php\": \">=5.4\",\n                \"psr/cache\": \"^1.0\",\n                \"psr/http-message\": \"^1.0\"\n            },\n            \"require-dev\": {\n                \"guzzlehttp/promises\": \"0.1.1|^1.3\",\n                \"kelvinmo/simplejwt\": \"^0.2.5\",\n                \"phpseclib/phpseclib\": \"^2\",\n                \"phpunit/phpunit\": \"^4.8.36|^5.7\",\n                \"sebastian/comparator\": \">=1.2.3\",\n                \"squizlabs/php_codesniffer\": \"^3.5\"\n            },\n            \"suggest\": {\n                \"phpseclib/phpseclib\": \"May be used in place of OpenSSL for signing strings or for token management. Please require version ^2.\"\n            },\n            \"type\": \"library\",\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Google\\\\Auth\\\\\": \"src\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"Apache-2.0\"\n            ],\n            \"description\": \"Google Auth Library for PHP\",\n            \"homepage\": \"http://github.com/google/google-auth-library-php\",\n            \"keywords\": [\n                \"Authentication\",\n                \"google\",\n                \"oauth2\"\n            ],\n            \"time\": \"2020-10-16T21:33:48+00:00\"\n        },\n        {\n            \"name\": \"guzzlehttp/guzzle\",\n            \"version\": \"7.2.0\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/guzzle/guzzle.git\",\n                \"reference\": \"0aa74dfb41ae110835923ef10a9d803a22d50e79\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/guzzle/guzzle/zipball/0aa74dfb41ae110835923ef10a9d803a22d50e79\",\n                \"reference\": \"0aa74dfb41ae110835923ef10a9d803a22d50e79\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"ext-json\": \"*\",\n                \"guzzlehttp/promises\": \"^1.4\",\n                \"guzzlehttp/psr7\": \"^1.7\",\n                \"php\": \"^7.2.5 || ^8.0\",\n                \"psr/http-client\": \"^1.0\"\n            },\n            \"provide\": {\n                \"psr/http-client-implementation\": \"1.0\"\n            },\n            \"require-dev\": {\n                \"ext-curl\": \"*\",\n                \"php-http/client-integration-tests\": \"^3.0\",\n                \"phpunit/phpunit\": \"^8.5.5 || ^9.3.5\",\n                \"psr/log\": \"^1.1\"\n            },\n            \"suggest\": {\n                \"ext-curl\": \"Required for CURL handler support\",\n                \"ext-intl\": \"Required for Internationalized Domain Name (IDN) support\",\n                \"psr/log\": \"Required for using the Log middleware\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"branch-alias\": {\n                    \"dev-master\": \"7.1-dev\"\n                }\n            },\n            \"autoload\": {\n                \"psr-4\": {\n                    \"GuzzleHttp\\\\\": \"src/\"\n                },\n                \"files\": [\n                    \"src/functions_include.php\"\n                ]\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Michael Dowling\",\n                    \"email\": \"mtdowling@gmail.com\",\n                    \"homepage\": \"https://github.com/mtdowling\"\n                },\n                {\n                    \"name\": \"Márk Sági-Kazár\",\n                    \"email\": \"mark.sagikazar@gmail.com\",\n                    \"homepage\": \"https://sagikazarmark.hu\"\n                }\n            ],\n            \"description\": \"Guzzle is a PHP HTTP client library\",\n            \"homepage\": \"http://guzzlephp.org/\",\n            \"keywords\": [\n                \"client\",\n                \"curl\",\n                \"framework\",\n                \"http\",\n                \"http client\",\n                \"psr-18\",\n                \"psr-7\",\n                \"rest\",\n                \"web service\"\n            ],\n            \"funding\": [\n                {\n                    \"url\": \"https://github.com/GrahamCampbell\",\n                    \"type\": \"github\"\n                },\n                {\n                    \"url\": \"https://github.com/Nyholm\",\n                    \"type\": \"github\"\n                },\n                {\n                    \"url\": \"https://github.com/alexeyshockov\",\n                    \"type\": \"github\"\n                },\n                {\n                    \"url\": \"https://github.com/gmponos\",\n                    \"type\": \"github\"\n                }\n            ],\n            \"time\": \"2020-10-10T11:47:56+00:00\"\n        },\n        {\n            \"name\": \"guzzlehttp/promises\",\n            \"version\": \"1.4.0\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/guzzle/promises.git\",\n                \"reference\": \"60d379c243457e073cff02bc323a2a86cb355631\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/guzzle/promises/zipball/60d379c243457e073cff02bc323a2a86cb355631\",\n                \"reference\": \"60d379c243457e073cff02bc323a2a86cb355631\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=5.5\"\n            },\n            \"require-dev\": {\n                \"symfony/phpunit-bridge\": \"^4.4 || ^5.1\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"branch-alias\": {\n                    \"dev-master\": \"1.4-dev\"\n                }\n            },\n            \"autoload\": {\n                \"psr-4\": {\n                    \"GuzzleHttp\\\\Promise\\\\\": \"src/\"\n                },\n                \"files\": [\n                    \"src/functions_include.php\"\n                ]\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Michael Dowling\",\n                    \"email\": \"mtdowling@gmail.com\",\n                    \"homepage\": \"https://github.com/mtdowling\"\n                }\n            ],\n            \"description\": \"Guzzle promises library\",\n            \"keywords\": [\n                \"promise\"\n            ],\n            \"time\": \"2020-09-30T07:37:28+00:00\"\n        },\n        {\n            \"name\": \"guzzlehttp/psr7\",\n            \"version\": \"1.7.0\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/guzzle/psr7.git\",\n                \"reference\": \"53330f47520498c0ae1f61f7e2c90f55690c06a3\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/guzzle/psr7/zipball/53330f47520498c0ae1f61f7e2c90f55690c06a3\",\n                \"reference\": \"53330f47520498c0ae1f61f7e2c90f55690c06a3\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=5.4.0\",\n                \"psr/http-message\": \"~1.0\",\n                \"ralouphie/getallheaders\": \"^2.0.5 || ^3.0.0\"\n            },\n            \"provide\": {\n                \"psr/http-message-implementation\": \"1.0\"\n            },\n            \"require-dev\": {\n                \"ext-zlib\": \"*\",\n                \"phpunit/phpunit\": \"~4.8.36 || ^5.7.27 || ^6.5.14 || ^7.5.20 || ^8.5.8 || ^9.3.10\"\n            },\n            \"suggest\": {\n                \"laminas/laminas-httphandlerrunner\": \"Emit PSR-7 responses\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"branch-alias\": {\n                    \"dev-master\": \"1.7-dev\"\n                }\n            },\n            \"autoload\": {\n                \"psr-4\": {\n                    \"GuzzleHttp\\\\Psr7\\\\\": \"src/\"\n                },\n                \"files\": [\n                    \"src/functions_include.php\"\n                ]\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Michael Dowling\",\n                    \"email\": \"mtdowling@gmail.com\",\n                    \"homepage\": \"https://github.com/mtdowling\"\n                },\n                {\n                    \"name\": \"Tobias Schultze\",\n                    \"homepage\": \"https://github.com/Tobion\"\n                }\n            ],\n            \"description\": \"PSR-7 message implementation that also provides common utility methods\",\n            \"keywords\": [\n                \"http\",\n                \"message\",\n                \"psr-7\",\n                \"request\",\n                \"response\",\n                \"stream\",\n                \"uri\",\n                \"url\"\n            ],\n            \"time\": \"2020-09-30T07:37:11+00:00\"\n        },\n        {\n            \"name\": \"knpuniversity/oauth2-client-bundle\",\n            \"version\": \"v2.5.1\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/knpuniversity/oauth2-client-bundle.git\",\n                \"reference\": \"5e5919bf321f76121df93c55fdbf82a0c481bd5f\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/knpuniversity/oauth2-client-bundle/zipball/5e5919bf321f76121df93c55fdbf82a0c481bd5f\",\n                \"reference\": \"5e5919bf321f76121df93c55fdbf82a0c481bd5f\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"league/oauth2-client\": \"^1.0|^2.0\",\n                \"php\": \"^7.1.3\",\n                \"symfony/dependency-injection\": \"^4.4|^5.0\",\n                \"symfony/framework-bundle\": \"^4.4|^5.0\",\n                \"symfony/http-foundation\": \"^4.4|^5.0\",\n                \"symfony/routing\": \"^4.4|^5.0\"\n            },\n            \"require-dev\": {\n                \"league/oauth2-facebook\": \"^1.1|^2.0\",\n                \"phpspec/prophecy\": \"^1.8\",\n                \"phpstan/phpstan\": \"^0.11.16\",\n                \"symfony/phpunit-bridge\": \"^4.4|^5.0\",\n                \"symfony/security-guard\": \"^4.4|^5.0\",\n                \"symfony/yaml\": \"^4.4|^5.0\"\n            },\n            \"suggest\": {\n                \"symfony/security-guard\": \"For integration with Symfony's Guard Security layer\"\n            },\n            \"type\": \"symfony-bundle\",\n            \"autoload\": {\n                \"psr-4\": {\n                    \"KnpU\\\\OAuth2ClientBundle\\\\\": \"src/\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Ryan Weaver\",\n                    \"email\": \"ryan@symfonycasts.com\"\n                }\n            ],\n            \"description\": \"Integration with league/oauth2-client to provide services\",\n            \"homepage\": \"https://symfonycasts.com\",\n            \"keywords\": [\n                \"oauth\",\n                \"oauth2\"\n            ],\n            \"time\": \"2020-11-21T16:21:33+00:00\"\n        },\n        {\n            \"name\": \"laminas/laminas-code\",\n            \"version\": \"3.4.1\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/laminas/laminas-code.git\",\n                \"reference\": \"1cb8f203389ab1482bf89c0e70a04849bacd7766\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/laminas/laminas-code/zipball/1cb8f203389ab1482bf89c0e70a04849bacd7766\",\n                \"reference\": \"1cb8f203389ab1482bf89c0e70a04849bacd7766\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"laminas/laminas-eventmanager\": \"^2.6 || ^3.0\",\n                \"laminas/laminas-zendframework-bridge\": \"^1.0\",\n                \"php\": \"^7.1\"\n            },\n            \"conflict\": {\n                \"phpspec/prophecy\": \"<1.9.0\"\n            },\n            \"replace\": {\n                \"zendframework/zend-code\": \"self.version\"\n            },\n            \"require-dev\": {\n                \"doctrine/annotations\": \"^1.7\",\n                \"ext-phar\": \"*\",\n                \"laminas/laminas-coding-standard\": \"^1.0\",\n                \"laminas/laminas-stdlib\": \"^2.7 || ^3.0\",\n                \"phpunit/phpunit\": \"^7.5.16 || ^8.4\"\n            },\n            \"suggest\": {\n                \"doctrine/annotations\": \"Doctrine\\\\Common\\\\Annotations >=1.0 for annotation features\",\n                \"laminas/laminas-stdlib\": \"Laminas\\\\Stdlib component\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"branch-alias\": {\n                    \"dev-master\": \"3.4.x-dev\",\n                    \"dev-develop\": \"3.5.x-dev\",\n                    \"dev-dev-4.0\": \"4.0.x-dev\"\n                }\n            },\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Laminas\\\\Code\\\\\": \"src/\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"BSD-3-Clause\"\n            ],\n            \"description\": \"Extensions to the PHP Reflection API, static code scanning, and code generation\",\n            \"homepage\": \"https://laminas.dev\",\n            \"keywords\": [\n                \"code\",\n                \"laminas\"\n            ],\n            \"time\": \"2019-12-31T16:28:24+00:00\"\n        },\n        {\n            \"name\": \"laminas/laminas-eventmanager\",\n            \"version\": \"3.3.0\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/laminas/laminas-eventmanager.git\",\n                \"reference\": \"1940ccf30e058b2fd66f5a9d696f1b5e0027b082\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/laminas/laminas-eventmanager/zipball/1940ccf30e058b2fd66f5a9d696f1b5e0027b082\",\n                \"reference\": \"1940ccf30e058b2fd66f5a9d696f1b5e0027b082\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"laminas/laminas-zendframework-bridge\": \"^1.0\",\n                \"php\": \"^7.3 || ^8.0\"\n            },\n            \"replace\": {\n                \"zendframework/zend-eventmanager\": \"^3.2.1\"\n            },\n            \"require-dev\": {\n                \"container-interop/container-interop\": \"^1.1\",\n                \"laminas/laminas-coding-standard\": \"~1.0.0\",\n                \"laminas/laminas-stdlib\": \"^2.7.3 || ^3.0\",\n                \"phpbench/phpbench\": \"^0.17.1\",\n                \"phpunit/phpunit\": \"^8.5.8\"\n            },\n            \"suggest\": {\n                \"container-interop/container-interop\": \"^1.1, to use the lazy listeners feature\",\n                \"laminas/laminas-stdlib\": \"^2.7.3 || ^3.0, to use the FilterChain feature\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"branch-alias\": {\n                    \"dev-master\": \"3.3.x-dev\",\n                    \"dev-develop\": \"3.4.x-dev\"\n                }\n            },\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Laminas\\\\EventManager\\\\\": \"src/\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"BSD-3-Clause\"\n            ],\n            \"description\": \"Trigger and listen to events within a PHP application\",\n            \"homepage\": \"https://laminas.dev\",\n            \"keywords\": [\n                \"event\",\n                \"eventmanager\",\n                \"events\",\n                \"laminas\"\n            ],\n            \"funding\": [\n                {\n                    \"url\": \"https://funding.communitybridge.org/projects/laminas-project\",\n                    \"type\": \"community_bridge\"\n                }\n            ],\n            \"time\": \"2020-08-25T11:10:44+00:00\"\n        },\n        {\n            \"name\": \"laminas/laminas-zendframework-bridge\",\n            \"version\": \"1.1.1\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/laminas/laminas-zendframework-bridge.git\",\n                \"reference\": \"6ede70583e101030bcace4dcddd648f760ddf642\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/laminas/laminas-zendframework-bridge/zipball/6ede70583e101030bcace4dcddd648f760ddf642\",\n                \"reference\": \"6ede70583e101030bcace4dcddd648f760ddf642\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \"^5.6 || ^7.0 || ^8.0\"\n            },\n            \"require-dev\": {\n                \"phpunit/phpunit\": \"^5.7 || ^6.5 || ^7.5 || ^8.1 || ^9.3\",\n                \"squizlabs/php_codesniffer\": \"^3.5\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"laminas\": {\n                    \"module\": \"Laminas\\\\ZendFrameworkBridge\"\n                }\n            },\n            \"autoload\": {\n                \"files\": [\n                    \"src/autoload.php\"\n                ],\n                \"psr-4\": {\n                    \"Laminas\\\\ZendFrameworkBridge\\\\\": \"src//\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"BSD-3-Clause\"\n            ],\n            \"description\": \"Alias legacy ZF class names to Laminas Project equivalents.\",\n            \"keywords\": [\n                \"ZendFramework\",\n                \"autoloading\",\n                \"laminas\",\n                \"zf\"\n            ],\n            \"funding\": [\n                {\n                    \"url\": \"https://funding.communitybridge.org/projects/laminas-project\",\n                    \"type\": \"community_bridge\"\n                }\n            ],\n            \"time\": \"2020-09-14T14:23:00+00:00\"\n        },\n        {\n            \"name\": \"league/oauth2-client\",\n            \"version\": \"2.6.0\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/thephpleague/oauth2-client.git\",\n                \"reference\": \"badb01e62383430706433191b82506b6df24ad98\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/thephpleague/oauth2-client/zipball/badb01e62383430706433191b82506b6df24ad98\",\n                \"reference\": \"badb01e62383430706433191b82506b6df24ad98\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"guzzlehttp/guzzle\": \"^6.0 || ^7.0\",\n                \"paragonie/random_compat\": \"^1 || ^2 || ^9.99\",\n                \"php\": \"^5.6 || ^7.0 || ^8.0\"\n            },\n            \"require-dev\": {\n                \"mockery/mockery\": \"^1.3\",\n                \"php-parallel-lint/php-parallel-lint\": \"^1.2\",\n                \"phpunit/phpunit\": \"^5.7 || ^6.0 || ^9.3\",\n                \"squizlabs/php_codesniffer\": \"^2.3 || ^3.0\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"branch-alias\": {\n                    \"dev-2.x\": \"2.0.x-dev\"\n                }\n            },\n            \"autoload\": {\n                \"psr-4\": {\n                    \"League\\\\OAuth2\\\\Client\\\\\": \"src/\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Alex Bilbie\",\n                    \"email\": \"hello@alexbilbie.com\",\n                    \"homepage\": \"http://www.alexbilbie.com\",\n                    \"role\": \"Developer\"\n                },\n                {\n                    \"name\": \"Woody Gilk\",\n                    \"homepage\": \"https://github.com/shadowhand\",\n                    \"role\": \"Contributor\"\n                }\n            ],\n            \"description\": \"OAuth 2.0 Client Library\",\n            \"keywords\": [\n                \"Authentication\",\n                \"SSO\",\n                \"authorization\",\n                \"identity\",\n                \"idp\",\n                \"oauth\",\n                \"oauth2\",\n                \"single sign on\"\n            ],\n            \"time\": \"2020-10-28T02:03:40+00:00\"\n        },\n        {\n            \"name\": \"monolog/monolog\",\n            \"version\": \"2.1.1\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/Seldaek/monolog.git\",\n                \"reference\": \"f9eee5cec93dfb313a38b6b288741e84e53f02d5\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/Seldaek/monolog/zipball/f9eee5cec93dfb313a38b6b288741e84e53f02d5\",\n                \"reference\": \"f9eee5cec93dfb313a38b6b288741e84e53f02d5\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=7.2\",\n                \"psr/log\": \"^1.0.1\"\n            },\n            \"provide\": {\n                \"psr/log-implementation\": \"1.0.0\"\n            },\n            \"require-dev\": {\n                \"aws/aws-sdk-php\": \"^2.4.9 || ^3.0\",\n                \"doctrine/couchdb\": \"~1.0@dev\",\n                \"elasticsearch/elasticsearch\": \"^6.0\",\n                \"graylog2/gelf-php\": \"^1.4.2\",\n                \"php-amqplib/php-amqplib\": \"~2.4\",\n                \"php-console/php-console\": \"^3.1.3\",\n                \"php-parallel-lint/php-parallel-lint\": \"^1.0\",\n                \"phpspec/prophecy\": \"^1.6.1\",\n                \"phpunit/phpunit\": \"^8.5\",\n                \"predis/predis\": \"^1.1\",\n                \"rollbar/rollbar\": \"^1.3\",\n                \"ruflin/elastica\": \">=0.90 <3.0\",\n                \"swiftmailer/swiftmailer\": \"^5.3|^6.0\"\n            },\n            \"suggest\": {\n                \"aws/aws-sdk-php\": \"Allow sending log messages to AWS services like DynamoDB\",\n                \"doctrine/couchdb\": \"Allow sending log messages to a CouchDB server\",\n                \"elasticsearch/elasticsearch\": \"Allow sending log messages to an Elasticsearch server via official client\",\n                \"ext-amqp\": \"Allow sending log messages to an AMQP server (1.0+ required)\",\n                \"ext-mbstring\": \"Allow to work properly with unicode symbols\",\n                \"ext-mongodb\": \"Allow sending log messages to a MongoDB server (via driver)\",\n                \"graylog2/gelf-php\": \"Allow sending log messages to a GrayLog2 server\",\n                \"mongodb/mongodb\": \"Allow sending log messages to a MongoDB server (via library)\",\n                \"php-amqplib/php-amqplib\": \"Allow sending log messages to an AMQP server using php-amqplib\",\n                \"php-console/php-console\": \"Allow sending log messages to Google Chrome\",\n                \"rollbar/rollbar\": \"Allow sending log messages to Rollbar\",\n                \"ruflin/elastica\": \"Allow sending log messages to an Elastic Search server\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"branch-alias\": {\n                    \"dev-master\": \"2.x-dev\"\n                }\n            },\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Monolog\\\\\": \"src/Monolog\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Jordi Boggiano\",\n                    \"email\": \"j.boggiano@seld.be\",\n                    \"homepage\": \"http://seld.be\"\n                }\n            ],\n            \"description\": \"Sends your logs to files, sockets, inboxes, databases and various web services\",\n            \"homepage\": \"http://github.com/Seldaek/monolog\",\n            \"keywords\": [\n                \"log\",\n                \"logging\",\n                \"psr-3\"\n            ],\n            \"funding\": [\n                {\n                    \"url\": \"https://github.com/Seldaek\",\n                    \"type\": \"github\"\n                },\n                {\n                    \"url\": \"https://tidelift.com/funding/github/packagist/monolog/monolog\",\n                    \"type\": \"tidelift\"\n                }\n            ],\n            \"time\": \"2020-07-23T08:41:23+00:00\"\n        },\n        {\n            \"name\": \"ocramius/proxy-manager\",\n            \"version\": \"2.8.0\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/Ocramius/ProxyManager.git\",\n                \"reference\": \"ac1dd414fd114cfc0da9930e0ab46063c2f5e62a\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/Ocramius/ProxyManager/zipball/ac1dd414fd114cfc0da9930e0ab46063c2f5e62a\",\n                \"reference\": \"ac1dd414fd114cfc0da9930e0ab46063c2f5e62a\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"laminas/laminas-code\": \"^3.4.1\",\n                \"ocramius/package-versions\": \"^1.8.0\",\n                \"php\": \"~7.4.1\",\n                \"webimpress/safe-writer\": \"^2.0.1\"\n            },\n            \"conflict\": {\n                \"doctrine/annotations\": \"<1.6.1\",\n                \"laminas/laminas-stdlib\": \"<3.2.1\",\n                \"zendframework/zend-stdlib\": \"<3.2.1\"\n            },\n            \"require-dev\": {\n                \"doctrine/coding-standard\": \"^6.0.0\",\n                \"ext-phar\": \"*\",\n                \"infection/infection\": \"^0.16.2\",\n                \"nikic/php-parser\": \"^4.4.0\",\n                \"phpbench/phpbench\": \"^0.17.0\",\n                \"phpunit/phpunit\": \"^9.1.1\",\n                \"slevomat/coding-standard\": \"^5.0.4\",\n                \"squizlabs/php_codesniffer\": \"^3.5.4\",\n                \"vimeo/psalm\": \"^3.11.1\"\n            },\n            \"suggest\": {\n                \"laminas/laminas-json\": \"To have the JsonRpc adapter (Remote Object feature)\",\n                \"laminas/laminas-soap\": \"To have the Soap adapter (Remote Object feature)\",\n                \"laminas/laminas-xmlrpc\": \"To have the XmlRpc adapter (Remote Object feature)\",\n                \"ocramius/generated-hydrator\": \"To have very fast object to array to object conversion for ghost objects\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"branch-alias\": {\n                    \"dev-master\": \"3.0.x-dev\"\n                }\n            },\n            \"autoload\": {\n                \"psr-4\": {\n                    \"ProxyManager\\\\\": \"src/ProxyManager\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Marco Pivetta\",\n                    \"email\": \"ocramius@gmail.com\",\n                    \"homepage\": \"http://ocramius.github.io/\"\n                }\n            ],\n            \"description\": \"A library providing utilities to generate, instantiate and generally operate with Object Proxies\",\n            \"homepage\": \"https://github.com/Ocramius/ProxyManager\",\n            \"keywords\": [\n                \"aop\",\n                \"lazy loading\",\n                \"proxy\",\n                \"proxy pattern\",\n                \"service proxies\"\n            ],\n            \"funding\": [\n                {\n                    \"url\": \"https://github.com/Ocramius\",\n                    \"type\": \"github\"\n                },\n                {\n                    \"url\": \"https://tidelift.com/funding/github/packagist/ocramius/proxy-manager\",\n                    \"type\": \"tidelift\"\n                }\n            ],\n            \"time\": \"2020-04-13T14:42:16+00:00\"\n        },\n        {\n            \"name\": \"phpdocumentor/reflection-common\",\n            \"version\": \"2.2.0\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/phpDocumentor/ReflectionCommon.git\",\n                \"reference\": \"1d01c49d4ed62f25aa84a747ad35d5a16924662b\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/phpDocumentor/ReflectionCommon/zipball/1d01c49d4ed62f25aa84a747ad35d5a16924662b\",\n                \"reference\": \"1d01c49d4ed62f25aa84a747ad35d5a16924662b\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \"^7.2 || ^8.0\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"branch-alias\": {\n                    \"dev-2.x\": \"2.x-dev\"\n                }\n            },\n            \"autoload\": {\n                \"psr-4\": {\n                    \"phpDocumentor\\\\Reflection\\\\\": \"src/\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Jaap van Otterdijk\",\n                    \"email\": \"opensource@ijaap.nl\"\n                }\n            ],\n            \"description\": \"Common reflection classes used by phpdocumentor to reflect the code structure\",\n            \"homepage\": \"http://www.phpdoc.org\",\n            \"keywords\": [\n                \"FQSEN\",\n                \"phpDocumentor\",\n                \"phpdoc\",\n                \"reflection\",\n                \"static analysis\"\n            ],\n            \"time\": \"2020-06-27T09:03:43+00:00\"\n        },\n        {\n            \"name\": \"phpdocumentor/reflection-docblock\",\n            \"version\": \"5.2.2\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/phpDocumentor/ReflectionDocBlock.git\",\n                \"reference\": \"069a785b2141f5bcf49f3e353548dc1cce6df556\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/phpDocumentor/ReflectionDocBlock/zipball/069a785b2141f5bcf49f3e353548dc1cce6df556\",\n                \"reference\": \"069a785b2141f5bcf49f3e353548dc1cce6df556\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"ext-filter\": \"*\",\n                \"php\": \"^7.2 || ^8.0\",\n                \"phpdocumentor/reflection-common\": \"^2.2\",\n                \"phpdocumentor/type-resolver\": \"^1.3\",\n                \"webmozart/assert\": \"^1.9.1\"\n            },\n            \"require-dev\": {\n                \"mockery/mockery\": \"~1.3.2\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"branch-alias\": {\n                    \"dev-master\": \"5.x-dev\"\n                }\n            },\n            \"autoload\": {\n                \"psr-4\": {\n                    \"phpDocumentor\\\\Reflection\\\\\": \"src\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Mike van Riel\",\n                    \"email\": \"me@mikevanriel.com\"\n                },\n                {\n                    \"name\": \"Jaap van Otterdijk\",\n                    \"email\": \"account@ijaap.nl\"\n                }\n            ],\n            \"description\": \"With this component, a library can provide support for annotations via DocBlocks or otherwise retrieve information that is embedded in a DocBlock.\",\n            \"time\": \"2020-09-03T19:13:55+00:00\"\n        },\n        {\n            \"name\": \"phpdocumentor/type-resolver\",\n            \"version\": \"1.4.0\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/phpDocumentor/TypeResolver.git\",\n                \"reference\": \"6a467b8989322d92aa1c8bf2bebcc6e5c2ba55c0\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/phpDocumentor/TypeResolver/zipball/6a467b8989322d92aa1c8bf2bebcc6e5c2ba55c0\",\n                \"reference\": \"6a467b8989322d92aa1c8bf2bebcc6e5c2ba55c0\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \"^7.2 || ^8.0\",\n                \"phpdocumentor/reflection-common\": \"^2.0\"\n            },\n            \"require-dev\": {\n                \"ext-tokenizer\": \"*\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"branch-alias\": {\n                    \"dev-1.x\": \"1.x-dev\"\n                }\n            },\n            \"autoload\": {\n                \"psr-4\": {\n                    \"phpDocumentor\\\\Reflection\\\\\": \"src\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Mike van Riel\",\n                    \"email\": \"me@mikevanriel.com\"\n                }\n            ],\n            \"description\": \"A PSR-5 based resolver of Class names, Types and Structural Element Names\",\n            \"time\": \"2020-09-17T18:55:26+00:00\"\n        },\n        {\n            \"name\": \"phpseclib/phpseclib\",\n            \"version\": \"2.0.29\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/phpseclib/phpseclib.git\",\n                \"reference\": \"497856a8d997f640b4a516062f84228a772a48a8\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/phpseclib/phpseclib/zipball/497856a8d997f640b4a516062f84228a772a48a8\",\n                \"reference\": \"497856a8d997f640b4a516062f84228a772a48a8\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=5.3.3\"\n            },\n            \"require-dev\": {\n                \"phing/phing\": \"~2.7\",\n                \"phpunit/phpunit\": \"^4.8.35|^5.7|^6.0\",\n                \"squizlabs/php_codesniffer\": \"~2.0\"\n            },\n            \"suggest\": {\n                \"ext-gmp\": \"Install the GMP (GNU Multiple Precision) extension in order to speed up arbitrary precision integer arithmetic operations.\",\n                \"ext-libsodium\": \"SSH2/SFTP can make use of some algorithms provided by the libsodium-php extension.\",\n                \"ext-mcrypt\": \"Install the Mcrypt extension in order to speed up a few other cryptographic operations.\",\n                \"ext-openssl\": \"Install the OpenSSL extension in order to speed up a wide variety of cryptographic operations.\"\n            },\n            \"type\": \"library\",\n            \"autoload\": {\n                \"files\": [\n                    \"phpseclib/bootstrap.php\"\n                ],\n                \"psr-4\": {\n                    \"phpseclib\\\\\": \"phpseclib/\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Jim Wigginton\",\n                    \"email\": \"terrafrost@php.net\",\n                    \"role\": \"Lead Developer\"\n                },\n                {\n                    \"name\": \"Patrick Monnerat\",\n                    \"email\": \"pm@datasphere.ch\",\n                    \"role\": \"Developer\"\n                },\n                {\n                    \"name\": \"Andreas Fischer\",\n                    \"email\": \"bantu@phpbb.com\",\n                    \"role\": \"Developer\"\n                },\n                {\n                    \"name\": \"Hans-Jürgen Petrich\",\n                    \"email\": \"petrich@tronic-media.com\",\n                    \"role\": \"Developer\"\n                },\n                {\n                    \"name\": \"Graham Campbell\",\n                    \"email\": \"graham@alt-three.com\",\n                    \"role\": \"Developer\"\n                }\n            ],\n            \"description\": \"PHP Secure Communications Library - Pure-PHP implementations of RSA, AES, SSH2, SFTP, X.509 etc.\",\n            \"homepage\": \"http://phpseclib.sourceforge.net\",\n            \"keywords\": [\n                \"BigInteger\",\n                \"aes\",\n                \"asn.1\",\n                \"asn1\",\n                \"blowfish\",\n                \"crypto\",\n                \"cryptography\",\n                \"encryption\",\n                \"rsa\",\n                \"security\",\n                \"sftp\",\n                \"signature\",\n                \"signing\",\n                \"ssh\",\n                \"twofish\",\n                \"x.509\",\n                \"x509\"\n            ],\n            \"funding\": [\n                {\n                    \"url\": \"https://github.com/terrafrost\",\n                    \"type\": \"github\"\n                },\n                {\n                    \"url\": \"https://www.patreon.com/phpseclib\",\n                    \"type\": \"patreon\"\n                },\n                {\n                    \"url\": \"https://tidelift.com/funding/github/packagist/phpseclib/phpseclib\",\n                    \"type\": \"tidelift\"\n                }\n            ],\n            \"time\": \"2020-09-08T04:24:43+00:00\"\n        },\n        {\n            \"name\": \"psr/cache\",\n            \"version\": \"1.0.1\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/php-fig/cache.git\",\n                \"reference\": \"d11b50ad223250cf17b86e38383413f5a6764bf8\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/php-fig/cache/zipball/d11b50ad223250cf17b86e38383413f5a6764bf8\",\n                \"reference\": \"d11b50ad223250cf17b86e38383413f5a6764bf8\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=5.3.0\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"branch-alias\": {\n                    \"dev-master\": \"1.0.x-dev\"\n                }\n            },\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Psr\\\\Cache\\\\\": \"src/\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"PHP-FIG\",\n                    \"homepage\": \"http://www.php-fig.org/\"\n                }\n            ],\n            \"description\": \"Common interface for caching libraries\",\n            \"keywords\": [\n                \"cache\",\n                \"psr\",\n                \"psr-6\"\n            ],\n            \"time\": \"2016-08-06T20:24:11+00:00\"\n        },\n        {\n            \"name\": \"psr/container\",\n            \"version\": \"1.0.0\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/php-fig/container.git\",\n                \"reference\": \"b7ce3b176482dbbc1245ebf52b181af44c2cf55f\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/php-fig/container/zipball/b7ce3b176482dbbc1245ebf52b181af44c2cf55f\",\n                \"reference\": \"b7ce3b176482dbbc1245ebf52b181af44c2cf55f\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=5.3.0\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"branch-alias\": {\n                    \"dev-master\": \"1.0.x-dev\"\n                }\n            },\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Psr\\\\Container\\\\\": \"src/\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"PHP-FIG\",\n                    \"homepage\": \"http://www.php-fig.org/\"\n                }\n            ],\n            \"description\": \"Common Container Interface (PHP FIG PSR-11)\",\n            \"homepage\": \"https://github.com/php-fig/container\",\n            \"keywords\": [\n                \"PSR-11\",\n                \"container\",\n                \"container-interface\",\n                \"container-interop\",\n                \"psr\"\n            ],\n            \"time\": \"2017-02-14T16:28:37+00:00\"\n        },\n        {\n            \"name\": \"psr/event-dispatcher\",\n            \"version\": \"1.0.0\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/php-fig/event-dispatcher.git\",\n                \"reference\": \"dbefd12671e8a14ec7f180cab83036ed26714bb0\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/php-fig/event-dispatcher/zipball/dbefd12671e8a14ec7f180cab83036ed26714bb0\",\n                \"reference\": \"dbefd12671e8a14ec7f180cab83036ed26714bb0\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=7.2.0\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"branch-alias\": {\n                    \"dev-master\": \"1.0.x-dev\"\n                }\n            },\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Psr\\\\EventDispatcher\\\\\": \"src/\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"PHP-FIG\",\n                    \"homepage\": \"http://www.php-fig.org/\"\n                }\n            ],\n            \"description\": \"Standard interfaces for event handling.\",\n            \"keywords\": [\n                \"events\",\n                \"psr\",\n                \"psr-14\"\n            ],\n            \"time\": \"2019-01-08T18:20:26+00:00\"\n        },\n        {\n            \"name\": \"psr/http-client\",\n            \"version\": \"1.0.1\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/php-fig/http-client.git\",\n                \"reference\": \"2dfb5f6c5eff0e91e20e913f8c5452ed95b86621\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/php-fig/http-client/zipball/2dfb5f6c5eff0e91e20e913f8c5452ed95b86621\",\n                \"reference\": \"2dfb5f6c5eff0e91e20e913f8c5452ed95b86621\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \"^7.0 || ^8.0\",\n                \"psr/http-message\": \"^1.0\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"branch-alias\": {\n                    \"dev-master\": \"1.0.x-dev\"\n                }\n            },\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Psr\\\\Http\\\\Client\\\\\": \"src/\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"PHP-FIG\",\n                    \"homepage\": \"http://www.php-fig.org/\"\n                }\n            ],\n            \"description\": \"Common interface for HTTP clients\",\n            \"homepage\": \"https://github.com/php-fig/http-client\",\n            \"keywords\": [\n                \"http\",\n                \"http-client\",\n                \"psr\",\n                \"psr-18\"\n            ],\n            \"time\": \"2020-06-29T06:28:15+00:00\"\n        },\n        {\n            \"name\": \"psr/http-message\",\n            \"version\": \"1.0.1\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/php-fig/http-message.git\",\n                \"reference\": \"f6561bf28d520154e4b0ec72be95418abe6d9363\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/php-fig/http-message/zipball/f6561bf28d520154e4b0ec72be95418abe6d9363\",\n                \"reference\": \"f6561bf28d520154e4b0ec72be95418abe6d9363\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=5.3.0\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"branch-alias\": {\n                    \"dev-master\": \"1.0.x-dev\"\n                }\n            },\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Psr\\\\Http\\\\Message\\\\\": \"src/\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"PHP-FIG\",\n                    \"homepage\": \"http://www.php-fig.org/\"\n                }\n            ],\n            \"description\": \"Common interface for HTTP messages\",\n            \"homepage\": \"https://github.com/php-fig/http-message\",\n            \"keywords\": [\n                \"http\",\n                \"http-message\",\n                \"psr\",\n                \"psr-7\",\n                \"request\",\n                \"response\"\n            ],\n            \"time\": \"2016-08-06T14:39:51+00:00\"\n        },\n        {\n            \"name\": \"psr/link\",\n            \"version\": \"1.0.0\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/php-fig/link.git\",\n                \"reference\": \"eea8e8662d5cd3ae4517c9b864493f59fca95562\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/php-fig/link/zipball/eea8e8662d5cd3ae4517c9b864493f59fca95562\",\n                \"reference\": \"eea8e8662d5cd3ae4517c9b864493f59fca95562\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=5.3.0\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"branch-alias\": {\n                    \"dev-master\": \"1.0.x-dev\"\n                }\n            },\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Psr\\\\Link\\\\\": \"src/\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"PHP-FIG\",\n                    \"homepage\": \"http://www.php-fig.org/\"\n                }\n            ],\n            \"description\": \"Common interfaces for HTTP links\",\n            \"keywords\": [\n                \"http\",\n                \"http-link\",\n                \"link\",\n                \"psr\",\n                \"psr-13\",\n                \"rest\"\n            ],\n            \"time\": \"2016-10-28T16:06:13+00:00\"\n        },\n        {\n            \"name\": \"psr/log\",\n            \"version\": \"1.1.3\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/php-fig/log.git\",\n                \"reference\": \"0f73288fd15629204f9d42b7055f72dacbe811fc\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/php-fig/log/zipball/0f73288fd15629204f9d42b7055f72dacbe811fc\",\n                \"reference\": \"0f73288fd15629204f9d42b7055f72dacbe811fc\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=5.3.0\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"branch-alias\": {\n                    \"dev-master\": \"1.1.x-dev\"\n                }\n            },\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Psr\\\\Log\\\\\": \"Psr/Log/\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"PHP-FIG\",\n                    \"homepage\": \"http://www.php-fig.org/\"\n                }\n            ],\n            \"description\": \"Common interface for logging libraries\",\n            \"homepage\": \"https://github.com/php-fig/log\",\n            \"keywords\": [\n                \"log\",\n                \"psr\",\n                \"psr-3\"\n            ],\n            \"time\": \"2020-03-23T09:12:05+00:00\"\n        },\n        {\n            \"name\": \"ralouphie/getallheaders\",\n            \"version\": \"3.0.3\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/ralouphie/getallheaders.git\",\n                \"reference\": \"120b605dfeb996808c31b6477290a714d356e822\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/ralouphie/getallheaders/zipball/120b605dfeb996808c31b6477290a714d356e822\",\n                \"reference\": \"120b605dfeb996808c31b6477290a714d356e822\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=5.6\"\n            },\n            \"require-dev\": {\n                \"php-coveralls/php-coveralls\": \"^2.1\",\n                \"phpunit/phpunit\": \"^5 || ^6.5\"\n            },\n            \"type\": \"library\",\n            \"autoload\": {\n                \"files\": [\n                    \"src/getallheaders.php\"\n                ]\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Ralph Khattar\",\n                    \"email\": \"ralph.khattar@gmail.com\"\n                }\n            ],\n            \"description\": \"A polyfill for getallheaders.\",\n            \"time\": \"2019-03-08T08:55:37+00:00\"\n        },\n        {\n            \"name\": \"sensio/framework-extra-bundle\",\n            \"version\": \"v5.6.1\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/sensiolabs/SensioFrameworkExtraBundle.git\",\n                \"reference\": \"430d14c01836b77c28092883d195a43ce413ee32\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/sensiolabs/SensioFrameworkExtraBundle/zipball/430d14c01836b77c28092883d195a43ce413ee32\",\n                \"reference\": \"430d14c01836b77c28092883d195a43ce413ee32\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"doctrine/annotations\": \"^1.0\",\n                \"php\": \">=7.2.5\",\n                \"symfony/config\": \"^4.4|^5.0\",\n                \"symfony/dependency-injection\": \"^4.4|^5.0\",\n                \"symfony/framework-bundle\": \"^4.4|^5.0\",\n                \"symfony/http-kernel\": \"^4.4|^5.0\"\n            },\n            \"conflict\": {\n                \"doctrine/doctrine-cache-bundle\": \"<1.3.1\",\n                \"doctrine/persistence\": \"<1.3\"\n            },\n            \"require-dev\": {\n                \"doctrine/dbal\": \"^2.10|^3.0\",\n                \"doctrine/doctrine-bundle\": \"^1.11|^2.0\",\n                \"doctrine/orm\": \"^2.5\",\n                \"nyholm/psr7\": \"^1.1\",\n                \"symfony/browser-kit\": \"^4.4|^5.0\",\n                \"symfony/doctrine-bridge\": \"^4.4|^5.0\",\n                \"symfony/dom-crawler\": \"^4.4|^5.0\",\n                \"symfony/expression-language\": \"^4.4|^5.0\",\n                \"symfony/finder\": \"^4.4|^5.0\",\n                \"symfony/monolog-bridge\": \"^4.0|^5.0\",\n                \"symfony/monolog-bundle\": \"^3.2\",\n                \"symfony/phpunit-bridge\": \"^4.4.9|^5.0.9\",\n                \"symfony/psr-http-message-bridge\": \"^1.1\",\n                \"symfony/security-bundle\": \"^4.4|^5.0\",\n                \"symfony/twig-bundle\": \"^4.4|^5.0\",\n                \"symfony/yaml\": \"^4.4|^5.0\",\n                \"twig/twig\": \"^1.34|^2.4|^3.0\"\n            },\n            \"type\": \"symfony-bundle\",\n            \"extra\": {\n                \"branch-alias\": {\n                    \"dev-master\": \"5.6.x-dev\"\n                }\n            },\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Sensio\\\\Bundle\\\\FrameworkExtraBundle\\\\\": \"src/\"\n                },\n                \"exclude-from-classmap\": [\n                    \"/tests/\"\n                ]\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Fabien Potencier\",\n                    \"email\": \"fabien@symfony.com\"\n                }\n            ],\n            \"description\": \"This bundle provides a way to configure your controllers with annotations\",\n            \"keywords\": [\n                \"annotations\",\n                \"controllers\"\n            ],\n            \"time\": \"2020-08-25T19:10:18+00:00\"\n        },\n        {\n            \"name\": \"swiftmailer/swiftmailer\",\n            \"version\": \"v6.2.3\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/swiftmailer/swiftmailer.git\",\n                \"reference\": \"149cfdf118b169f7840bbe3ef0d4bc795d1780c9\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/swiftmailer/swiftmailer/zipball/149cfdf118b169f7840bbe3ef0d4bc795d1780c9\",\n                \"reference\": \"149cfdf118b169f7840bbe3ef0d4bc795d1780c9\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"egulias/email-validator\": \"~2.0\",\n                \"php\": \">=7.0.0\",\n                \"symfony/polyfill-iconv\": \"^1.0\",\n                \"symfony/polyfill-intl-idn\": \"^1.10\",\n                \"symfony/polyfill-mbstring\": \"^1.0\"\n            },\n            \"require-dev\": {\n                \"mockery/mockery\": \"~0.9.1\",\n                \"symfony/phpunit-bridge\": \"^3.4.19|^4.1.8\"\n            },\n            \"suggest\": {\n                \"ext-intl\": \"Needed to support internationalized email addresses\",\n                \"true/punycode\": \"Needed to support internationalized email addresses, if ext-intl is not installed\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"branch-alias\": {\n                    \"dev-master\": \"6.2-dev\"\n                }\n            },\n            \"autoload\": {\n                \"files\": [\n                    \"lib/swift_required.php\"\n                ]\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Chris Corbyn\"\n                },\n                {\n                    \"name\": \"Fabien Potencier\",\n                    \"email\": \"fabien@symfony.com\"\n                }\n            ],\n            \"description\": \"Swiftmailer, free feature-rich PHP mailer\",\n            \"homepage\": \"https://swiftmailer.symfony.com\",\n            \"keywords\": [\n                \"email\",\n                \"mail\",\n                \"mailer\"\n            ],\n            \"time\": \"2019-11-12T09:31:26+00:00\"\n        },\n        {\n            \"name\": \"symfony/asset\",\n            \"version\": \"v5.1.8\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/symfony/asset.git\",\n                \"reference\": \"19c59713f750642206b21a1edec5c18dea80f979\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/symfony/asset/zipball/19c59713f750642206b21a1edec5c18dea80f979\",\n                \"reference\": \"19c59713f750642206b21a1edec5c18dea80f979\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=7.2.5\"\n            },\n            \"require-dev\": {\n                \"symfony/http-client\": \"^4.4|^5.0\",\n                \"symfony/http-foundation\": \"^4.4|^5.0\",\n                \"symfony/http-kernel\": \"^4.4|^5.0\"\n            },\n            \"suggest\": {\n                \"symfony/http-foundation\": \"\"\n            },\n            \"type\": \"library\",\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Symfony\\\\Component\\\\Asset\\\\\": \"\"\n                },\n                \"exclude-from-classmap\": [\n                    \"/Tests/\"\n                ]\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Fabien Potencier\",\n                    \"email\": \"fabien@symfony.com\"\n                },\n                {\n                    \"name\": \"Symfony Community\",\n                    \"homepage\": \"https://symfony.com/contributors\"\n                }\n            ],\n            \"description\": \"Symfony Asset Component\",\n            \"homepage\": \"https://symfony.com\",\n            \"funding\": [\n                {\n                    \"url\": \"https://symfony.com/sponsor\",\n                    \"type\": \"custom\"\n                },\n                {\n                    \"url\": \"https://github.com/fabpot\",\n                    \"type\": \"github\"\n                },\n                {\n                    \"url\": \"https://tidelift.com/funding/github/packagist/symfony/symfony\",\n                    \"type\": \"tidelift\"\n                }\n            ],\n            \"time\": \"2020-10-24T12:01:57+00:00\"\n        },\n        {\n            \"name\": \"symfony/cache\",\n            \"version\": \"v5.1.8\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/symfony/cache.git\",\n                \"reference\": \"d7bc33e9f9028f49f87057e7944c076d9593f046\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/symfony/cache/zipball/d7bc33e9f9028f49f87057e7944c076d9593f046\",\n                \"reference\": \"d7bc33e9f9028f49f87057e7944c076d9593f046\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=7.2.5\",\n                \"psr/cache\": \"~1.0\",\n                \"psr/log\": \"~1.0\",\n                \"symfony/cache-contracts\": \"^1.1.7|^2\",\n                \"symfony/polyfill-php80\": \"^1.15\",\n                \"symfony/service-contracts\": \"^1.1|^2\",\n                \"symfony/var-exporter\": \"^4.4|^5.0\"\n            },\n            \"conflict\": {\n                \"doctrine/dbal\": \"<2.5\",\n                \"symfony/dependency-injection\": \"<4.4\",\n                \"symfony/http-kernel\": \"<4.4\",\n                \"symfony/var-dumper\": \"<4.4\"\n            },\n            \"provide\": {\n                \"psr/cache-implementation\": \"1.0\",\n                \"psr/simple-cache-implementation\": \"1.0\",\n                \"symfony/cache-implementation\": \"1.0\"\n            },\n            \"require-dev\": {\n                \"cache/integration-tests\": \"dev-master\",\n                \"doctrine/cache\": \"^1.6\",\n                \"doctrine/dbal\": \"^2.5|^3.0\",\n                \"predis/predis\": \"^1.1\",\n                \"psr/simple-cache\": \"^1.0\",\n                \"symfony/config\": \"^4.4|^5.0\",\n                \"symfony/dependency-injection\": \"^4.4|^5.0\",\n                \"symfony/filesystem\": \"^4.4|^5.0\",\n                \"symfony/var-dumper\": \"^4.4|^5.0\"\n            },\n            \"type\": \"library\",\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Symfony\\\\Component\\\\Cache\\\\\": \"\"\n                },\n                \"exclude-from-classmap\": [\n                    \"/Tests/\"\n                ]\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Nicolas Grekas\",\n                    \"email\": \"p@tchwork.com\"\n                },\n                {\n                    \"name\": \"Symfony Community\",\n                    \"homepage\": \"https://symfony.com/contributors\"\n                }\n            ],\n            \"description\": \"Symfony Cache component with PSR-6, PSR-16, and tags\",\n            \"homepage\": \"https://symfony.com\",\n            \"keywords\": [\n                \"caching\",\n                \"psr6\"\n            ],\n            \"funding\": [\n                {\n                    \"url\": \"https://symfony.com/sponsor\",\n                    \"type\": \"custom\"\n                },\n                {\n                    \"url\": \"https://github.com/fabpot\",\n                    \"type\": \"github\"\n                },\n                {\n                    \"url\": \"https://tidelift.com/funding/github/packagist/symfony/symfony\",\n                    \"type\": \"tidelift\"\n                }\n            ],\n            \"time\": \"2020-10-25T23:21:56+00:00\"\n        },\n        {\n            \"name\": \"symfony/cache-contracts\",\n            \"version\": \"v2.2.0\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/symfony/cache-contracts.git\",\n                \"reference\": \"8034ca0b61d4dd967f3698aaa1da2507b631d0cb\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/symfony/cache-contracts/zipball/8034ca0b61d4dd967f3698aaa1da2507b631d0cb\",\n                \"reference\": \"8034ca0b61d4dd967f3698aaa1da2507b631d0cb\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=7.2.5\",\n                \"psr/cache\": \"^1.0\"\n            },\n            \"suggest\": {\n                \"symfony/cache-implementation\": \"\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"branch-alias\": {\n                    \"dev-master\": \"2.2-dev\"\n                },\n                \"thanks\": {\n                    \"name\": \"symfony/contracts\",\n                    \"url\": \"https://github.com/symfony/contracts\"\n                }\n            },\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Symfony\\\\Contracts\\\\Cache\\\\\": \"\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Nicolas Grekas\",\n                    \"email\": \"p@tchwork.com\"\n                },\n                {\n                    \"name\": \"Symfony Community\",\n                    \"homepage\": \"https://symfony.com/contributors\"\n                }\n            ],\n            \"description\": \"Generic abstractions related to caching\",\n            \"homepage\": \"https://symfony.com\",\n            \"keywords\": [\n                \"abstractions\",\n                \"contracts\",\n                \"decoupling\",\n                \"interfaces\",\n                \"interoperability\",\n                \"standards\"\n            ],\n            \"funding\": [\n                {\n                    \"url\": \"https://symfony.com/sponsor\",\n                    \"type\": \"custom\"\n                },\n                {\n                    \"url\": \"https://github.com/fabpot\",\n                    \"type\": \"github\"\n                },\n                {\n                    \"url\": \"https://tidelift.com/funding/github/packagist/symfony/symfony\",\n                    \"type\": \"tidelift\"\n                }\n            ],\n            \"time\": \"2020-09-07T11:33:47+00:00\"\n        },\n        {\n            \"name\": \"symfony/config\",\n            \"version\": \"v5.1.8\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/symfony/config.git\",\n                \"reference\": \"11baeefa4c179d6908655a7b6be728f62367c193\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/symfony/config/zipball/11baeefa4c179d6908655a7b6be728f62367c193\",\n                \"reference\": \"11baeefa4c179d6908655a7b6be728f62367c193\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=7.2.5\",\n                \"symfony/deprecation-contracts\": \"^2.1\",\n                \"symfony/filesystem\": \"^4.4|^5.0\",\n                \"symfony/polyfill-ctype\": \"~1.8\",\n                \"symfony/polyfill-php80\": \"^1.15\"\n            },\n            \"conflict\": {\n                \"symfony/finder\": \"<4.4\"\n            },\n            \"require-dev\": {\n                \"symfony/event-dispatcher\": \"^4.4|^5.0\",\n                \"symfony/finder\": \"^4.4|^5.0\",\n                \"symfony/messenger\": \"^4.4|^5.0\",\n                \"symfony/service-contracts\": \"^1.1|^2\",\n                \"symfony/yaml\": \"^4.4|^5.0\"\n            },\n            \"suggest\": {\n                \"symfony/yaml\": \"To use the yaml reference dumper\"\n            },\n            \"type\": \"library\",\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Symfony\\\\Component\\\\Config\\\\\": \"\"\n                },\n                \"exclude-from-classmap\": [\n                    \"/Tests/\"\n                ]\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Fabien Potencier\",\n                    \"email\": \"fabien@symfony.com\"\n                },\n                {\n                    \"name\": \"Symfony Community\",\n                    \"homepage\": \"https://symfony.com/contributors\"\n                }\n            ],\n            \"description\": \"Symfony Config Component\",\n            \"homepage\": \"https://symfony.com\",\n            \"funding\": [\n                {\n                    \"url\": \"https://symfony.com/sponsor\",\n                    \"type\": \"custom\"\n                },\n                {\n                    \"url\": \"https://github.com/fabpot\",\n                    \"type\": \"github\"\n                },\n                {\n                    \"url\": \"https://tidelift.com/funding/github/packagist/symfony/symfony\",\n                    \"type\": \"tidelift\"\n                }\n            ],\n            \"time\": \"2020-10-24T12:01:57+00:00\"\n        },\n        {\n            \"name\": \"symfony/console\",\n            \"version\": \"v5.1.8\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/symfony/console.git\",\n                \"reference\": \"e0b2c29c0fa6a69089209bbe8fcff4df2a313d0e\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/symfony/console/zipball/e0b2c29c0fa6a69089209bbe8fcff4df2a313d0e\",\n                \"reference\": \"e0b2c29c0fa6a69089209bbe8fcff4df2a313d0e\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=7.2.5\",\n                \"symfony/polyfill-mbstring\": \"~1.0\",\n                \"symfony/polyfill-php73\": \"^1.8\",\n                \"symfony/polyfill-php80\": \"^1.15\",\n                \"symfony/service-contracts\": \"^1.1|^2\",\n                \"symfony/string\": \"^5.1\"\n            },\n            \"conflict\": {\n                \"symfony/dependency-injection\": \"<4.4\",\n                \"symfony/dotenv\": \"<5.1\",\n                \"symfony/event-dispatcher\": \"<4.4\",\n                \"symfony/lock\": \"<4.4\",\n                \"symfony/process\": \"<4.4\"\n            },\n            \"provide\": {\n                \"psr/log-implementation\": \"1.0\"\n            },\n            \"require-dev\": {\n                \"psr/log\": \"~1.0\",\n                \"symfony/config\": \"^4.4|^5.0\",\n                \"symfony/dependency-injection\": \"^4.4|^5.0\",\n                \"symfony/event-dispatcher\": \"^4.4|^5.0\",\n                \"symfony/lock\": \"^4.4|^5.0\",\n                \"symfony/process\": \"^4.4|^5.0\",\n                \"symfony/var-dumper\": \"^4.4|^5.0\"\n            },\n            \"suggest\": {\n                \"psr/log\": \"For using the console logger\",\n                \"symfony/event-dispatcher\": \"\",\n                \"symfony/lock\": \"\",\n                \"symfony/process\": \"\"\n            },\n            \"type\": \"library\",\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Symfony\\\\Component\\\\Console\\\\\": \"\"\n                },\n                \"exclude-from-classmap\": [\n                    \"/Tests/\"\n                ]\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Fabien Potencier\",\n                    \"email\": \"fabien@symfony.com\"\n                },\n                {\n                    \"name\": \"Symfony Community\",\n                    \"homepage\": \"https://symfony.com/contributors\"\n                }\n            ],\n            \"description\": \"Symfony Console Component\",\n            \"homepage\": \"https://symfony.com\",\n            \"funding\": [\n                {\n                    \"url\": \"https://symfony.com/sponsor\",\n                    \"type\": \"custom\"\n                },\n                {\n                    \"url\": \"https://github.com/fabpot\",\n                    \"type\": \"github\"\n                },\n                {\n                    \"url\": \"https://tidelift.com/funding/github/packagist/symfony/symfony\",\n                    \"type\": \"tidelift\"\n                }\n            ],\n            \"time\": \"2020-10-24T12:01:57+00:00\"\n        },\n        {\n            \"name\": \"symfony/dependency-injection\",\n            \"version\": \"v5.1.8\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/symfony/dependency-injection.git\",\n                \"reference\": \"829ca6bceaf68036a123a13a979f3c89289eae78\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/symfony/dependency-injection/zipball/829ca6bceaf68036a123a13a979f3c89289eae78\",\n                \"reference\": \"829ca6bceaf68036a123a13a979f3c89289eae78\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=7.2.5\",\n                \"psr/container\": \"^1.0\",\n                \"symfony/deprecation-contracts\": \"^2.1\",\n                \"symfony/polyfill-php80\": \"^1.15\",\n                \"symfony/service-contracts\": \"^1.1.6|^2\"\n            },\n            \"conflict\": {\n                \"symfony/config\": \"<5.1\",\n                \"symfony/finder\": \"<4.4\",\n                \"symfony/proxy-manager-bridge\": \"<4.4\",\n                \"symfony/yaml\": \"<4.4\"\n            },\n            \"provide\": {\n                \"psr/container-implementation\": \"1.0\",\n                \"symfony/service-implementation\": \"1.0\"\n            },\n            \"require-dev\": {\n                \"symfony/config\": \"^5.1\",\n                \"symfony/expression-language\": \"^4.4|^5.0\",\n                \"symfony/yaml\": \"^4.4|^5.0\"\n            },\n            \"suggest\": {\n                \"symfony/config\": \"\",\n                \"symfony/expression-language\": \"For using expressions in service container configuration\",\n                \"symfony/finder\": \"For using double-star glob patterns or when GLOB_BRACE portability is required\",\n                \"symfony/proxy-manager-bridge\": \"Generate service proxies to lazy load them\",\n                \"symfony/yaml\": \"\"\n            },\n            \"type\": \"library\",\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Symfony\\\\Component\\\\DependencyInjection\\\\\": \"\"\n                },\n                \"exclude-from-classmap\": [\n                    \"/Tests/\"\n                ]\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Fabien Potencier\",\n                    \"email\": \"fabien@symfony.com\"\n                },\n                {\n                    \"name\": \"Symfony Community\",\n                    \"homepage\": \"https://symfony.com/contributors\"\n                }\n            ],\n            \"description\": \"Symfony DependencyInjection Component\",\n            \"homepage\": \"https://symfony.com\",\n            \"funding\": [\n                {\n                    \"url\": \"https://symfony.com/sponsor\",\n                    \"type\": \"custom\"\n                },\n                {\n                    \"url\": \"https://github.com/fabpot\",\n                    \"type\": \"github\"\n                },\n                {\n                    \"url\": \"https://tidelift.com/funding/github/packagist/symfony/symfony\",\n                    \"type\": \"tidelift\"\n                }\n            ],\n            \"time\": \"2020-10-27T10:11:13+00:00\"\n        },\n        {\n            \"name\": \"symfony/deprecation-contracts\",\n            \"version\": \"v2.2.0\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/symfony/deprecation-contracts.git\",\n                \"reference\": \"5fa56b4074d1ae755beb55617ddafe6f5d78f665\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/symfony/deprecation-contracts/zipball/5fa56b4074d1ae755beb55617ddafe6f5d78f665\",\n                \"reference\": \"5fa56b4074d1ae755beb55617ddafe6f5d78f665\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=7.1\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"branch-alias\": {\n                    \"dev-master\": \"2.2-dev\"\n                },\n                \"thanks\": {\n                    \"name\": \"symfony/contracts\",\n                    \"url\": \"https://github.com/symfony/contracts\"\n                }\n            },\n            \"autoload\": {\n                \"files\": [\n                    \"function.php\"\n                ]\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Nicolas Grekas\",\n                    \"email\": \"p@tchwork.com\"\n                },\n                {\n                    \"name\": \"Symfony Community\",\n                    \"homepage\": \"https://symfony.com/contributors\"\n                }\n            ],\n            \"description\": \"A generic function and convention to trigger deprecation notices\",\n            \"homepage\": \"https://symfony.com\",\n            \"funding\": [\n                {\n                    \"url\": \"https://symfony.com/sponsor\",\n                    \"type\": \"custom\"\n                },\n                {\n                    \"url\": \"https://github.com/fabpot\",\n                    \"type\": \"github\"\n                },\n                {\n                    \"url\": \"https://tidelift.com/funding/github/packagist/symfony/symfony\",\n                    \"type\": \"tidelift\"\n                }\n            ],\n            \"time\": \"2020-09-07T11:33:47+00:00\"\n        },\n        {\n            \"name\": \"symfony/doctrine-bridge\",\n            \"version\": \"v5.1.8\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/symfony/doctrine-bridge.git\",\n                \"reference\": \"d01f0ec8b1225bd955d079f007c25191d93867d0\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/symfony/doctrine-bridge/zipball/d01f0ec8b1225bd955d079f007c25191d93867d0\",\n                \"reference\": \"d01f0ec8b1225bd955d079f007c25191d93867d0\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"doctrine/event-manager\": \"~1.0\",\n                \"doctrine/persistence\": \"^1.3|^2\",\n                \"php\": \">=7.2.5\",\n                \"symfony/polyfill-ctype\": \"~1.8\",\n                \"symfony/polyfill-mbstring\": \"~1.0\",\n                \"symfony/polyfill-php80\": \"^1.15\",\n                \"symfony/service-contracts\": \"^1.1|^2\"\n            },\n            \"conflict\": {\n                \"phpunit/phpunit\": \"<5.4.3\",\n                \"symfony/dependency-injection\": \"<4.4\",\n                \"symfony/form\": \"<5.1\",\n                \"symfony/http-kernel\": \"<5\",\n                \"symfony/messenger\": \"<4.4\",\n                \"symfony/property-info\": \"<5\",\n                \"symfony/security-bundle\": \"<5\",\n                \"symfony/security-core\": \"<5\",\n                \"symfony/validator\": \"<5.0.2\"\n            },\n            \"require-dev\": {\n                \"composer/package-versions-deprecated\": \"^1.8\",\n                \"doctrine/annotations\": \"~1.7\",\n                \"doctrine/cache\": \"~1.6\",\n                \"doctrine/collections\": \"~1.0\",\n                \"doctrine/data-fixtures\": \"^1.1\",\n                \"doctrine/dbal\": \"~2.4|^3.0\",\n                \"doctrine/orm\": \"^2.6.3\",\n                \"doctrine/reflection\": \"~1.0\",\n                \"symfony/cache\": \"^5.1\",\n                \"symfony/config\": \"^4.4|^5.0\",\n                \"symfony/dependency-injection\": \"^4.4|^5.0\",\n                \"symfony/doctrine-messenger\": \"^5.1\",\n                \"symfony/expression-language\": \"^4.4|^5.0\",\n                \"symfony/form\": \"^5.1.3\",\n                \"symfony/http-kernel\": \"^5.0\",\n                \"symfony/messenger\": \"^4.4|^5.0\",\n                \"symfony/property-access\": \"^4.4|^5.0\",\n                \"symfony/property-info\": \"^5.0\",\n                \"symfony/proxy-manager-bridge\": \"^4.4|^5.0\",\n                \"symfony/security-core\": \"^5.0\",\n                \"symfony/stopwatch\": \"^4.4|^5.0\",\n                \"symfony/translation\": \"^4.4|^5.0\",\n                \"symfony/validator\": \"^5.0.2\",\n                \"symfony/var-dumper\": \"^4.4|^5.0\"\n            },\n            \"suggest\": {\n                \"doctrine/data-fixtures\": \"\",\n                \"doctrine/dbal\": \"\",\n                \"doctrine/orm\": \"\",\n                \"symfony/form\": \"\",\n                \"symfony/property-info\": \"\",\n                \"symfony/validator\": \"\"\n            },\n            \"type\": \"symfony-bridge\",\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Symfony\\\\Bridge\\\\Doctrine\\\\\": \"\"\n                },\n                \"exclude-from-classmap\": [\n                    \"/Tests/\"\n                ]\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Fabien Potencier\",\n                    \"email\": \"fabien@symfony.com\"\n                },\n                {\n                    \"name\": \"Symfony Community\",\n                    \"homepage\": \"https://symfony.com/contributors\"\n                }\n            ],\n            \"description\": \"Symfony Doctrine Bridge\",\n            \"homepage\": \"https://symfony.com\",\n            \"funding\": [\n                {\n                    \"url\": \"https://symfony.com/sponsor\",\n                    \"type\": \"custom\"\n                },\n                {\n                    \"url\": \"https://github.com/fabpot\",\n                    \"type\": \"github\"\n                },\n                {\n                    \"url\": \"https://tidelift.com/funding/github/packagist/symfony/symfony\",\n                    \"type\": \"tidelift\"\n                }\n            ],\n            \"time\": \"2020-10-24T12:01:57+00:00\"\n        },\n        {\n            \"name\": \"symfony/dotenv\",\n            \"version\": \"v5.1.8\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/symfony/dotenv.git\",\n                \"reference\": \"29ac2a3e538da61780a769827c716738ce7accbb\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/symfony/dotenv/zipball/29ac2a3e538da61780a769827c716738ce7accbb\",\n                \"reference\": \"29ac2a3e538da61780a769827c716738ce7accbb\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=7.2.5\",\n                \"symfony/deprecation-contracts\": \"^2.1\"\n            },\n            \"require-dev\": {\n                \"symfony/process\": \"^4.4|^5.0\"\n            },\n            \"type\": \"library\",\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Symfony\\\\Component\\\\Dotenv\\\\\": \"\"\n                },\n                \"exclude-from-classmap\": [\n                    \"/Tests/\"\n                ]\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Fabien Potencier\",\n                    \"email\": \"fabien@symfony.com\"\n                },\n                {\n                    \"name\": \"Symfony Community\",\n                    \"homepage\": \"https://symfony.com/contributors\"\n                }\n            ],\n            \"description\": \"Registers environment variables from a .env file\",\n            \"homepage\": \"https://symfony.com\",\n            \"keywords\": [\n                \"dotenv\",\n                \"env\",\n                \"environment\"\n            ],\n            \"funding\": [\n                {\n                    \"url\": \"https://symfony.com/sponsor\",\n                    \"type\": \"custom\"\n                },\n                {\n                    \"url\": \"https://github.com/fabpot\",\n                    \"type\": \"github\"\n                },\n                {\n                    \"url\": \"https://tidelift.com/funding/github/packagist/symfony/symfony\",\n                    \"type\": \"tidelift\"\n                }\n            ],\n            \"time\": \"2020-10-24T12:01:57+00:00\"\n        },\n        {\n            \"name\": \"symfony/error-handler\",\n            \"version\": \"v5.1.8\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/symfony/error-handler.git\",\n                \"reference\": \"a154f2b12fd1ec708559ba73ed58bd1304e55718\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/symfony/error-handler/zipball/a154f2b12fd1ec708559ba73ed58bd1304e55718\",\n                \"reference\": \"a154f2b12fd1ec708559ba73ed58bd1304e55718\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=7.2.5\",\n                \"psr/log\": \"^1.0\",\n                \"symfony/polyfill-php80\": \"^1.15\",\n                \"symfony/var-dumper\": \"^4.4|^5.0\"\n            },\n            \"require-dev\": {\n                \"symfony/deprecation-contracts\": \"^2.1\",\n                \"symfony/http-kernel\": \"^4.4|^5.0\",\n                \"symfony/serializer\": \"^4.4|^5.0\"\n            },\n            \"type\": \"library\",\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Symfony\\\\Component\\\\ErrorHandler\\\\\": \"\"\n                },\n                \"exclude-from-classmap\": [\n                    \"/Tests/\"\n                ]\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Fabien Potencier\",\n                    \"email\": \"fabien@symfony.com\"\n                },\n                {\n                    \"name\": \"Symfony Community\",\n                    \"homepage\": \"https://symfony.com/contributors\"\n                }\n            ],\n            \"description\": \"Symfony ErrorHandler Component\",\n            \"homepage\": \"https://symfony.com\",\n            \"funding\": [\n                {\n                    \"url\": \"https://symfony.com/sponsor\",\n                    \"type\": \"custom\"\n                },\n                {\n                    \"url\": \"https://github.com/fabpot\",\n                    \"type\": \"github\"\n                },\n                {\n                    \"url\": \"https://tidelift.com/funding/github/packagist/symfony/symfony\",\n                    \"type\": \"tidelift\"\n                }\n            ],\n            \"time\": \"2020-10-24T12:01:57+00:00\"\n        },\n        {\n            \"name\": \"symfony/event-dispatcher\",\n            \"version\": \"v5.1.8\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/symfony/event-dispatcher.git\",\n                \"reference\": \"26f4edae48c913fc183a3da0553fe63bdfbd361a\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/symfony/event-dispatcher/zipball/26f4edae48c913fc183a3da0553fe63bdfbd361a\",\n                \"reference\": \"26f4edae48c913fc183a3da0553fe63bdfbd361a\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=7.2.5\",\n                \"symfony/deprecation-contracts\": \"^2.1\",\n                \"symfony/event-dispatcher-contracts\": \"^2\",\n                \"symfony/polyfill-php80\": \"^1.15\"\n            },\n            \"conflict\": {\n                \"symfony/dependency-injection\": \"<4.4\"\n            },\n            \"provide\": {\n                \"psr/event-dispatcher-implementation\": \"1.0\",\n                \"symfony/event-dispatcher-implementation\": \"2.0\"\n            },\n            \"require-dev\": {\n                \"psr/log\": \"~1.0\",\n                \"symfony/config\": \"^4.4|^5.0\",\n                \"symfony/dependency-injection\": \"^4.4|^5.0\",\n                \"symfony/error-handler\": \"^4.4|^5.0\",\n                \"symfony/expression-language\": \"^4.4|^5.0\",\n                \"symfony/http-foundation\": \"^4.4|^5.0\",\n                \"symfony/service-contracts\": \"^1.1|^2\",\n                \"symfony/stopwatch\": \"^4.4|^5.0\"\n            },\n            \"suggest\": {\n                \"symfony/dependency-injection\": \"\",\n                \"symfony/http-kernel\": \"\"\n            },\n            \"type\": \"library\",\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Symfony\\\\Component\\\\EventDispatcher\\\\\": \"\"\n                },\n                \"exclude-from-classmap\": [\n                    \"/Tests/\"\n                ]\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Fabien Potencier\",\n                    \"email\": \"fabien@symfony.com\"\n                },\n                {\n                    \"name\": \"Symfony Community\",\n                    \"homepage\": \"https://symfony.com/contributors\"\n                }\n            ],\n            \"description\": \"Symfony EventDispatcher Component\",\n            \"homepage\": \"https://symfony.com\",\n            \"funding\": [\n                {\n                    \"url\": \"https://symfony.com/sponsor\",\n                    \"type\": \"custom\"\n                },\n                {\n                    \"url\": \"https://github.com/fabpot\",\n                    \"type\": \"github\"\n                },\n                {\n                    \"url\": \"https://tidelift.com/funding/github/packagist/symfony/symfony\",\n                    \"type\": \"tidelift\"\n                }\n            ],\n            \"time\": \"2020-10-24T12:01:57+00:00\"\n        },\n        {\n            \"name\": \"symfony/event-dispatcher-contracts\",\n            \"version\": \"v2.2.0\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/symfony/event-dispatcher-contracts.git\",\n                \"reference\": \"0ba7d54483095a198fa51781bc608d17e84dffa2\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/symfony/event-dispatcher-contracts/zipball/0ba7d54483095a198fa51781bc608d17e84dffa2\",\n                \"reference\": \"0ba7d54483095a198fa51781bc608d17e84dffa2\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=7.2.5\",\n                \"psr/event-dispatcher\": \"^1\"\n            },\n            \"suggest\": {\n                \"symfony/event-dispatcher-implementation\": \"\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"branch-alias\": {\n                    \"dev-master\": \"2.2-dev\"\n                },\n                \"thanks\": {\n                    \"name\": \"symfony/contracts\",\n                    \"url\": \"https://github.com/symfony/contracts\"\n                }\n            },\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Symfony\\\\Contracts\\\\EventDispatcher\\\\\": \"\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Nicolas Grekas\",\n                    \"email\": \"p@tchwork.com\"\n                },\n                {\n                    \"name\": \"Symfony Community\",\n                    \"homepage\": \"https://symfony.com/contributors\"\n                }\n            ],\n            \"description\": \"Generic abstractions related to dispatching event\",\n            \"homepage\": \"https://symfony.com\",\n            \"keywords\": [\n                \"abstractions\",\n                \"contracts\",\n                \"decoupling\",\n                \"interfaces\",\n                \"interoperability\",\n                \"standards\"\n            ],\n            \"funding\": [\n                {\n                    \"url\": \"https://symfony.com/sponsor\",\n                    \"type\": \"custom\"\n                },\n                {\n                    \"url\": \"https://github.com/fabpot\",\n                    \"type\": \"github\"\n                },\n                {\n                    \"url\": \"https://tidelift.com/funding/github/packagist/symfony/symfony\",\n                    \"type\": \"tidelift\"\n                }\n            ],\n            \"time\": \"2020-09-07T11:33:47+00:00\"\n        },\n        {\n            \"name\": \"symfony/expression-language\",\n            \"version\": \"v5.1.8\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/symfony/expression-language.git\",\n                \"reference\": \"2c3f5e7cf4495d9033cc2d212da6ccde0d22b067\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/symfony/expression-language/zipball/2c3f5e7cf4495d9033cc2d212da6ccde0d22b067\",\n                \"reference\": \"2c3f5e7cf4495d9033cc2d212da6ccde0d22b067\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=7.2.5\",\n                \"symfony/cache\": \"^4.4|^5.0\",\n                \"symfony/polyfill-php80\": \"^1.15\",\n                \"symfony/service-contracts\": \"^1.1|^2\"\n            },\n            \"type\": \"library\",\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Symfony\\\\Component\\\\ExpressionLanguage\\\\\": \"\"\n                },\n                \"exclude-from-classmap\": [\n                    \"/Tests/\"\n                ]\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Fabien Potencier\",\n                    \"email\": \"fabien@symfony.com\"\n                },\n                {\n                    \"name\": \"Symfony Community\",\n                    \"homepage\": \"https://symfony.com/contributors\"\n                }\n            ],\n            \"description\": \"Symfony ExpressionLanguage Component\",\n            \"homepage\": \"https://symfony.com\",\n            \"funding\": [\n                {\n                    \"url\": \"https://symfony.com/sponsor\",\n                    \"type\": \"custom\"\n                },\n                {\n                    \"url\": \"https://github.com/fabpot\",\n                    \"type\": \"github\"\n                },\n                {\n                    \"url\": \"https://tidelift.com/funding/github/packagist/symfony/symfony\",\n                    \"type\": \"tidelift\"\n                }\n            ],\n            \"time\": \"2020-10-24T12:01:57+00:00\"\n        },\n        {\n            \"name\": \"symfony/filesystem\",\n            \"version\": \"v5.1.8\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/symfony/filesystem.git\",\n                \"reference\": \"df08650ea7aee2d925380069c131a66124d79177\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/symfony/filesystem/zipball/df08650ea7aee2d925380069c131a66124d79177\",\n                \"reference\": \"df08650ea7aee2d925380069c131a66124d79177\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=7.2.5\",\n                \"symfony/polyfill-ctype\": \"~1.8\"\n            },\n            \"type\": \"library\",\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Symfony\\\\Component\\\\Filesystem\\\\\": \"\"\n                },\n                \"exclude-from-classmap\": [\n                    \"/Tests/\"\n                ]\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Fabien Potencier\",\n                    \"email\": \"fabien@symfony.com\"\n                },\n                {\n                    \"name\": \"Symfony Community\",\n                    \"homepage\": \"https://symfony.com/contributors\"\n                }\n            ],\n            \"description\": \"Symfony Filesystem Component\",\n            \"homepage\": \"https://symfony.com\",\n            \"funding\": [\n                {\n                    \"url\": \"https://symfony.com/sponsor\",\n                    \"type\": \"custom\"\n                },\n                {\n                    \"url\": \"https://github.com/fabpot\",\n                    \"type\": \"github\"\n                },\n                {\n                    \"url\": \"https://tidelift.com/funding/github/packagist/symfony/symfony\",\n                    \"type\": \"tidelift\"\n                }\n            ],\n            \"time\": \"2020-10-24T12:01:57+00:00\"\n        },\n        {\n            \"name\": \"symfony/finder\",\n            \"version\": \"v5.1.8\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/symfony/finder.git\",\n                \"reference\": \"e70eb5a69c2ff61ea135a13d2266e8914a67b3a0\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/symfony/finder/zipball/e70eb5a69c2ff61ea135a13d2266e8914a67b3a0\",\n                \"reference\": \"e70eb5a69c2ff61ea135a13d2266e8914a67b3a0\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=7.2.5\"\n            },\n            \"type\": \"library\",\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Symfony\\\\Component\\\\Finder\\\\\": \"\"\n                },\n                \"exclude-from-classmap\": [\n                    \"/Tests/\"\n                ]\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Fabien Potencier\",\n                    \"email\": \"fabien@symfony.com\"\n                },\n                {\n                    \"name\": \"Symfony Community\",\n                    \"homepage\": \"https://symfony.com/contributors\"\n                }\n            ],\n            \"description\": \"Symfony Finder Component\",\n            \"homepage\": \"https://symfony.com\",\n            \"funding\": [\n                {\n                    \"url\": \"https://symfony.com/sponsor\",\n                    \"type\": \"custom\"\n                },\n                {\n                    \"url\": \"https://github.com/fabpot\",\n                    \"type\": \"github\"\n                },\n                {\n                    \"url\": \"https://tidelift.com/funding/github/packagist/symfony/symfony\",\n                    \"type\": \"tidelift\"\n                }\n            ],\n            \"time\": \"2020-10-24T12:01:57+00:00\"\n        },\n        {\n            \"name\": \"symfony/flex\",\n            \"version\": \"v1.10.0\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/symfony/flex.git\",\n                \"reference\": \"e38520236bdc911c2f219634b485bc328746e980\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/symfony/flex/zipball/e38520236bdc911c2f219634b485bc328746e980\",\n                \"reference\": \"e38520236bdc911c2f219634b485bc328746e980\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"composer-plugin-api\": \"^1.0|^2.0\",\n                \"php\": \">=7.1\"\n            },\n            \"require-dev\": {\n                \"composer/composer\": \"^1.0.2|^2.0\",\n                \"symfony/dotenv\": \"^4.4|^5.0\",\n                \"symfony/phpunit-bridge\": \"^4.4|^5.0\",\n                \"symfony/process\": \"^3.4|^4.4|^5.0\"\n            },\n            \"type\": \"composer-plugin\",\n            \"extra\": {\n                \"branch-alias\": {\n                    \"dev-main\": \"1.9-dev\"\n                },\n                \"class\": \"Symfony\\\\Flex\\\\Flex\"\n            },\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Symfony\\\\Flex\\\\\": \"src\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Fabien Potencier\",\n                    \"email\": \"fabien.potencier@gmail.com\"\n                }\n            ],\n            \"description\": \"Composer plugin for Symfony\",\n            \"funding\": [\n                {\n                    \"url\": \"https://symfony.com/sponsor\",\n                    \"type\": \"custom\"\n                },\n                {\n                    \"url\": \"https://github.com/fabpot\",\n                    \"type\": \"github\"\n                },\n                {\n                    \"url\": \"https://tidelift.com/funding/github/packagist/symfony/symfony\",\n                    \"type\": \"tidelift\"\n                }\n            ],\n            \"time\": \"2020-11-05T10:56:45+00:00\"\n        },\n        {\n            \"name\": \"symfony/form\",\n            \"version\": \"v5.1.8\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/symfony/form.git\",\n                \"reference\": \"3f61496220b9f8672ede9b9acfb87a06c0c752f2\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/symfony/form/zipball/3f61496220b9f8672ede9b9acfb87a06c0c752f2\",\n                \"reference\": \"3f61496220b9f8672ede9b9acfb87a06c0c752f2\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=7.2.5\",\n                \"symfony/deprecation-contracts\": \"^2.1\",\n                \"symfony/event-dispatcher\": \"^4.4|^5.0\",\n                \"symfony/intl\": \"^4.4|^5.0\",\n                \"symfony/options-resolver\": \"^5.1\",\n                \"symfony/polyfill-ctype\": \"~1.8\",\n                \"symfony/polyfill-mbstring\": \"~1.0\",\n                \"symfony/polyfill-php80\": \"^1.15\",\n                \"symfony/property-access\": \"^5.0.8\",\n                \"symfony/service-contracts\": \"^1.1|^2\"\n            },\n            \"conflict\": {\n                \"phpunit/phpunit\": \"<5.4.3\",\n                \"symfony/console\": \"<4.4\",\n                \"symfony/dependency-injection\": \"<4.4\",\n                \"symfony/doctrine-bridge\": \"<4.4\",\n                \"symfony/error-handler\": \"<4.4.5\",\n                \"symfony/framework-bundle\": \"<4.4\",\n                \"symfony/http-kernel\": \"<4.4\",\n                \"symfony/intl\": \"<4.4\",\n                \"symfony/translation\": \"<4.4\",\n                \"symfony/translation-contracts\": \"<1.1.7\",\n                \"symfony/twig-bridge\": \"<4.4\"\n            },\n            \"require-dev\": {\n                \"doctrine/collections\": \"~1.0\",\n                \"symfony/config\": \"^4.4|^5.0\",\n                \"symfony/console\": \"^4.4|^5.0\",\n                \"symfony/dependency-injection\": \"^4.4|^5.0\",\n                \"symfony/expression-language\": \"^4.4|^5.0\",\n                \"symfony/http-foundation\": \"^4.4|^5.0\",\n                \"symfony/http-kernel\": \"^4.4|^5.0\",\n                \"symfony/security-csrf\": \"^4.4|^5.0\",\n                \"symfony/translation\": \"^4.4|^5.0\",\n                \"symfony/validator\": \"^4.4.12|^5.1.6\",\n                \"symfony/var-dumper\": \"^4.4|^5.0\"\n            },\n            \"suggest\": {\n                \"symfony/security-csrf\": \"For protecting forms against CSRF attacks.\",\n                \"symfony/twig-bridge\": \"For templating with Twig.\",\n                \"symfony/validator\": \"For form validation.\"\n            },\n            \"type\": \"library\",\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Symfony\\\\Component\\\\Form\\\\\": \"\"\n                },\n                \"exclude-from-classmap\": [\n                    \"/Tests/\"\n                ]\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Fabien Potencier\",\n                    \"email\": \"fabien@symfony.com\"\n                },\n                {\n                    \"name\": \"Symfony Community\",\n                    \"homepage\": \"https://symfony.com/contributors\"\n                }\n            ],\n            \"description\": \"Symfony Form Component\",\n            \"homepage\": \"https://symfony.com\",\n            \"funding\": [\n                {\n                    \"url\": \"https://symfony.com/sponsor\",\n                    \"type\": \"custom\"\n                },\n                {\n                    \"url\": \"https://github.com/fabpot\",\n                    \"type\": \"github\"\n                },\n                {\n                    \"url\": \"https://tidelift.com/funding/github/packagist/symfony/symfony\",\n                    \"type\": \"tidelift\"\n                }\n            ],\n            \"time\": \"2020-10-28T05:25:38+00:00\"\n        },\n        {\n            \"name\": \"symfony/framework-bundle\",\n            \"version\": \"v5.1.8\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/symfony/framework-bundle.git\",\n                \"reference\": \"b5f961afc6cd1923c49cac0993c65bf5eee27d86\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/symfony/framework-bundle/zipball/b5f961afc6cd1923c49cac0993c65bf5eee27d86\",\n                \"reference\": \"b5f961afc6cd1923c49cac0993c65bf5eee27d86\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"ext-xml\": \"*\",\n                \"php\": \">=7.2.5\",\n                \"symfony/cache\": \"^4.4|^5.0\",\n                \"symfony/config\": \"^5.0\",\n                \"symfony/dependency-injection\": \"^5.1\",\n                \"symfony/error-handler\": \"^4.4.1|^5.0.1\",\n                \"symfony/event-dispatcher\": \"^5.1\",\n                \"symfony/filesystem\": \"^4.4|^5.0\",\n                \"symfony/finder\": \"^4.4|^5.0\",\n                \"symfony/http-foundation\": \"^4.4|^5.0\",\n                \"symfony/http-kernel\": \"^5.0\",\n                \"symfony/polyfill-mbstring\": \"~1.0\",\n                \"symfony/polyfill-php80\": \"^1.15\",\n                \"symfony/routing\": \"^5.1\"\n            },\n            \"conflict\": {\n                \"doctrine/persistence\": \"<1.3\",\n                \"phpdocumentor/reflection-docblock\": \"<3.0\",\n                \"phpdocumentor/type-resolver\": \"<0.2.1\",\n                \"phpunit/phpunit\": \"<5.4.3\",\n                \"symfony/asset\": \"<5.1\",\n                \"symfony/browser-kit\": \"<4.4\",\n                \"symfony/console\": \"<4.4\",\n                \"symfony/dom-crawler\": \"<4.4\",\n                \"symfony/dotenv\": \"<5.1\",\n                \"symfony/form\": \"<4.4\",\n                \"symfony/http-client\": \"<4.4\",\n                \"symfony/lock\": \"<4.4\",\n                \"symfony/mailer\": \"<4.4\",\n                \"symfony/messenger\": \"<4.4\",\n                \"symfony/mime\": \"<4.4\",\n                \"symfony/property-info\": \"<4.4\",\n                \"symfony/serializer\": \"<4.4\",\n                \"symfony/stopwatch\": \"<4.4\",\n                \"symfony/translation\": \"<5.0\",\n                \"symfony/twig-bridge\": \"<4.4\",\n                \"symfony/twig-bundle\": \"<4.4\",\n                \"symfony/validator\": \"<4.4\",\n                \"symfony/web-profiler-bundle\": \"<4.4\",\n                \"symfony/workflow\": \"<4.4\"\n            },\n            \"require-dev\": {\n                \"doctrine/annotations\": \"~1.7\",\n                \"doctrine/cache\": \"~1.0\",\n                \"paragonie/sodium_compat\": \"^1.8\",\n                \"phpdocumentor/reflection-docblock\": \"^3.0|^4.0\",\n                \"symfony/asset\": \"^5.1\",\n                \"symfony/browser-kit\": \"^4.4|^5.0\",\n                \"symfony/console\": \"^4.4|^5.0\",\n                \"symfony/css-selector\": \"^4.4|^5.0\",\n                \"symfony/dom-crawler\": \"^4.4|^5.0\",\n                \"symfony/dotenv\": \"^5.1\",\n                \"symfony/expression-language\": \"^4.4|^5.0\",\n                \"symfony/form\": \"^4.4|^5.0\",\n                \"symfony/http-client\": \"^4.4|^5.0\",\n                \"symfony/lock\": \"^4.4|^5.0\",\n                \"symfony/mailer\": \"^4.4|^5.0\",\n                \"symfony/messenger\": \"^4.4|^5.0\",\n                \"symfony/mime\": \"^4.4|^5.0\",\n                \"symfony/polyfill-intl-icu\": \"~1.0\",\n                \"symfony/process\": \"^4.4|^5.0\",\n                \"symfony/property-info\": \"^4.4|^5.0\",\n                \"symfony/security-bundle\": \"^5.1\",\n                \"symfony/security-csrf\": \"^4.4|^5.0\",\n                \"symfony/security-http\": \"^4.4|^5.0\",\n                \"symfony/serializer\": \"^4.4|^5.0\",\n                \"symfony/stopwatch\": \"^4.4|^5.0\",\n                \"symfony/string\": \"^5.0\",\n                \"symfony/translation\": \"^5.0\",\n                \"symfony/twig-bundle\": \"^4.4|^5.0\",\n                \"symfony/validator\": \"^4.4|^5.0\",\n                \"symfony/web-link\": \"^4.4|^5.0\",\n                \"symfony/workflow\": \"^4.4|^5.0\",\n                \"symfony/yaml\": \"^4.4|^5.0\",\n                \"twig/twig\": \"^2.10|^3.0\"\n            },\n            \"suggest\": {\n                \"ext-apcu\": \"For best performance of the system caches\",\n                \"symfony/console\": \"For using the console commands\",\n                \"symfony/form\": \"For using forms\",\n                \"symfony/property-info\": \"For using the property_info service\",\n                \"symfony/serializer\": \"For using the serializer service\",\n                \"symfony/validator\": \"For using validation\",\n                \"symfony/web-link\": \"For using web links, features such as preloading, prefetching or prerendering\",\n                \"symfony/yaml\": \"For using the debug:config and lint:yaml commands\"\n            },\n            \"type\": \"symfony-bundle\",\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Symfony\\\\Bundle\\\\FrameworkBundle\\\\\": \"\"\n                },\n                \"exclude-from-classmap\": [\n                    \"/Tests/\"\n                ]\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Fabien Potencier\",\n                    \"email\": \"fabien@symfony.com\"\n                },\n                {\n                    \"name\": \"Symfony Community\",\n                    \"homepage\": \"https://symfony.com/contributors\"\n                }\n            ],\n            \"description\": \"Symfony FrameworkBundle\",\n            \"homepage\": \"https://symfony.com\",\n            \"funding\": [\n                {\n                    \"url\": \"https://symfony.com/sponsor\",\n                    \"type\": \"custom\"\n                },\n                {\n                    \"url\": \"https://github.com/fabpot\",\n                    \"type\": \"github\"\n                },\n                {\n                    \"url\": \"https://tidelift.com/funding/github/packagist/symfony/symfony\",\n                    \"type\": \"tidelift\"\n                }\n            ],\n            \"time\": \"2020-10-24T12:01:57+00:00\"\n        },\n        {\n            \"name\": \"symfony/google-mailer\",\n            \"version\": \"v5.1.8\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/symfony/google-mailer.git\",\n                \"reference\": \"9f459cbd57dd33a70fd8aa475575641ea4ae3369\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/symfony/google-mailer/zipball/9f459cbd57dd33a70fd8aa475575641ea4ae3369\",\n                \"reference\": \"9f459cbd57dd33a70fd8aa475575641ea4ae3369\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=7.2.5\",\n                \"symfony/mailer\": \"^4.4|^5.0\"\n            },\n            \"require-dev\": {\n                \"symfony/http-client\": \"^4.4|^5.0\"\n            },\n            \"type\": \"symfony-bridge\",\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Symfony\\\\Component\\\\Mailer\\\\Bridge\\\\Google\\\\\": \"\"\n                },\n                \"exclude-from-classmap\": [\n                    \"/Tests/\"\n                ]\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Fabien Potencier\",\n                    \"email\": \"fabien@symfony.com\"\n                },\n                {\n                    \"name\": \"Symfony Community\",\n                    \"homepage\": \"https://symfony.com/contributors\"\n                }\n            ],\n            \"description\": \"Symfony Google Mailer Bridge\",\n            \"homepage\": \"https://symfony.com\",\n            \"funding\": [\n                {\n                    \"url\": \"https://symfony.com/sponsor\",\n                    \"type\": \"custom\"\n                },\n                {\n                    \"url\": \"https://github.com/fabpot\",\n                    \"type\": \"github\"\n                },\n                {\n                    \"url\": \"https://tidelift.com/funding/github/packagist/symfony/symfony\",\n                    \"type\": \"tidelift\"\n                }\n            ],\n            \"time\": \"2020-10-24T12:01:57+00:00\"\n        },\n        {\n            \"name\": \"symfony/http-client\",\n            \"version\": \"v5.1.8\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/symfony/http-client.git\",\n                \"reference\": \"97a6a1f9f5bb3a6094833107b58a72bc9a9165cc\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/symfony/http-client/zipball/97a6a1f9f5bb3a6094833107b58a72bc9a9165cc\",\n                \"reference\": \"97a6a1f9f5bb3a6094833107b58a72bc9a9165cc\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=7.2.5\",\n                \"psr/log\": \"^1.0\",\n                \"symfony/http-client-contracts\": \"^2.2\",\n                \"symfony/polyfill-php73\": \"^1.11\",\n                \"symfony/polyfill-php80\": \"^1.15\",\n                \"symfony/service-contracts\": \"^1.0|^2\"\n            },\n            \"provide\": {\n                \"php-http/async-client-implementation\": \"*\",\n                \"php-http/client-implementation\": \"*\",\n                \"psr/http-client-implementation\": \"1.0\",\n                \"symfony/http-client-implementation\": \"1.1\"\n            },\n            \"require-dev\": {\n                \"amphp/http-client\": \"^4.2.1\",\n                \"amphp/http-tunnel\": \"^1.0\",\n                \"amphp/socket\": \"^1.1\",\n                \"guzzlehttp/promises\": \"^1.3.1\",\n                \"nyholm/psr7\": \"^1.0\",\n                \"php-http/httplug\": \"^1.0|^2.0\",\n                \"psr/http-client\": \"^1.0\",\n                \"symfony/dependency-injection\": \"^4.4|^5.0\",\n                \"symfony/http-kernel\": \"^4.4.13|^5.1.5\",\n                \"symfony/process\": \"^4.4|^5.0\"\n            },\n            \"type\": \"library\",\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Symfony\\\\Component\\\\HttpClient\\\\\": \"\"\n                },\n                \"exclude-from-classmap\": [\n                    \"/Tests/\"\n                ]\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Nicolas Grekas\",\n                    \"email\": \"p@tchwork.com\"\n                },\n                {\n                    \"name\": \"Symfony Community\",\n                    \"homepage\": \"https://symfony.com/contributors\"\n                }\n            ],\n            \"description\": \"Symfony HttpClient component\",\n            \"homepage\": \"https://symfony.com\",\n            \"funding\": [\n                {\n                    \"url\": \"https://symfony.com/sponsor\",\n                    \"type\": \"custom\"\n                },\n                {\n                    \"url\": \"https://github.com/fabpot\",\n                    \"type\": \"github\"\n                },\n                {\n                    \"url\": \"https://tidelift.com/funding/github/packagist/symfony/symfony\",\n                    \"type\": \"tidelift\"\n                }\n            ],\n            \"time\": \"2020-10-24T12:01:57+00:00\"\n        },\n        {\n            \"name\": \"symfony/http-client-contracts\",\n            \"version\": \"v2.3.1\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/symfony/http-client-contracts.git\",\n                \"reference\": \"41db680a15018f9c1d4b23516059633ce280ca33\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/symfony/http-client-contracts/zipball/41db680a15018f9c1d4b23516059633ce280ca33\",\n                \"reference\": \"41db680a15018f9c1d4b23516059633ce280ca33\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=7.2.5\"\n            },\n            \"suggest\": {\n                \"symfony/http-client-implementation\": \"\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"branch-version\": \"2.3\",\n                \"branch-alias\": {\n                    \"dev-main\": \"2.3-dev\"\n                },\n                \"thanks\": {\n                    \"name\": \"symfony/contracts\",\n                    \"url\": \"https://github.com/symfony/contracts\"\n                }\n            },\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Symfony\\\\Contracts\\\\HttpClient\\\\\": \"\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Nicolas Grekas\",\n                    \"email\": \"p@tchwork.com\"\n                },\n                {\n                    \"name\": \"Symfony Community\",\n                    \"homepage\": \"https://symfony.com/contributors\"\n                }\n            ],\n            \"description\": \"Generic abstractions related to HTTP clients\",\n            \"homepage\": \"https://symfony.com\",\n            \"keywords\": [\n                \"abstractions\",\n                \"contracts\",\n                \"decoupling\",\n                \"interfaces\",\n                \"interoperability\",\n                \"standards\"\n            ],\n            \"funding\": [\n                {\n                    \"url\": \"https://symfony.com/sponsor\",\n                    \"type\": \"custom\"\n                },\n                {\n                    \"url\": \"https://github.com/fabpot\",\n                    \"type\": \"github\"\n                },\n                {\n                    \"url\": \"https://tidelift.com/funding/github/packagist/symfony/symfony\",\n                    \"type\": \"tidelift\"\n                }\n            ],\n            \"time\": \"2020-10-14T17:08:19+00:00\"\n        },\n        {\n            \"name\": \"symfony/http-foundation\",\n            \"version\": \"v5.1.8\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/symfony/http-foundation.git\",\n                \"reference\": \"a2860ec970404b0233ab1e59e0568d3277d32b6f\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/symfony/http-foundation/zipball/a2860ec970404b0233ab1e59e0568d3277d32b6f\",\n                \"reference\": \"a2860ec970404b0233ab1e59e0568d3277d32b6f\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=7.2.5\",\n                \"symfony/deprecation-contracts\": \"^2.1\",\n                \"symfony/polyfill-mbstring\": \"~1.1\",\n                \"symfony/polyfill-php80\": \"^1.15\"\n            },\n            \"require-dev\": {\n                \"predis/predis\": \"~1.0\",\n                \"symfony/cache\": \"^4.4|^5.0\",\n                \"symfony/expression-language\": \"^4.4|^5.0\",\n                \"symfony/mime\": \"^4.4|^5.0\"\n            },\n            \"suggest\": {\n                \"symfony/mime\": \"To use the file extension guesser\"\n            },\n            \"type\": \"library\",\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Symfony\\\\Component\\\\HttpFoundation\\\\\": \"\"\n                },\n                \"exclude-from-classmap\": [\n                    \"/Tests/\"\n                ]\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Fabien Potencier\",\n                    \"email\": \"fabien@symfony.com\"\n                },\n                {\n                    \"name\": \"Symfony Community\",\n                    \"homepage\": \"https://symfony.com/contributors\"\n                }\n            ],\n            \"description\": \"Symfony HttpFoundation Component\",\n            \"homepage\": \"https://symfony.com\",\n            \"funding\": [\n                {\n                    \"url\": \"https://symfony.com/sponsor\",\n                    \"type\": \"custom\"\n                },\n                {\n                    \"url\": \"https://github.com/fabpot\",\n                    \"type\": \"github\"\n                },\n                {\n                    \"url\": \"https://tidelift.com/funding/github/packagist/symfony/symfony\",\n                    \"type\": \"tidelift\"\n                }\n            ],\n            \"time\": \"2020-10-24T12:01:57+00:00\"\n        },\n        {\n            \"name\": \"symfony/http-kernel\",\n            \"version\": \"v5.1.8\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/symfony/http-kernel.git\",\n                \"reference\": \"a13b3c4d994a4fd051f4c6800c5e33c9508091dd\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/symfony/http-kernel/zipball/a13b3c4d994a4fd051f4c6800c5e33c9508091dd\",\n                \"reference\": \"a13b3c4d994a4fd051f4c6800c5e33c9508091dd\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=7.2.5\",\n                \"psr/log\": \"~1.0\",\n                \"symfony/deprecation-contracts\": \"^2.1\",\n                \"symfony/error-handler\": \"^4.4|^5.0\",\n                \"symfony/event-dispatcher\": \"^5.0\",\n                \"symfony/http-client-contracts\": \"^1.1|^2\",\n                \"symfony/http-foundation\": \"^4.4|^5.0\",\n                \"symfony/polyfill-ctype\": \"^1.8\",\n                \"symfony/polyfill-php73\": \"^1.9\",\n                \"symfony/polyfill-php80\": \"^1.15\"\n            },\n            \"conflict\": {\n                \"symfony/browser-kit\": \"<4.4\",\n                \"symfony/cache\": \"<5.0\",\n                \"symfony/config\": \"<5.0\",\n                \"symfony/console\": \"<4.4\",\n                \"symfony/dependency-injection\": \"<4.4\",\n                \"symfony/doctrine-bridge\": \"<5.0\",\n                \"symfony/form\": \"<5.0\",\n                \"symfony/http-client\": \"<5.0\",\n                \"symfony/mailer\": \"<5.0\",\n                \"symfony/messenger\": \"<5.0\",\n                \"symfony/translation\": \"<5.0\",\n                \"symfony/twig-bridge\": \"<5.0\",\n                \"symfony/validator\": \"<5.0\",\n                \"twig/twig\": \"<2.4\"\n            },\n            \"provide\": {\n                \"psr/log-implementation\": \"1.0\"\n            },\n            \"require-dev\": {\n                \"psr/cache\": \"~1.0\",\n                \"symfony/browser-kit\": \"^4.4|^5.0\",\n                \"symfony/config\": \"^5.0\",\n                \"symfony/console\": \"^4.4|^5.0\",\n                \"symfony/css-selector\": \"^4.4|^5.0\",\n                \"symfony/dependency-injection\": \"^4.4|^5.0\",\n                \"symfony/dom-crawler\": \"^4.4|^5.0\",\n                \"symfony/expression-language\": \"^4.4|^5.0\",\n                \"symfony/finder\": \"^4.4|^5.0\",\n                \"symfony/process\": \"^4.4|^5.0\",\n                \"symfony/routing\": \"^4.4|^5.0\",\n                \"symfony/stopwatch\": \"^4.4|^5.0\",\n                \"symfony/translation\": \"^4.4|^5.0\",\n                \"symfony/translation-contracts\": \"^1.1|^2\",\n                \"twig/twig\": \"^2.4|^3.0\"\n            },\n            \"suggest\": {\n                \"symfony/browser-kit\": \"\",\n                \"symfony/config\": \"\",\n                \"symfony/console\": \"\",\n                \"symfony/dependency-injection\": \"\"\n            },\n            \"type\": \"library\",\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Symfony\\\\Component\\\\HttpKernel\\\\\": \"\"\n                },\n                \"exclude-from-classmap\": [\n                    \"/Tests/\"\n                ]\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Fabien Potencier\",\n                    \"email\": \"fabien@symfony.com\"\n                },\n                {\n                    \"name\": \"Symfony Community\",\n                    \"homepage\": \"https://symfony.com/contributors\"\n                }\n            ],\n            \"description\": \"Symfony HttpKernel Component\",\n            \"homepage\": \"https://symfony.com\",\n            \"funding\": [\n                {\n                    \"url\": \"https://symfony.com/sponsor\",\n                    \"type\": \"custom\"\n                },\n                {\n                    \"url\": \"https://github.com/fabpot\",\n                    \"type\": \"github\"\n                },\n                {\n                    \"url\": \"https://tidelift.com/funding/github/packagist/symfony/symfony\",\n                    \"type\": \"tidelift\"\n                }\n            ],\n            \"time\": \"2020-10-28T05:55:23+00:00\"\n        },\n        {\n            \"name\": \"symfony/intl\",\n            \"version\": \"v5.1.8\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/symfony/intl.git\",\n                \"reference\": \"e353c6c37afa1ff90739b3941f60ff9fa650eec3\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/symfony/intl/zipball/e353c6c37afa1ff90739b3941f60ff9fa650eec3\",\n                \"reference\": \"e353c6c37afa1ff90739b3941f60ff9fa650eec3\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=7.2.5\",\n                \"symfony/polyfill-intl-icu\": \"~1.0\",\n                \"symfony/polyfill-php80\": \"^1.15\"\n            },\n            \"require-dev\": {\n                \"symfony/filesystem\": \"^4.4|^5.0\"\n            },\n            \"suggest\": {\n                \"ext-intl\": \"to use the component with locales other than \\\"en\\\"\"\n            },\n            \"type\": \"library\",\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Symfony\\\\Component\\\\Intl\\\\\": \"\"\n                },\n                \"classmap\": [\n                    \"Resources/stubs\"\n                ],\n                \"exclude-from-classmap\": [\n                    \"/Tests/\"\n                ]\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Bernhard Schussek\",\n                    \"email\": \"bschussek@gmail.com\"\n                },\n                {\n                    \"name\": \"Eriksen Costa\",\n                    \"email\": \"eriksen.costa@infranology.com.br\"\n                },\n                {\n                    \"name\": \"Igor Wiedler\",\n                    \"email\": \"igor@wiedler.ch\"\n                },\n                {\n                    \"name\": \"Symfony Community\",\n                    \"homepage\": \"https://symfony.com/contributors\"\n                }\n            ],\n            \"description\": \"A PHP replacement layer for the C intl extension that includes additional data from the ICU library.\",\n            \"homepage\": \"https://symfony.com\",\n            \"keywords\": [\n                \"i18n\",\n                \"icu\",\n                \"internationalization\",\n                \"intl\",\n                \"l10n\",\n                \"localization\"\n            ],\n            \"funding\": [\n                {\n                    \"url\": \"https://symfony.com/sponsor\",\n                    \"type\": \"custom\"\n                },\n                {\n                    \"url\": \"https://github.com/fabpot\",\n                    \"type\": \"github\"\n                },\n                {\n                    \"url\": \"https://tidelift.com/funding/github/packagist/symfony/symfony\",\n                    \"type\": \"tidelift\"\n                }\n            ],\n            \"time\": \"2020-10-24T12:01:57+00:00\"\n        },\n        {\n            \"name\": \"symfony/mailer\",\n            \"version\": \"v5.1.8\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/symfony/mailer.git\",\n                \"reference\": \"fa5cc9f894a5d082e7e46bfdd44f5dd83529f0ba\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/symfony/mailer/zipball/fa5cc9f894a5d082e7e46bfdd44f5dd83529f0ba\",\n                \"reference\": \"fa5cc9f894a5d082e7e46bfdd44f5dd83529f0ba\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"egulias/email-validator\": \"^2.1.10\",\n                \"php\": \">=7.2.5\",\n                \"psr/log\": \"~1.0\",\n                \"symfony/event-dispatcher\": \"^4.4|^5.0\",\n                \"symfony/mime\": \"^4.4|^5.0\",\n                \"symfony/polyfill-php80\": \"^1.15\",\n                \"symfony/service-contracts\": \"^1.1|^2\"\n            },\n            \"conflict\": {\n                \"symfony/http-kernel\": \"<4.4\"\n            },\n            \"require-dev\": {\n                \"symfony/amazon-mailer\": \"^4.4|^5.0\",\n                \"symfony/google-mailer\": \"^4.4|^5.0\",\n                \"symfony/http-client-contracts\": \"^1.1|^2\",\n                \"symfony/mailchimp-mailer\": \"^4.4|^5.0\",\n                \"symfony/mailgun-mailer\": \"^4.4|^5.0\",\n                \"symfony/messenger\": \"^4.4|^5.0\",\n                \"symfony/postmark-mailer\": \"^4.4|^5.0\",\n                \"symfony/sendgrid-mailer\": \"^4.4|^5.0\"\n            },\n            \"type\": \"library\",\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Symfony\\\\Component\\\\Mailer\\\\\": \"\"\n                },\n                \"exclude-from-classmap\": [\n                    \"/Tests/\"\n                ]\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Fabien Potencier\",\n                    \"email\": \"fabien@symfony.com\"\n                },\n                {\n                    \"name\": \"Symfony Community\",\n                    \"homepage\": \"https://symfony.com/contributors\"\n                }\n            ],\n            \"description\": \"Symfony Mailer Component\",\n            \"homepage\": \"https://symfony.com\",\n            \"funding\": [\n                {\n                    \"url\": \"https://symfony.com/sponsor\",\n                    \"type\": \"custom\"\n                },\n                {\n                    \"url\": \"https://github.com/fabpot\",\n                    \"type\": \"github\"\n                },\n                {\n                    \"url\": \"https://tidelift.com/funding/github/packagist/symfony/symfony\",\n                    \"type\": \"tidelift\"\n                }\n            ],\n            \"time\": \"2020-10-24T12:01:57+00:00\"\n        },\n        {\n            \"name\": \"symfony/mime\",\n            \"version\": \"v5.1.8\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/symfony/mime.git\",\n                \"reference\": \"f5485a92c24d4bcfc2f3fc648744fb398482ff1b\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/symfony/mime/zipball/f5485a92c24d4bcfc2f3fc648744fb398482ff1b\",\n                \"reference\": \"f5485a92c24d4bcfc2f3fc648744fb398482ff1b\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=7.2.5\",\n                \"symfony/polyfill-intl-idn\": \"^1.10\",\n                \"symfony/polyfill-mbstring\": \"^1.0\",\n                \"symfony/polyfill-php80\": \"^1.15\"\n            },\n            \"conflict\": {\n                \"symfony/mailer\": \"<4.4\"\n            },\n            \"require-dev\": {\n                \"egulias/email-validator\": \"^2.1.10\",\n                \"symfony/dependency-injection\": \"^4.4|^5.0\"\n            },\n            \"type\": \"library\",\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Symfony\\\\Component\\\\Mime\\\\\": \"\"\n                },\n                \"exclude-from-classmap\": [\n                    \"/Tests/\"\n                ]\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Fabien Potencier\",\n                    \"email\": \"fabien@symfony.com\"\n                },\n                {\n                    \"name\": \"Symfony Community\",\n                    \"homepage\": \"https://symfony.com/contributors\"\n                }\n            ],\n            \"description\": \"A library to manipulate MIME messages\",\n            \"homepage\": \"https://symfony.com\",\n            \"keywords\": [\n                \"mime\",\n                \"mime-type\"\n            ],\n            \"funding\": [\n                {\n                    \"url\": \"https://symfony.com/sponsor\",\n                    \"type\": \"custom\"\n                },\n                {\n                    \"url\": \"https://github.com/fabpot\",\n                    \"type\": \"github\"\n                },\n                {\n                    \"url\": \"https://tidelift.com/funding/github/packagist/symfony/symfony\",\n                    \"type\": \"tidelift\"\n                }\n            ],\n            \"time\": \"2020-10-24T12:01:57+00:00\"\n        },\n        {\n            \"name\": \"symfony/monolog-bridge\",\n            \"version\": \"v5.1.8\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/symfony/monolog-bridge.git\",\n                \"reference\": \"0c507eddb704a3154b53f066cc0b587c4586c868\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/symfony/monolog-bridge/zipball/0c507eddb704a3154b53f066cc0b587c4586c868\",\n                \"reference\": \"0c507eddb704a3154b53f066cc0b587c4586c868\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"monolog/monolog\": \"^1.25.1|^2\",\n                \"php\": \">=7.2.5\",\n                \"symfony/http-kernel\": \"^4.4|^5.0\",\n                \"symfony/service-contracts\": \"^1.1|^2\"\n            },\n            \"conflict\": {\n                \"symfony/console\": \"<4.4\",\n                \"symfony/http-foundation\": \"<4.4\"\n            },\n            \"require-dev\": {\n                \"symfony/console\": \"^4.4|^5.0\",\n                \"symfony/http-client\": \"^4.4|^5.0\",\n                \"symfony/mailer\": \"^4.4|^5.0\",\n                \"symfony/mime\": \"^4.4|^5.0\",\n                \"symfony/security-core\": \"^4.4|^5.0\",\n                \"symfony/var-dumper\": \"^4.4|^5.0\"\n            },\n            \"suggest\": {\n                \"symfony/console\": \"For the possibility to show log messages in console commands depending on verbosity settings.\",\n                \"symfony/http-kernel\": \"For using the debugging handlers together with the response life cycle of the HTTP kernel.\",\n                \"symfony/var-dumper\": \"For using the debugging handlers like the console handler or the log server handler.\"\n            },\n            \"type\": \"symfony-bridge\",\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Symfony\\\\Bridge\\\\Monolog\\\\\": \"\"\n                },\n                \"exclude-from-classmap\": [\n                    \"/Tests/\"\n                ]\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Fabien Potencier\",\n                    \"email\": \"fabien@symfony.com\"\n                },\n                {\n                    \"name\": \"Symfony Community\",\n                    \"homepage\": \"https://symfony.com/contributors\"\n                }\n            ],\n            \"description\": \"Symfony Monolog Bridge\",\n            \"homepage\": \"https://symfony.com\",\n            \"funding\": [\n                {\n                    \"url\": \"https://symfony.com/sponsor\",\n                    \"type\": \"custom\"\n                },\n                {\n                    \"url\": \"https://github.com/fabpot\",\n                    \"type\": \"github\"\n                },\n                {\n                    \"url\": \"https://tidelift.com/funding/github/packagist/symfony/symfony\",\n                    \"type\": \"tidelift\"\n                }\n            ],\n            \"time\": \"2020-10-24T12:01:57+00:00\"\n        },\n        {\n            \"name\": \"symfony/monolog-bundle\",\n            \"version\": \"v3.6.0\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/symfony/monolog-bundle.git\",\n                \"reference\": \"e495f5c7e4e672ffef4357d4a4d85f010802f940\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/symfony/monolog-bundle/zipball/e495f5c7e4e672ffef4357d4a4d85f010802f940\",\n                \"reference\": \"e495f5c7e4e672ffef4357d4a4d85f010802f940\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"monolog/monolog\": \"~1.22 || ~2.0\",\n                \"php\": \">=5.6\",\n                \"symfony/config\": \"~3.4 || ~4.0 || ^5.0\",\n                \"symfony/dependency-injection\": \"~3.4.10 || ^4.0.10 || ^5.0\",\n                \"symfony/http-kernel\": \"~3.4 || ~4.0 || ^5.0\",\n                \"symfony/monolog-bridge\": \"~3.4 || ~4.0 || ^5.0\"\n            },\n            \"require-dev\": {\n                \"symfony/console\": \"~3.4 || ~4.0 || ^5.0\",\n                \"symfony/phpunit-bridge\": \"^4.4 || ^5.0\",\n                \"symfony/yaml\": \"~3.4 || ~4.0 || ^5.0\"\n            },\n            \"type\": \"symfony-bundle\",\n            \"extra\": {\n                \"branch-alias\": {\n                    \"dev-master\": \"3.x-dev\"\n                }\n            },\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Symfony\\\\Bundle\\\\MonologBundle\\\\\": \"\"\n                },\n                \"exclude-from-classmap\": [\n                    \"/Tests/\"\n                ]\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Fabien Potencier\",\n                    \"email\": \"fabien@symfony.com\"\n                },\n                {\n                    \"name\": \"Symfony Community\",\n                    \"homepage\": \"http://symfony.com/contributors\"\n                }\n            ],\n            \"description\": \"Symfony MonologBundle\",\n            \"homepage\": \"http://symfony.com\",\n            \"keywords\": [\n                \"log\",\n                \"logging\"\n            ],\n            \"funding\": [\n                {\n                    \"url\": \"https://symfony.com/sponsor\",\n                    \"type\": \"custom\"\n                },\n                {\n                    \"url\": \"https://github.com/fabpot\",\n                    \"type\": \"github\"\n                },\n                {\n                    \"url\": \"https://tidelift.com/funding/github/packagist/symfony/symfony\",\n                    \"type\": \"tidelift\"\n                }\n            ],\n            \"time\": \"2020-10-06T15:12:11+00:00\"\n        },\n        {\n            \"name\": \"symfony/notifier\",\n            \"version\": \"v5.1.8\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/symfony/notifier.git\",\n                \"reference\": \"7beeb0122548109126aa74f97b7d03c0f95e594d\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/symfony/notifier/zipball/7beeb0122548109126aa74f97b7d03c0f95e594d\",\n                \"reference\": \"7beeb0122548109126aa74f97b7d03c0f95e594d\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=7.2.5\",\n                \"symfony/polyfill-php80\": \"^1.15\"\n            },\n            \"conflict\": {\n                \"symfony/http-kernel\": \"<4.4\"\n            },\n            \"type\": \"library\",\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Symfony\\\\Component\\\\Notifier\\\\\": \"\"\n                },\n                \"exclude-from-classmap\": [\n                    \"/Tests/\"\n                ]\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Fabien Potencier\",\n                    \"email\": \"fabien@symfony.com\"\n                },\n                {\n                    \"name\": \"Symfony Community\",\n                    \"homepage\": \"https://symfony.com/contributors\"\n                }\n            ],\n            \"description\": \"A library to notify messages\",\n            \"homepage\": \"https://symfony.com\",\n            \"keywords\": [\n                \"notification\",\n                \"notifier\"\n            ],\n            \"funding\": [\n                {\n                    \"url\": \"https://symfony.com/sponsor\",\n                    \"type\": \"custom\"\n                },\n                {\n                    \"url\": \"https://github.com/fabpot\",\n                    \"type\": \"github\"\n                },\n                {\n                    \"url\": \"https://tidelift.com/funding/github/packagist/symfony/symfony\",\n                    \"type\": \"tidelift\"\n                }\n            ],\n            \"time\": \"2020-10-24T12:03:25+00:00\"\n        },\n        {\n            \"name\": \"symfony/options-resolver\",\n            \"version\": \"v5.1.8\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/symfony/options-resolver.git\",\n                \"reference\": \"c6a02905e4ffc7a1498e8ee019db2b477cd1cc02\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/symfony/options-resolver/zipball/c6a02905e4ffc7a1498e8ee019db2b477cd1cc02\",\n                \"reference\": \"c6a02905e4ffc7a1498e8ee019db2b477cd1cc02\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=7.2.5\",\n                \"symfony/deprecation-contracts\": \"^2.1\",\n                \"symfony/polyfill-php80\": \"^1.15\"\n            },\n            \"type\": \"library\",\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Symfony\\\\Component\\\\OptionsResolver\\\\\": \"\"\n                },\n                \"exclude-from-classmap\": [\n                    \"/Tests/\"\n                ]\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Fabien Potencier\",\n                    \"email\": \"fabien@symfony.com\"\n                },\n                {\n                    \"name\": \"Symfony Community\",\n                    \"homepage\": \"https://symfony.com/contributors\"\n                }\n            ],\n            \"description\": \"Symfony OptionsResolver Component\",\n            \"homepage\": \"https://symfony.com\",\n            \"keywords\": [\n                \"config\",\n                \"configuration\",\n                \"options\"\n            ],\n            \"funding\": [\n                {\n                    \"url\": \"https://symfony.com/sponsor\",\n                    \"type\": \"custom\"\n                },\n                {\n                    \"url\": \"https://github.com/fabpot\",\n                    \"type\": \"github\"\n                },\n                {\n                    \"url\": \"https://tidelift.com/funding/github/packagist/symfony/symfony\",\n                    \"type\": \"tidelift\"\n                }\n            ],\n            \"time\": \"2020-10-24T12:01:57+00:00\"\n        },\n        {\n            \"name\": \"symfony/polyfill-intl-grapheme\",\n            \"version\": \"v1.20.0\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/symfony/polyfill-intl-grapheme.git\",\n                \"reference\": \"c7cf3f858ec7d70b89559d6e6eb1f7c2517d479c\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/symfony/polyfill-intl-grapheme/zipball/c7cf3f858ec7d70b89559d6e6eb1f7c2517d479c\",\n                \"reference\": \"c7cf3f858ec7d70b89559d6e6eb1f7c2517d479c\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=7.1\"\n            },\n            \"suggest\": {\n                \"ext-intl\": \"For best performance\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"branch-alias\": {\n                    \"dev-main\": \"1.20-dev\"\n                },\n                \"thanks\": {\n                    \"name\": \"symfony/polyfill\",\n                    \"url\": \"https://github.com/symfony/polyfill\"\n                }\n            },\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Symfony\\\\Polyfill\\\\Intl\\\\Grapheme\\\\\": \"\"\n                },\n                \"files\": [\n                    \"bootstrap.php\"\n                ]\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Nicolas Grekas\",\n                    \"email\": \"p@tchwork.com\"\n                },\n                {\n                    \"name\": \"Symfony Community\",\n                    \"homepage\": \"https://symfony.com/contributors\"\n                }\n            ],\n            \"description\": \"Symfony polyfill for intl's grapheme_* functions\",\n            \"homepage\": \"https://symfony.com\",\n            \"keywords\": [\n                \"compatibility\",\n                \"grapheme\",\n                \"intl\",\n                \"polyfill\",\n                \"portable\",\n                \"shim\"\n            ],\n            \"funding\": [\n                {\n                    \"url\": \"https://symfony.com/sponsor\",\n                    \"type\": \"custom\"\n                },\n                {\n                    \"url\": \"https://github.com/fabpot\",\n                    \"type\": \"github\"\n                },\n                {\n                    \"url\": \"https://tidelift.com/funding/github/packagist/symfony/symfony\",\n                    \"type\": \"tidelift\"\n                }\n            ],\n            \"time\": \"2020-10-23T14:02:19+00:00\"\n        },\n        {\n            \"name\": \"symfony/polyfill-intl-icu\",\n            \"version\": \"v1.20.0\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/symfony/polyfill-intl-icu.git\",\n                \"reference\": \"c44d5bf6a75eed79555c6bf37505c6d39559353e\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/symfony/polyfill-intl-icu/zipball/c44d5bf6a75eed79555c6bf37505c6d39559353e\",\n                \"reference\": \"c44d5bf6a75eed79555c6bf37505c6d39559353e\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=7.1\",\n                \"symfony/intl\": \"~2.3|~3.0|~4.0|~5.0\"\n            },\n            \"suggest\": {\n                \"ext-intl\": \"For best performance\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"branch-alias\": {\n                    \"dev-main\": \"1.20-dev\"\n                },\n                \"thanks\": {\n                    \"name\": \"symfony/polyfill\",\n                    \"url\": \"https://github.com/symfony/polyfill\"\n                }\n            },\n            \"autoload\": {\n                \"files\": [\n                    \"bootstrap.php\"\n                ]\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Nicolas Grekas\",\n                    \"email\": \"p@tchwork.com\"\n                },\n                {\n                    \"name\": \"Symfony Community\",\n                    \"homepage\": \"https://symfony.com/contributors\"\n                }\n            ],\n            \"description\": \"Symfony polyfill for intl's ICU-related data and classes\",\n            \"homepage\": \"https://symfony.com\",\n            \"keywords\": [\n                \"compatibility\",\n                \"icu\",\n                \"intl\",\n                \"polyfill\",\n                \"portable\",\n                \"shim\"\n            ],\n            \"funding\": [\n                {\n                    \"url\": \"https://symfony.com/sponsor\",\n                    \"type\": \"custom\"\n                },\n                {\n                    \"url\": \"https://github.com/fabpot\",\n                    \"type\": \"github\"\n                },\n                {\n                    \"url\": \"https://tidelift.com/funding/github/packagist/symfony/symfony\",\n                    \"type\": \"tidelift\"\n                }\n            ],\n            \"time\": \"2020-10-23T14:02:19+00:00\"\n        },\n        {\n            \"name\": \"symfony/polyfill-intl-idn\",\n            \"version\": \"v1.20.0\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/symfony/polyfill-intl-idn.git\",\n                \"reference\": \"3b75acd829741c768bc8b1f84eb33265e7cc5117\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/symfony/polyfill-intl-idn/zipball/3b75acd829741c768bc8b1f84eb33265e7cc5117\",\n                \"reference\": \"3b75acd829741c768bc8b1f84eb33265e7cc5117\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=7.1\",\n                \"symfony/polyfill-intl-normalizer\": \"^1.10\",\n                \"symfony/polyfill-php72\": \"^1.10\"\n            },\n            \"suggest\": {\n                \"ext-intl\": \"For best performance\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"branch-alias\": {\n                    \"dev-main\": \"1.20-dev\"\n                },\n                \"thanks\": {\n                    \"name\": \"symfony/polyfill\",\n                    \"url\": \"https://github.com/symfony/polyfill\"\n                }\n            },\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Symfony\\\\Polyfill\\\\Intl\\\\Idn\\\\\": \"\"\n                },\n                \"files\": [\n                    \"bootstrap.php\"\n                ]\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Laurent Bassin\",\n                    \"email\": \"laurent@bassin.info\"\n                },\n                {\n                    \"name\": \"Trevor Rowbotham\",\n                    \"email\": \"trevor.rowbotham@pm.me\"\n                },\n                {\n                    \"name\": \"Symfony Community\",\n                    \"homepage\": \"https://symfony.com/contributors\"\n                }\n            ],\n            \"description\": \"Symfony polyfill for intl's idn_to_ascii and idn_to_utf8 functions\",\n            \"homepage\": \"https://symfony.com\",\n            \"keywords\": [\n                \"compatibility\",\n                \"idn\",\n                \"intl\",\n                \"polyfill\",\n                \"portable\",\n                \"shim\"\n            ],\n            \"funding\": [\n                {\n                    \"url\": \"https://symfony.com/sponsor\",\n                    \"type\": \"custom\"\n                },\n                {\n                    \"url\": \"https://github.com/fabpot\",\n                    \"type\": \"github\"\n                },\n                {\n                    \"url\": \"https://tidelift.com/funding/github/packagist/symfony/symfony\",\n                    \"type\": \"tidelift\"\n                }\n            ],\n            \"time\": \"2020-10-23T14:02:19+00:00\"\n        },\n        {\n            \"name\": \"symfony/polyfill-intl-normalizer\",\n            \"version\": \"v1.20.0\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/symfony/polyfill-intl-normalizer.git\",\n                \"reference\": \"727d1096295d807c309fb01a851577302394c897\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/symfony/polyfill-intl-normalizer/zipball/727d1096295d807c309fb01a851577302394c897\",\n                \"reference\": \"727d1096295d807c309fb01a851577302394c897\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=7.1\"\n            },\n            \"suggest\": {\n                \"ext-intl\": \"For best performance\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"branch-alias\": {\n                    \"dev-main\": \"1.20-dev\"\n                },\n                \"thanks\": {\n                    \"name\": \"symfony/polyfill\",\n                    \"url\": \"https://github.com/symfony/polyfill\"\n                }\n            },\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Symfony\\\\Polyfill\\\\Intl\\\\Normalizer\\\\\": \"\"\n                },\n                \"files\": [\n                    \"bootstrap.php\"\n                ],\n                \"classmap\": [\n                    \"Resources/stubs\"\n                ]\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Nicolas Grekas\",\n                    \"email\": \"p@tchwork.com\"\n                },\n                {\n                    \"name\": \"Symfony Community\",\n                    \"homepage\": \"https://symfony.com/contributors\"\n                }\n            ],\n            \"description\": \"Symfony polyfill for intl's Normalizer class and related functions\",\n            \"homepage\": \"https://symfony.com\",\n            \"keywords\": [\n                \"compatibility\",\n                \"intl\",\n                \"normalizer\",\n                \"polyfill\",\n                \"portable\",\n                \"shim\"\n            ],\n            \"funding\": [\n                {\n                    \"url\": \"https://symfony.com/sponsor\",\n                    \"type\": \"custom\"\n                },\n                {\n                    \"url\": \"https://github.com/fabpot\",\n                    \"type\": \"github\"\n                },\n                {\n                    \"url\": \"https://tidelift.com/funding/github/packagist/symfony/symfony\",\n                    \"type\": \"tidelift\"\n                }\n            ],\n            \"time\": \"2020-10-23T14:02:19+00:00\"\n        },\n        {\n            \"name\": \"symfony/polyfill-mbstring\",\n            \"version\": \"v1.20.0\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/symfony/polyfill-mbstring.git\",\n                \"reference\": \"39d483bdf39be819deabf04ec872eb0b2410b531\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/symfony/polyfill-mbstring/zipball/39d483bdf39be819deabf04ec872eb0b2410b531\",\n                \"reference\": \"39d483bdf39be819deabf04ec872eb0b2410b531\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=7.1\"\n            },\n            \"suggest\": {\n                \"ext-mbstring\": \"For best performance\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"branch-alias\": {\n                    \"dev-main\": \"1.20-dev\"\n                },\n                \"thanks\": {\n                    \"name\": \"symfony/polyfill\",\n                    \"url\": \"https://github.com/symfony/polyfill\"\n                }\n            },\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Symfony\\\\Polyfill\\\\Mbstring\\\\\": \"\"\n                },\n                \"files\": [\n                    \"bootstrap.php\"\n                ]\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Nicolas Grekas\",\n                    \"email\": \"p@tchwork.com\"\n                },\n                {\n                    \"name\": \"Symfony Community\",\n                    \"homepage\": \"https://symfony.com/contributors\"\n                }\n            ],\n            \"description\": \"Symfony polyfill for the Mbstring extension\",\n            \"homepage\": \"https://symfony.com\",\n            \"keywords\": [\n                \"compatibility\",\n                \"mbstring\",\n                \"polyfill\",\n                \"portable\",\n                \"shim\"\n            ],\n            \"funding\": [\n                {\n                    \"url\": \"https://symfony.com/sponsor\",\n                    \"type\": \"custom\"\n                },\n                {\n                    \"url\": \"https://github.com/fabpot\",\n                    \"type\": \"github\"\n                },\n                {\n                    \"url\": \"https://tidelift.com/funding/github/packagist/symfony/symfony\",\n                    \"type\": \"tidelift\"\n                }\n            ],\n            \"time\": \"2020-10-23T14:02:19+00:00\"\n        },\n        {\n            \"name\": \"symfony/polyfill-php73\",\n            \"version\": \"v1.20.0\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/symfony/polyfill-php73.git\",\n                \"reference\": \"8ff431c517be11c78c48a39a66d37431e26a6bed\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/symfony/polyfill-php73/zipball/8ff431c517be11c78c48a39a66d37431e26a6bed\",\n                \"reference\": \"8ff431c517be11c78c48a39a66d37431e26a6bed\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=7.1\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"branch-alias\": {\n                    \"dev-main\": \"1.20-dev\"\n                },\n                \"thanks\": {\n                    \"name\": \"symfony/polyfill\",\n                    \"url\": \"https://github.com/symfony/polyfill\"\n                }\n            },\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Symfony\\\\Polyfill\\\\Php73\\\\\": \"\"\n                },\n                \"files\": [\n                    \"bootstrap.php\"\n                ],\n                \"classmap\": [\n                    \"Resources/stubs\"\n                ]\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Nicolas Grekas\",\n                    \"email\": \"p@tchwork.com\"\n                },\n                {\n                    \"name\": \"Symfony Community\",\n                    \"homepage\": \"https://symfony.com/contributors\"\n                }\n            ],\n            \"description\": \"Symfony polyfill backporting some PHP 7.3+ features to lower PHP versions\",\n            \"homepage\": \"https://symfony.com\",\n            \"keywords\": [\n                \"compatibility\",\n                \"polyfill\",\n                \"portable\",\n                \"shim\"\n            ],\n            \"funding\": [\n                {\n                    \"url\": \"https://symfony.com/sponsor\",\n                    \"type\": \"custom\"\n                },\n                {\n                    \"url\": \"https://github.com/fabpot\",\n                    \"type\": \"github\"\n                },\n                {\n                    \"url\": \"https://tidelift.com/funding/github/packagist/symfony/symfony\",\n                    \"type\": \"tidelift\"\n                }\n            ],\n            \"time\": \"2020-10-23T14:02:19+00:00\"\n        },\n        {\n            \"name\": \"symfony/polyfill-php80\",\n            \"version\": \"v1.20.0\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/symfony/polyfill-php80.git\",\n                \"reference\": \"e70aa8b064c5b72d3df2abd5ab1e90464ad009de\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/symfony/polyfill-php80/zipball/e70aa8b064c5b72d3df2abd5ab1e90464ad009de\",\n                \"reference\": \"e70aa8b064c5b72d3df2abd5ab1e90464ad009de\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=7.1\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"branch-alias\": {\n                    \"dev-main\": \"1.20-dev\"\n                },\n                \"thanks\": {\n                    \"name\": \"symfony/polyfill\",\n                    \"url\": \"https://github.com/symfony/polyfill\"\n                }\n            },\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Symfony\\\\Polyfill\\\\Php80\\\\\": \"\"\n                },\n                \"files\": [\n                    \"bootstrap.php\"\n                ],\n                \"classmap\": [\n                    \"Resources/stubs\"\n                ]\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Ion Bazan\",\n                    \"email\": \"ion.bazan@gmail.com\"\n                },\n                {\n                    \"name\": \"Nicolas Grekas\",\n                    \"email\": \"p@tchwork.com\"\n                },\n                {\n                    \"name\": \"Symfony Community\",\n                    \"homepage\": \"https://symfony.com/contributors\"\n                }\n            ],\n            \"description\": \"Symfony polyfill backporting some PHP 8.0+ features to lower PHP versions\",\n            \"homepage\": \"https://symfony.com\",\n            \"keywords\": [\n                \"compatibility\",\n                \"polyfill\",\n                \"portable\",\n                \"shim\"\n            ],\n            \"funding\": [\n                {\n                    \"url\": \"https://symfony.com/sponsor\",\n                    \"type\": \"custom\"\n                },\n                {\n                    \"url\": \"https://github.com/fabpot\",\n                    \"type\": \"github\"\n                },\n                {\n                    \"url\": \"https://tidelift.com/funding/github/packagist/symfony/symfony\",\n                    \"type\": \"tidelift\"\n                }\n            ],\n            \"time\": \"2020-10-23T14:02:19+00:00\"\n        },\n        {\n            \"name\": \"symfony/process\",\n            \"version\": \"v5.1.8\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/symfony/process.git\",\n                \"reference\": \"f00872c3f6804150d6a0f73b4151daab96248101\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/symfony/process/zipball/f00872c3f6804150d6a0f73b4151daab96248101\",\n                \"reference\": \"f00872c3f6804150d6a0f73b4151daab96248101\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=7.2.5\",\n                \"symfony/polyfill-php80\": \"^1.15\"\n            },\n            \"type\": \"library\",\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Symfony\\\\Component\\\\Process\\\\\": \"\"\n                },\n                \"exclude-from-classmap\": [\n                    \"/Tests/\"\n                ]\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Fabien Potencier\",\n                    \"email\": \"fabien@symfony.com\"\n                },\n                {\n                    \"name\": \"Symfony Community\",\n                    \"homepage\": \"https://symfony.com/contributors\"\n                }\n            ],\n            \"description\": \"Symfony Process Component\",\n            \"homepage\": \"https://symfony.com\",\n            \"funding\": [\n                {\n                    \"url\": \"https://symfony.com/sponsor\",\n                    \"type\": \"custom\"\n                },\n                {\n                    \"url\": \"https://github.com/fabpot\",\n                    \"type\": \"github\"\n                },\n                {\n                    \"url\": \"https://tidelift.com/funding/github/packagist/symfony/symfony\",\n                    \"type\": \"tidelift\"\n                }\n            ],\n            \"time\": \"2020-10-24T12:01:57+00:00\"\n        },\n        {\n            \"name\": \"symfony/property-access\",\n            \"version\": \"v5.1.8\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/symfony/property-access.git\",\n                \"reference\": \"5d77df9a88600797d02c7937c153965ba3537933\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/symfony/property-access/zipball/5d77df9a88600797d02c7937c153965ba3537933\",\n                \"reference\": \"5d77df9a88600797d02c7937c153965ba3537933\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=7.2.5\",\n                \"symfony/polyfill-php80\": \"^1.15\",\n                \"symfony/property-info\": \"^5.1.1\"\n            },\n            \"require-dev\": {\n                \"symfony/cache\": \"^4.4|^5.0\"\n            },\n            \"suggest\": {\n                \"psr/cache-implementation\": \"To cache access methods.\"\n            },\n            \"type\": \"library\",\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Symfony\\\\Component\\\\PropertyAccess\\\\\": \"\"\n                },\n                \"exclude-from-classmap\": [\n                    \"/Tests/\"\n                ]\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Fabien Potencier\",\n                    \"email\": \"fabien@symfony.com\"\n                },\n                {\n                    \"name\": \"Symfony Community\",\n                    \"homepage\": \"https://symfony.com/contributors\"\n                }\n            ],\n            \"description\": \"Symfony PropertyAccess Component\",\n            \"homepage\": \"https://symfony.com\",\n            \"keywords\": [\n                \"access\",\n                \"array\",\n                \"extraction\",\n                \"index\",\n                \"injection\",\n                \"object\",\n                \"property\",\n                \"property path\",\n                \"reflection\"\n            ],\n            \"funding\": [\n                {\n                    \"url\": \"https://symfony.com/sponsor\",\n                    \"type\": \"custom\"\n                },\n                {\n                    \"url\": \"https://github.com/fabpot\",\n                    \"type\": \"github\"\n                },\n                {\n                    \"url\": \"https://tidelift.com/funding/github/packagist/symfony/symfony\",\n                    \"type\": \"tidelift\"\n                }\n            ],\n            \"time\": \"2020-10-24T12:01:57+00:00\"\n        },\n        {\n            \"name\": \"symfony/property-info\",\n            \"version\": \"v5.1.8\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/symfony/property-info.git\",\n                \"reference\": \"fc15c51f829887b62a94a917ba793f51e80ea3e1\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/symfony/property-info/zipball/fc15c51f829887b62a94a917ba793f51e80ea3e1\",\n                \"reference\": \"fc15c51f829887b62a94a917ba793f51e80ea3e1\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=7.2.5\",\n                \"symfony/polyfill-php80\": \"^1.15\",\n                \"symfony/string\": \"^5.1\"\n            },\n            \"conflict\": {\n                \"phpdocumentor/reflection-docblock\": \"<3.2.2\",\n                \"phpdocumentor/type-resolver\": \"<0.3.0\",\n                \"symfony/dependency-injection\": \"<4.4\"\n            },\n            \"require-dev\": {\n                \"doctrine/annotations\": \"~1.7\",\n                \"phpdocumentor/reflection-docblock\": \"^3.0|^4.0|^5.0\",\n                \"symfony/cache\": \"^4.4|^5.0\",\n                \"symfony/dependency-injection\": \"^4.4|^5.0\",\n                \"symfony/serializer\": \"^4.4|^5.0\"\n            },\n            \"suggest\": {\n                \"phpdocumentor/reflection-docblock\": \"To use the PHPDoc\",\n                \"psr/cache-implementation\": \"To cache results\",\n                \"symfony/doctrine-bridge\": \"To use Doctrine metadata\",\n                \"symfony/serializer\": \"To use Serializer metadata\"\n            },\n            \"type\": \"library\",\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Symfony\\\\Component\\\\PropertyInfo\\\\\": \"\"\n                },\n                \"exclude-from-classmap\": [\n                    \"/Tests/\"\n                ]\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Kévin Dunglas\",\n                    \"email\": \"dunglas@gmail.com\"\n                },\n                {\n                    \"name\": \"Symfony Community\",\n                    \"homepage\": \"https://symfony.com/contributors\"\n                }\n            ],\n            \"description\": \"Symfony Property Info Component\",\n            \"homepage\": \"https://symfony.com\",\n            \"keywords\": [\n                \"doctrine\",\n                \"phpdoc\",\n                \"property\",\n                \"symfony\",\n                \"type\",\n                \"validator\"\n            ],\n            \"funding\": [\n                {\n                    \"url\": \"https://symfony.com/sponsor\",\n                    \"type\": \"custom\"\n                },\n                {\n                    \"url\": \"https://github.com/fabpot\",\n                    \"type\": \"github\"\n                },\n                {\n                    \"url\": \"https://tidelift.com/funding/github/packagist/symfony/symfony\",\n                    \"type\": \"tidelift\"\n                }\n            ],\n            \"time\": \"2020-10-24T12:01:57+00:00\"\n        },\n        {\n            \"name\": \"symfony/routing\",\n            \"version\": \"v5.1.8\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/symfony/routing.git\",\n                \"reference\": \"d6ceee2a37b61b41079005207bf37746d1bfe71f\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/symfony/routing/zipball/d6ceee2a37b61b41079005207bf37746d1bfe71f\",\n                \"reference\": \"d6ceee2a37b61b41079005207bf37746d1bfe71f\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=7.2.5\",\n                \"symfony/deprecation-contracts\": \"^2.1\",\n                \"symfony/polyfill-php80\": \"^1.15\"\n            },\n            \"conflict\": {\n                \"symfony/config\": \"<5.0\",\n                \"symfony/dependency-injection\": \"<4.4\",\n                \"symfony/yaml\": \"<4.4\"\n            },\n            \"require-dev\": {\n                \"doctrine/annotations\": \"~1.2\",\n                \"psr/log\": \"~1.0\",\n                \"symfony/config\": \"^5.0\",\n                \"symfony/dependency-injection\": \"^4.4|^5.0\",\n                \"symfony/expression-language\": \"^4.4|^5.0\",\n                \"symfony/http-foundation\": \"^4.4|^5.0\",\n                \"symfony/yaml\": \"^4.4|^5.0\"\n            },\n            \"suggest\": {\n                \"doctrine/annotations\": \"For using the annotation loader\",\n                \"symfony/config\": \"For using the all-in-one router or any loader\",\n                \"symfony/expression-language\": \"For using expression matching\",\n                \"symfony/http-foundation\": \"For using a Symfony Request object\",\n                \"symfony/yaml\": \"For using the YAML loader\"\n            },\n            \"type\": \"library\",\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Symfony\\\\Component\\\\Routing\\\\\": \"\"\n                },\n                \"exclude-from-classmap\": [\n                    \"/Tests/\"\n                ]\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Fabien Potencier\",\n                    \"email\": \"fabien@symfony.com\"\n                },\n                {\n                    \"name\": \"Symfony Community\",\n                    \"homepage\": \"https://symfony.com/contributors\"\n                }\n            ],\n            \"description\": \"Symfony Routing Component\",\n            \"homepage\": \"https://symfony.com\",\n            \"keywords\": [\n                \"router\",\n                \"routing\",\n                \"uri\",\n                \"url\"\n            ],\n            \"funding\": [\n                {\n                    \"url\": \"https://symfony.com/sponsor\",\n                    \"type\": \"custom\"\n                },\n                {\n                    \"url\": \"https://github.com/fabpot\",\n                    \"type\": \"github\"\n                },\n                {\n                    \"url\": \"https://tidelift.com/funding/github/packagist/symfony/symfony\",\n                    \"type\": \"tidelift\"\n                }\n            ],\n            \"time\": \"2020-10-24T12:01:57+00:00\"\n        },\n        {\n            \"name\": \"symfony/security-bundle\",\n            \"version\": \"v5.1.8\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/symfony/security-bundle.git\",\n                \"reference\": \"8921cdb1057f615b8340a352195f4a684c876893\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/symfony/security-bundle/zipball/8921cdb1057f615b8340a352195f4a684c876893\",\n                \"reference\": \"8921cdb1057f615b8340a352195f4a684c876893\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"ext-xml\": \"*\",\n                \"php\": \">=7.2.5\",\n                \"symfony/config\": \"^4.4|^5.0\",\n                \"symfony/dependency-injection\": \"^5.1\",\n                \"symfony/event-dispatcher\": \"^5.1\",\n                \"symfony/http-kernel\": \"^5.0\",\n                \"symfony/polyfill-php80\": \"^1.15\",\n                \"symfony/security-core\": \"^5.1\",\n                \"symfony/security-csrf\": \"^4.4|^5.0\",\n                \"symfony/security-guard\": \"^5.1\",\n                \"symfony/security-http\": \"^5.1,>=5.1.2\"\n            },\n            \"conflict\": {\n                \"symfony/browser-kit\": \"<4.4\",\n                \"symfony/console\": \"<4.4\",\n                \"symfony/framework-bundle\": \"<4.4\",\n                \"symfony/ldap\": \"<4.4\",\n                \"symfony/twig-bundle\": \"<4.4\"\n            },\n            \"require-dev\": {\n                \"doctrine/doctrine-bundle\": \"^2.0\",\n                \"symfony/asset\": \"^4.4|^5.0\",\n                \"symfony/browser-kit\": \"^4.4|^5.0\",\n                \"symfony/console\": \"^4.4|^5.0\",\n                \"symfony/css-selector\": \"^4.4|^5.0\",\n                \"symfony/dom-crawler\": \"^4.4|^5.0\",\n                \"symfony/expression-language\": \"^4.4|^5.0\",\n                \"symfony/form\": \"^4.4|^5.0\",\n                \"symfony/framework-bundle\": \"^4.4|^5.0\",\n                \"symfony/process\": \"^4.4|^5.0\",\n                \"symfony/serializer\": \"^4.4|^5.0\",\n                \"symfony/translation\": \"^4.4|^5.0\",\n                \"symfony/twig-bridge\": \"^4.4|^5.0\",\n                \"symfony/twig-bundle\": \"^4.4|^5.0\",\n                \"symfony/validator\": \"^4.4|^5.0\",\n                \"symfony/yaml\": \"^4.4|^5.0\",\n                \"twig/twig\": \"^2.10|^3.0\"\n            },\n            \"type\": \"symfony-bundle\",\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Symfony\\\\Bundle\\\\SecurityBundle\\\\\": \"\"\n                },\n                \"exclude-from-classmap\": [\n                    \"/Tests/\"\n                ]\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Fabien Potencier\",\n                    \"email\": \"fabien@symfony.com\"\n                },\n                {\n                    \"name\": \"Symfony Community\",\n                    \"homepage\": \"https://symfony.com/contributors\"\n                }\n            ],\n            \"description\": \"Symfony SecurityBundle\",\n            \"homepage\": \"https://symfony.com\",\n            \"funding\": [\n                {\n                    \"url\": \"https://symfony.com/sponsor\",\n                    \"type\": \"custom\"\n                },\n                {\n                    \"url\": \"https://github.com/fabpot\",\n                    \"type\": \"github\"\n                },\n                {\n                    \"url\": \"https://tidelift.com/funding/github/packagist/symfony/symfony\",\n                    \"type\": \"tidelift\"\n                }\n            ],\n            \"time\": \"2020-10-24T12:01:57+00:00\"\n        },\n        {\n            \"name\": \"symfony/security-core\",\n            \"version\": \"v5.1.8\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/symfony/security-core.git\",\n                \"reference\": \"13f97112f3a7f7877460777602d4d1e7a21a5f39\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/symfony/security-core/zipball/13f97112f3a7f7877460777602d4d1e7a21a5f39\",\n                \"reference\": \"13f97112f3a7f7877460777602d4d1e7a21a5f39\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=7.2.5\",\n                \"symfony/deprecation-contracts\": \"^2.1\",\n                \"symfony/event-dispatcher-contracts\": \"^1.1|^2\",\n                \"symfony/polyfill-php80\": \"^1.15\",\n                \"symfony/service-contracts\": \"^1.1.6|^2\"\n            },\n            \"conflict\": {\n                \"symfony/event-dispatcher\": \"<4.4\",\n                \"symfony/ldap\": \"<4.4\",\n                \"symfony/security-guard\": \"<4.4\"\n            },\n            \"require-dev\": {\n                \"psr/container\": \"^1.0\",\n                \"psr/log\": \"~1.0\",\n                \"symfony/event-dispatcher\": \"^4.4|^5.0\",\n                \"symfony/expression-language\": \"^4.4|^5.0\",\n                \"symfony/http-foundation\": \"^4.4|^5.0\",\n                \"symfony/ldap\": \"^4.4|^5.0\",\n                \"symfony/validator\": \"^4.4|^5.0\"\n            },\n            \"suggest\": {\n                \"psr/container-implementation\": \"To instantiate the Security class\",\n                \"symfony/event-dispatcher\": \"\",\n                \"symfony/expression-language\": \"For using the expression voter\",\n                \"symfony/http-foundation\": \"\",\n                \"symfony/ldap\": \"For using LDAP integration\",\n                \"symfony/validator\": \"For using the user password constraint\"\n            },\n            \"type\": \"library\",\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Symfony\\\\Component\\\\Security\\\\Core\\\\\": \"\"\n                },\n                \"exclude-from-classmap\": [\n                    \"/Tests/\"\n                ]\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Fabien Potencier\",\n                    \"email\": \"fabien@symfony.com\"\n                },\n                {\n                    \"name\": \"Symfony Community\",\n                    \"homepage\": \"https://symfony.com/contributors\"\n                }\n            ],\n            \"description\": \"Symfony Security Component - Core Library\",\n            \"homepage\": \"https://symfony.com\",\n            \"funding\": [\n                {\n                    \"url\": \"https://symfony.com/sponsor\",\n                    \"type\": \"custom\"\n                },\n                {\n                    \"url\": \"https://github.com/fabpot\",\n                    \"type\": \"github\"\n                },\n                {\n                    \"url\": \"https://tidelift.com/funding/github/packagist/symfony/symfony\",\n                    \"type\": \"tidelift\"\n                }\n            ],\n            \"time\": \"2020-10-28T05:25:38+00:00\"\n        },\n        {\n            \"name\": \"symfony/security-csrf\",\n            \"version\": \"v5.1.8\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/symfony/security-csrf.git\",\n                \"reference\": \"6d8ea23a4f0b88a13c254d007f3d814ed882f42a\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/symfony/security-csrf/zipball/6d8ea23a4f0b88a13c254d007f3d814ed882f42a\",\n                \"reference\": \"6d8ea23a4f0b88a13c254d007f3d814ed882f42a\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=7.2.5\",\n                \"symfony/security-core\": \"^4.4|^5.0\"\n            },\n            \"conflict\": {\n                \"symfony/http-foundation\": \"<4.4\"\n            },\n            \"require-dev\": {\n                \"symfony/http-foundation\": \"^4.4|^5.0\"\n            },\n            \"suggest\": {\n                \"symfony/http-foundation\": \"For using the class SessionTokenStorage.\"\n            },\n            \"type\": \"library\",\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Symfony\\\\Component\\\\Security\\\\Csrf\\\\\": \"\"\n                },\n                \"exclude-from-classmap\": [\n                    \"/Tests/\"\n                ]\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Fabien Potencier\",\n                    \"email\": \"fabien@symfony.com\"\n                },\n                {\n                    \"name\": \"Symfony Community\",\n                    \"homepage\": \"https://symfony.com/contributors\"\n                }\n            ],\n            \"description\": \"Symfony Security Component - CSRF Library\",\n            \"homepage\": \"https://symfony.com\",\n            \"funding\": [\n                {\n                    \"url\": \"https://symfony.com/sponsor\",\n                    \"type\": \"custom\"\n                },\n                {\n                    \"url\": \"https://github.com/fabpot\",\n                    \"type\": \"github\"\n                },\n                {\n                    \"url\": \"https://tidelift.com/funding/github/packagist/symfony/symfony\",\n                    \"type\": \"tidelift\"\n                }\n            ],\n            \"time\": \"2020-10-24T12:01:57+00:00\"\n        },\n        {\n            \"name\": \"symfony/security-guard\",\n            \"version\": \"v5.1.8\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/symfony/security-guard.git\",\n                \"reference\": \"076e2af7e61723ff50b281806b4d0f5e4df4e6b3\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/symfony/security-guard/zipball/076e2af7e61723ff50b281806b4d0f5e4df4e6b3\",\n                \"reference\": \"076e2af7e61723ff50b281806b4d0f5e4df4e6b3\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=7.2.5\",\n                \"symfony/polyfill-php80\": \"^1.15\",\n                \"symfony/security-core\": \"^5.0\",\n                \"symfony/security-http\": \"^4.4.1|^5.0.1\"\n            },\n            \"require-dev\": {\n                \"psr/log\": \"~1.0\"\n            },\n            \"type\": \"library\",\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Symfony\\\\Component\\\\Security\\\\Guard\\\\\": \"\"\n                },\n                \"exclude-from-classmap\": [\n                    \"/Tests/\"\n                ]\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Fabien Potencier\",\n                    \"email\": \"fabien@symfony.com\"\n                },\n                {\n                    \"name\": \"Symfony Community\",\n                    \"homepage\": \"https://symfony.com/contributors\"\n                }\n            ],\n            \"description\": \"Symfony Security Component - Guard\",\n            \"homepage\": \"https://symfony.com\",\n            \"funding\": [\n                {\n                    \"url\": \"https://symfony.com/sponsor\",\n                    \"type\": \"custom\"\n                },\n                {\n                    \"url\": \"https://github.com/fabpot\",\n                    \"type\": \"github\"\n                },\n                {\n                    \"url\": \"https://tidelift.com/funding/github/packagist/symfony/symfony\",\n                    \"type\": \"tidelift\"\n                }\n            ],\n            \"time\": \"2020-10-24T12:01:57+00:00\"\n        },\n        {\n            \"name\": \"symfony/security-http\",\n            \"version\": \"v5.1.8\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/symfony/security-http.git\",\n                \"reference\": \"01fc5b3a641ea851624555793c19e6cec11b596f\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/symfony/security-http/zipball/01fc5b3a641ea851624555793c19e6cec11b596f\",\n                \"reference\": \"01fc5b3a641ea851624555793c19e6cec11b596f\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=7.2.5\",\n                \"symfony/deprecation-contracts\": \"^2.1\",\n                \"symfony/http-foundation\": \"^4.4.7|^5.0.7\",\n                \"symfony/http-kernel\": \"^4.4|^5.0\",\n                \"symfony/polyfill-php80\": \"^1.15\",\n                \"symfony/property-access\": \"^4.4|^5.0\",\n                \"symfony/security-core\": \"^5.1\"\n            },\n            \"conflict\": {\n                \"symfony/event-dispatcher\": \"<4.3\",\n                \"symfony/security-csrf\": \"<4.4\"\n            },\n            \"require-dev\": {\n                \"psr/log\": \"~1.0\",\n                \"symfony/routing\": \"^4.4|^5.0\",\n                \"symfony/security-csrf\": \"^4.4|^5.0\"\n            },\n            \"suggest\": {\n                \"symfony/routing\": \"For using the HttpUtils class to create sub-requests, redirect the user, and match URLs\",\n                \"symfony/security-csrf\": \"For using tokens to protect authentication/logout attempts\"\n            },\n            \"type\": \"library\",\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Symfony\\\\Component\\\\Security\\\\Http\\\\\": \"\"\n                },\n                \"exclude-from-classmap\": [\n                    \"/Tests/\"\n                ]\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Fabien Potencier\",\n                    \"email\": \"fabien@symfony.com\"\n                },\n                {\n                    \"name\": \"Symfony Community\",\n                    \"homepage\": \"https://symfony.com/contributors\"\n                }\n            ],\n            \"description\": \"Symfony Security Component - HTTP Integration\",\n            \"homepage\": \"https://symfony.com\",\n            \"funding\": [\n                {\n                    \"url\": \"https://symfony.com/sponsor\",\n                    \"type\": \"custom\"\n                },\n                {\n                    \"url\": \"https://github.com/fabpot\",\n                    \"type\": \"github\"\n                },\n                {\n                    \"url\": \"https://tidelift.com/funding/github/packagist/symfony/symfony\",\n                    \"type\": \"tidelift\"\n                }\n            ],\n            \"time\": \"2020-10-25T22:13:28+00:00\"\n        },\n        {\n            \"name\": \"symfony/serializer\",\n            \"version\": \"v5.1.8\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/symfony/serializer.git\",\n                \"reference\": \"20d3c6c58c41344a427488c0d2902bfbfbe17ddb\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/symfony/serializer/zipball/20d3c6c58c41344a427488c0d2902bfbfbe17ddb\",\n                \"reference\": \"20d3c6c58c41344a427488c0d2902bfbfbe17ddb\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=7.2.5\",\n                \"symfony/polyfill-ctype\": \"~1.8\",\n                \"symfony/polyfill-php80\": \"^1.15\"\n            },\n            \"conflict\": {\n                \"phpdocumentor/type-resolver\": \"<0.2.1\",\n                \"symfony/dependency-injection\": \"<4.4\",\n                \"symfony/property-access\": \"<4.4\",\n                \"symfony/property-info\": \"<4.4\",\n                \"symfony/yaml\": \"<4.4\"\n            },\n            \"require-dev\": {\n                \"doctrine/annotations\": \"~1.0\",\n                \"doctrine/cache\": \"~1.0\",\n                \"phpdocumentor/reflection-docblock\": \"^3.2|^4.0\",\n                \"symfony/cache\": \"^4.4|^5.0\",\n                \"symfony/config\": \"^4.4|^5.0\",\n                \"symfony/dependency-injection\": \"^4.4|^5.0\",\n                \"symfony/error-handler\": \"^4.4|^5.0\",\n                \"symfony/http-foundation\": \"^4.4|^5.0\",\n                \"symfony/mime\": \"^4.4|^5.0\",\n                \"symfony/property-access\": \"^4.4|^5.0\",\n                \"symfony/property-info\": \"^4.4|^5.0\",\n                \"symfony/validator\": \"^4.4|^5.0\",\n                \"symfony/yaml\": \"^4.4|^5.0\"\n            },\n            \"suggest\": {\n                \"doctrine/annotations\": \"For using the annotation mapping. You will also need doctrine/cache.\",\n                \"doctrine/cache\": \"For using the default cached annotation reader and metadata cache.\",\n                \"psr/cache-implementation\": \"For using the metadata cache.\",\n                \"symfony/config\": \"For using the XML mapping loader.\",\n                \"symfony/mime\": \"For using a MIME type guesser within the DataUriNormalizer.\",\n                \"symfony/property-access\": \"For using the ObjectNormalizer.\",\n                \"symfony/property-info\": \"To deserialize relations.\",\n                \"symfony/yaml\": \"For using the default YAML mapping loader.\"\n            },\n            \"type\": \"library\",\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Symfony\\\\Component\\\\Serializer\\\\\": \"\"\n                },\n                \"exclude-from-classmap\": [\n                    \"/Tests/\"\n                ]\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Fabien Potencier\",\n                    \"email\": \"fabien@symfony.com\"\n                },\n                {\n                    \"name\": \"Symfony Community\",\n                    \"homepage\": \"https://symfony.com/contributors\"\n                }\n            ],\n            \"description\": \"Symfony Serializer Component\",\n            \"homepage\": \"https://symfony.com\",\n            \"funding\": [\n                {\n                    \"url\": \"https://symfony.com/sponsor\",\n                    \"type\": \"custom\"\n                },\n                {\n                    \"url\": \"https://github.com/fabpot\",\n                    \"type\": \"github\"\n                },\n                {\n                    \"url\": \"https://tidelift.com/funding/github/packagist/symfony/symfony\",\n                    \"type\": \"tidelift\"\n                }\n            ],\n            \"time\": \"2020-10-24T12:01:57+00:00\"\n        },\n        {\n            \"name\": \"symfony/service-contracts\",\n            \"version\": \"v2.2.0\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/symfony/service-contracts.git\",\n                \"reference\": \"d15da7ba4957ffb8f1747218be9e1a121fd298a1\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/symfony/service-contracts/zipball/d15da7ba4957ffb8f1747218be9e1a121fd298a1\",\n                \"reference\": \"d15da7ba4957ffb8f1747218be9e1a121fd298a1\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=7.2.5\",\n                \"psr/container\": \"^1.0\"\n            },\n            \"suggest\": {\n                \"symfony/service-implementation\": \"\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"branch-alias\": {\n                    \"dev-master\": \"2.2-dev\"\n                },\n                \"thanks\": {\n                    \"name\": \"symfony/contracts\",\n                    \"url\": \"https://github.com/symfony/contracts\"\n                }\n            },\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Symfony\\\\Contracts\\\\Service\\\\\": \"\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Nicolas Grekas\",\n                    \"email\": \"p@tchwork.com\"\n                },\n                {\n                    \"name\": \"Symfony Community\",\n                    \"homepage\": \"https://symfony.com/contributors\"\n                }\n            ],\n            \"description\": \"Generic abstractions related to writing services\",\n            \"homepage\": \"https://symfony.com\",\n            \"keywords\": [\n                \"abstractions\",\n                \"contracts\",\n                \"decoupling\",\n                \"interfaces\",\n                \"interoperability\",\n                \"standards\"\n            ],\n            \"funding\": [\n                {\n                    \"url\": \"https://symfony.com/sponsor\",\n                    \"type\": \"custom\"\n                },\n                {\n                    \"url\": \"https://github.com/fabpot\",\n                    \"type\": \"github\"\n                },\n                {\n                    \"url\": \"https://tidelift.com/funding/github/packagist/symfony/symfony\",\n                    \"type\": \"tidelift\"\n                }\n            ],\n            \"time\": \"2020-09-07T11:33:47+00:00\"\n        },\n        {\n            \"name\": \"symfony/stopwatch\",\n            \"version\": \"v5.1.8\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/symfony/stopwatch.git\",\n                \"reference\": \"3d9f57c89011f0266e6b1d469e5c0110513859d5\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/symfony/stopwatch/zipball/3d9f57c89011f0266e6b1d469e5c0110513859d5\",\n                \"reference\": \"3d9f57c89011f0266e6b1d469e5c0110513859d5\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=7.2.5\",\n                \"symfony/service-contracts\": \"^1.0|^2\"\n            },\n            \"type\": \"library\",\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Symfony\\\\Component\\\\Stopwatch\\\\\": \"\"\n                },\n                \"exclude-from-classmap\": [\n                    \"/Tests/\"\n                ]\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Fabien Potencier\",\n                    \"email\": \"fabien@symfony.com\"\n                },\n                {\n                    \"name\": \"Symfony Community\",\n                    \"homepage\": \"https://symfony.com/contributors\"\n                }\n            ],\n            \"description\": \"Symfony Stopwatch Component\",\n            \"homepage\": \"https://symfony.com\",\n            \"funding\": [\n                {\n                    \"url\": \"https://symfony.com/sponsor\",\n                    \"type\": \"custom\"\n                },\n                {\n                    \"url\": \"https://github.com/fabpot\",\n                    \"type\": \"github\"\n                },\n                {\n                    \"url\": \"https://tidelift.com/funding/github/packagist/symfony/symfony\",\n                    \"type\": \"tidelift\"\n                }\n            ],\n            \"time\": \"2020-10-24T12:01:57+00:00\"\n        },\n        {\n            \"name\": \"symfony/string\",\n            \"version\": \"v5.1.8\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/symfony/string.git\",\n                \"reference\": \"a97573e960303db71be0dd8fda9be3bca5e0feea\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/symfony/string/zipball/a97573e960303db71be0dd8fda9be3bca5e0feea\",\n                \"reference\": \"a97573e960303db71be0dd8fda9be3bca5e0feea\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=7.2.5\",\n                \"symfony/polyfill-ctype\": \"~1.8\",\n                \"symfony/polyfill-intl-grapheme\": \"~1.0\",\n                \"symfony/polyfill-intl-normalizer\": \"~1.0\",\n                \"symfony/polyfill-mbstring\": \"~1.0\",\n                \"symfony/polyfill-php80\": \"~1.15\"\n            },\n            \"require-dev\": {\n                \"symfony/error-handler\": \"^4.4|^5.0\",\n                \"symfony/http-client\": \"^4.4|^5.0\",\n                \"symfony/translation-contracts\": \"^1.1|^2\",\n                \"symfony/var-exporter\": \"^4.4|^5.0\"\n            },\n            \"type\": \"library\",\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Symfony\\\\Component\\\\String\\\\\": \"\"\n                },\n                \"files\": [\n                    \"Resources/functions.php\"\n                ],\n                \"exclude-from-classmap\": [\n                    \"/Tests/\"\n                ]\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Nicolas Grekas\",\n                    \"email\": \"p@tchwork.com\"\n                },\n                {\n                    \"name\": \"Symfony Community\",\n                    \"homepage\": \"https://symfony.com/contributors\"\n                }\n            ],\n            \"description\": \"Symfony String component\",\n            \"homepage\": \"https://symfony.com\",\n            \"keywords\": [\n                \"grapheme\",\n                \"i18n\",\n                \"string\",\n                \"unicode\",\n                \"utf-8\",\n                \"utf8\"\n            ],\n            \"funding\": [\n                {\n                    \"url\": \"https://symfony.com/sponsor\",\n                    \"type\": \"custom\"\n                },\n                {\n                    \"url\": \"https://github.com/fabpot\",\n                    \"type\": \"github\"\n                },\n                {\n                    \"url\": \"https://tidelift.com/funding/github/packagist/symfony/symfony\",\n                    \"type\": \"tidelift\"\n                }\n            ],\n            \"time\": \"2020-10-24T12:01:57+00:00\"\n        },\n        {\n            \"name\": \"symfony/swiftmailer-bundle\",\n            \"version\": \"v3.5.1\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/symfony/swiftmailer-bundle.git\",\n                \"reference\": \"933be6a3196fb354615290f53ff7ff61e0bdde58\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/symfony/swiftmailer-bundle/zipball/933be6a3196fb354615290f53ff7ff61e0bdde58\",\n                \"reference\": \"933be6a3196fb354615290f53ff7ff61e0bdde58\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=7.1\",\n                \"swiftmailer/swiftmailer\": \"^6.1.3\",\n                \"symfony/config\": \"^4.4|^5.0\",\n                \"symfony/dependency-injection\": \"^4.4|^5.0\",\n                \"symfony/http-kernel\": \"^4.4|^5.0\"\n            },\n            \"conflict\": {\n                \"twig/twig\": \"<1.41|<2.10\"\n            },\n            \"require-dev\": {\n                \"symfony/console\": \"^4.4|^5.0\",\n                \"symfony/framework-bundle\": \"^4.4|^5.0\",\n                \"symfony/phpunit-bridge\": \"^4.4|^5.0\",\n                \"symfony/yaml\": \"^4.4|^5.0\"\n            },\n            \"type\": \"symfony-bundle\",\n            \"extra\": {\n                \"branch-alias\": {\n                    \"dev-master\": \"3.5-dev\"\n                }\n            },\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Symfony\\\\Bundle\\\\SwiftmailerBundle\\\\\": \"\"\n                },\n                \"exclude-from-classmap\": [\n                    \"/Tests/\"\n                ]\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Fabien Potencier\",\n                    \"email\": \"fabien@symfony.com\"\n                },\n                {\n                    \"name\": \"Symfony Community\",\n                    \"homepage\": \"http://symfony.com/contributors\"\n                }\n            ],\n            \"description\": \"Symfony SwiftmailerBundle\",\n            \"homepage\": \"http://symfony.com\",\n            \"funding\": [\n                {\n                    \"url\": \"https://symfony.com/sponsor\",\n                    \"type\": \"custom\"\n                },\n                {\n                    \"url\": \"https://github.com/fabpot\",\n                    \"type\": \"github\"\n                },\n                {\n                    \"url\": \"https://tidelift.com/funding/github/packagist/symfony/symfony\",\n                    \"type\": \"tidelift\"\n                }\n            ],\n            \"time\": \"2020-10-06T05:51:35+00:00\"\n        },\n        {\n            \"name\": \"symfony/translation\",\n            \"version\": \"v5.1.8\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/symfony/translation.git\",\n                \"reference\": \"27980838fd261e04379fa91e94e81e662fe5a1b6\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/symfony/translation/zipball/27980838fd261e04379fa91e94e81e662fe5a1b6\",\n                \"reference\": \"27980838fd261e04379fa91e94e81e662fe5a1b6\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=7.2.5\",\n                \"symfony/polyfill-mbstring\": \"~1.0\",\n                \"symfony/polyfill-php80\": \"^1.15\",\n                \"symfony/translation-contracts\": \"^2\"\n            },\n            \"conflict\": {\n                \"symfony/config\": \"<4.4\",\n                \"symfony/dependency-injection\": \"<5.0\",\n                \"symfony/http-kernel\": \"<5.0\",\n                \"symfony/twig-bundle\": \"<5.0\",\n                \"symfony/yaml\": \"<4.4\"\n            },\n            \"provide\": {\n                \"symfony/translation-implementation\": \"2.0\"\n            },\n            \"require-dev\": {\n                \"psr/log\": \"~1.0\",\n                \"symfony/config\": \"^4.4|^5.0\",\n                \"symfony/console\": \"^4.4|^5.0\",\n                \"symfony/dependency-injection\": \"^5.0\",\n                \"symfony/finder\": \"^4.4|^5.0\",\n                \"symfony/http-kernel\": \"^5.0\",\n                \"symfony/intl\": \"^4.4|^5.0\",\n                \"symfony/service-contracts\": \"^1.1.2|^2\",\n                \"symfony/yaml\": \"^4.4|^5.0\"\n            },\n            \"suggest\": {\n                \"psr/log-implementation\": \"To use logging capability in translator\",\n                \"symfony/config\": \"\",\n                \"symfony/yaml\": \"\"\n            },\n            \"type\": \"library\",\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Symfony\\\\Component\\\\Translation\\\\\": \"\"\n                },\n                \"exclude-from-classmap\": [\n                    \"/Tests/\"\n                ]\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Fabien Potencier\",\n                    \"email\": \"fabien@symfony.com\"\n                },\n                {\n                    \"name\": \"Symfony Community\",\n                    \"homepage\": \"https://symfony.com/contributors\"\n                }\n            ],\n            \"description\": \"Symfony Translation Component\",\n            \"homepage\": \"https://symfony.com\",\n            \"funding\": [\n                {\n                    \"url\": \"https://symfony.com/sponsor\",\n                    \"type\": \"custom\"\n                },\n                {\n                    \"url\": \"https://github.com/fabpot\",\n                    \"type\": \"github\"\n                },\n                {\n                    \"url\": \"https://tidelift.com/funding/github/packagist/symfony/symfony\",\n                    \"type\": \"tidelift\"\n                }\n            ],\n            \"time\": \"2020-10-24T12:01:57+00:00\"\n        },\n        {\n            \"name\": \"symfony/translation-contracts\",\n            \"version\": \"v2.3.0\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/symfony/translation-contracts.git\",\n                \"reference\": \"e2eaa60b558f26a4b0354e1bbb25636efaaad105\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/symfony/translation-contracts/zipball/e2eaa60b558f26a4b0354e1bbb25636efaaad105\",\n                \"reference\": \"e2eaa60b558f26a4b0354e1bbb25636efaaad105\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=7.2.5\"\n            },\n            \"suggest\": {\n                \"symfony/translation-implementation\": \"\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"branch-alias\": {\n                    \"dev-master\": \"2.3-dev\"\n                },\n                \"thanks\": {\n                    \"name\": \"symfony/contracts\",\n                    \"url\": \"https://github.com/symfony/contracts\"\n                }\n            },\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Symfony\\\\Contracts\\\\Translation\\\\\": \"\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Nicolas Grekas\",\n                    \"email\": \"p@tchwork.com\"\n                },\n                {\n                    \"name\": \"Symfony Community\",\n                    \"homepage\": \"https://symfony.com/contributors\"\n                }\n            ],\n            \"description\": \"Generic abstractions related to translation\",\n            \"homepage\": \"https://symfony.com\",\n            \"keywords\": [\n                \"abstractions\",\n                \"contracts\",\n                \"decoupling\",\n                \"interfaces\",\n                \"interoperability\",\n                \"standards\"\n            ],\n            \"funding\": [\n                {\n                    \"url\": \"https://symfony.com/sponsor\",\n                    \"type\": \"custom\"\n                },\n                {\n                    \"url\": \"https://github.com/fabpot\",\n                    \"type\": \"github\"\n                },\n                {\n                    \"url\": \"https://tidelift.com/funding/github/packagist/symfony/symfony\",\n                    \"type\": \"tidelift\"\n                }\n            ],\n            \"time\": \"2020-09-28T13:05:58+00:00\"\n        },\n        {\n            \"name\": \"symfony/twig-bridge\",\n            \"version\": \"v5.1.8\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/symfony/twig-bridge.git\",\n                \"reference\": \"874735a8c97963af2009e0eaee55b17fc0846db2\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/symfony/twig-bridge/zipball/874735a8c97963af2009e0eaee55b17fc0846db2\",\n                \"reference\": \"874735a8c97963af2009e0eaee55b17fc0846db2\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=7.2.5\",\n                \"symfony/polyfill-php80\": \"^1.15\",\n                \"symfony/translation-contracts\": \"^1.1|^2\",\n                \"twig/twig\": \"^2.10|^3.0\"\n            },\n            \"conflict\": {\n                \"symfony/console\": \"<4.4\",\n                \"symfony/form\": \"<5.1\",\n                \"symfony/http-foundation\": \"<4.4\",\n                \"symfony/http-kernel\": \"<4.4\",\n                \"symfony/translation\": \"<5.0\",\n                \"symfony/workflow\": \"<4.4\"\n            },\n            \"require-dev\": {\n                \"egulias/email-validator\": \"^2.1.10\",\n                \"symfony/asset\": \"^4.4|^5.0\",\n                \"symfony/console\": \"^4.4|^5.0\",\n                \"symfony/dependency-injection\": \"^4.4|^5.0\",\n                \"symfony/expression-language\": \"^4.4|^5.0\",\n                \"symfony/finder\": \"^4.4|^5.0\",\n                \"symfony/form\": \"^5.1\",\n                \"symfony/http-foundation\": \"^4.4|^5.0\",\n                \"symfony/http-kernel\": \"^4.4|^5.0\",\n                \"symfony/mime\": \"^4.4|^5.0\",\n                \"symfony/polyfill-intl-icu\": \"~1.0\",\n                \"symfony/routing\": \"^4.4|^5.0\",\n                \"symfony/security-acl\": \"^2.8|^3.0\",\n                \"symfony/security-core\": \"^4.4|^5.0\",\n                \"symfony/security-csrf\": \"^4.4|^5.0\",\n                \"symfony/security-http\": \"^4.4|^5.0\",\n                \"symfony/stopwatch\": \"^4.4|^5.0\",\n                \"symfony/translation\": \"^5.0\",\n                \"symfony/web-link\": \"^4.4|^5.0\",\n                \"symfony/workflow\": \"^4.4|^5.0\",\n                \"symfony/yaml\": \"^4.4|^5.0\",\n                \"twig/cssinliner-extra\": \"^2.12\",\n                \"twig/inky-extra\": \"^2.12\",\n                \"twig/markdown-extra\": \"^2.12\"\n            },\n            \"suggest\": {\n                \"symfony/asset\": \"For using the AssetExtension\",\n                \"symfony/expression-language\": \"For using the ExpressionExtension\",\n                \"symfony/finder\": \"\",\n                \"symfony/form\": \"For using the FormExtension\",\n                \"symfony/http-kernel\": \"For using the HttpKernelExtension\",\n                \"symfony/routing\": \"For using the RoutingExtension\",\n                \"symfony/security-core\": \"For using the SecurityExtension\",\n                \"symfony/security-csrf\": \"For using the CsrfExtension\",\n                \"symfony/security-http\": \"For using the LogoutUrlExtension\",\n                \"symfony/stopwatch\": \"For using the StopwatchExtension\",\n                \"symfony/translation\": \"For using the TranslationExtension\",\n                \"symfony/var-dumper\": \"For using the DumpExtension\",\n                \"symfony/web-link\": \"For using the WebLinkExtension\",\n                \"symfony/yaml\": \"For using the YamlExtension\"\n            },\n            \"type\": \"symfony-bridge\",\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Symfony\\\\Bridge\\\\Twig\\\\\": \"\"\n                },\n                \"exclude-from-classmap\": [\n                    \"/Tests/\"\n                ]\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Fabien Potencier\",\n                    \"email\": \"fabien@symfony.com\"\n                },\n                {\n                    \"name\": \"Symfony Community\",\n                    \"homepage\": \"https://symfony.com/contributors\"\n                }\n            ],\n            \"description\": \"Symfony Twig Bridge\",\n            \"homepage\": \"https://symfony.com\",\n            \"funding\": [\n                {\n                    \"url\": \"https://symfony.com/sponsor\",\n                    \"type\": \"custom\"\n                },\n                {\n                    \"url\": \"https://github.com/fabpot\",\n                    \"type\": \"github\"\n                },\n                {\n                    \"url\": \"https://tidelift.com/funding/github/packagist/symfony/symfony\",\n                    \"type\": \"tidelift\"\n                }\n            ],\n            \"time\": \"2020-10-24T12:01:57+00:00\"\n        },\n        {\n            \"name\": \"symfony/twig-bundle\",\n            \"version\": \"v5.1.8\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/symfony/twig-bundle.git\",\n                \"reference\": \"370bb30a9e8dc2b0c29791eec300b0b529bd783f\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/symfony/twig-bundle/zipball/370bb30a9e8dc2b0c29791eec300b0b529bd783f\",\n                \"reference\": \"370bb30a9e8dc2b0c29791eec300b0b529bd783f\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=7.2.5\",\n                \"symfony/config\": \"^4.4|^5.0\",\n                \"symfony/http-foundation\": \"^4.4|^5.0\",\n                \"symfony/http-kernel\": \"^5.0\",\n                \"symfony/polyfill-ctype\": \"~1.8\",\n                \"symfony/twig-bridge\": \"^5.0\",\n                \"twig/twig\": \"^2.10|^3.0\"\n            },\n            \"conflict\": {\n                \"symfony/dependency-injection\": \"<4.4\",\n                \"symfony/framework-bundle\": \"<5.0\",\n                \"symfony/translation\": \"<5.0\"\n            },\n            \"require-dev\": {\n                \"doctrine/annotations\": \"~1.7\",\n                \"doctrine/cache\": \"~1.0\",\n                \"symfony/asset\": \"^4.4|^5.0\",\n                \"symfony/dependency-injection\": \"^4.4|^5.0\",\n                \"symfony/expression-language\": \"^4.4|^5.0\",\n                \"symfony/finder\": \"^4.4|^5.0\",\n                \"symfony/form\": \"^4.4|^5.0\",\n                \"symfony/framework-bundle\": \"^5.0\",\n                \"symfony/routing\": \"^4.4|^5.0\",\n                \"symfony/stopwatch\": \"^4.4|^5.0\",\n                \"symfony/translation\": \"^5.0\",\n                \"symfony/web-link\": \"^4.4|^5.0\",\n                \"symfony/yaml\": \"^4.4|^5.0\"\n            },\n            \"type\": \"symfony-bundle\",\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Symfony\\\\Bundle\\\\TwigBundle\\\\\": \"\"\n                },\n                \"exclude-from-classmap\": [\n                    \"/Tests/\"\n                ]\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Fabien Potencier\",\n                    \"email\": \"fabien@symfony.com\"\n                },\n                {\n                    \"name\": \"Symfony Community\",\n                    \"homepage\": \"https://symfony.com/contributors\"\n                }\n            ],\n            \"description\": \"Symfony TwigBundle\",\n            \"homepage\": \"https://symfony.com\",\n            \"funding\": [\n                {\n                    \"url\": \"https://symfony.com/sponsor\",\n                    \"type\": \"custom\"\n                },\n                {\n                    \"url\": \"https://github.com/fabpot\",\n                    \"type\": \"github\"\n                },\n                {\n                    \"url\": \"https://tidelift.com/funding/github/packagist/symfony/symfony\",\n                    \"type\": \"tidelift\"\n                }\n            ],\n            \"time\": \"2020-10-24T12:01:57+00:00\"\n        },\n        {\n            \"name\": \"symfony/validator\",\n            \"version\": \"v5.1.8\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/symfony/validator.git\",\n                \"reference\": \"360acadab7edcdca9005c4ad3b535f9c20db62fb\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/symfony/validator/zipball/360acadab7edcdca9005c4ad3b535f9c20db62fb\",\n                \"reference\": \"360acadab7edcdca9005c4ad3b535f9c20db62fb\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=7.2.5\",\n                \"symfony/deprecation-contracts\": \"^2.0\",\n                \"symfony/polyfill-ctype\": \"~1.8\",\n                \"symfony/polyfill-mbstring\": \"~1.0\",\n                \"symfony/polyfill-php80\": \"^1.15\",\n                \"symfony/translation-contracts\": \"^1.1|^2\"\n            },\n            \"conflict\": {\n                \"doctrine/lexer\": \"<1.0.2\",\n                \"phpunit/phpunit\": \"<5.4.3\",\n                \"symfony/dependency-injection\": \"<4.4\",\n                \"symfony/expression-language\": \"<5.1\",\n                \"symfony/http-kernel\": \"<4.4\",\n                \"symfony/intl\": \"<4.4\",\n                \"symfony/translation\": \"<4.4\",\n                \"symfony/yaml\": \"<4.4\"\n            },\n            \"require-dev\": {\n                \"doctrine/annotations\": \"~1.7\",\n                \"doctrine/cache\": \"~1.0\",\n                \"egulias/email-validator\": \"^2.1.10\",\n                \"symfony/cache\": \"^4.4|^5.0\",\n                \"symfony/config\": \"^4.4|^5.0\",\n                \"symfony/dependency-injection\": \"^4.4|^5.0\",\n                \"symfony/expression-language\": \"^5.1\",\n                \"symfony/http-client\": \"^4.4|^5.0\",\n                \"symfony/http-foundation\": \"^4.4|^5.0\",\n                \"symfony/http-kernel\": \"^4.4|^5.0\",\n                \"symfony/intl\": \"^4.4|^5.0\",\n                \"symfony/mime\": \"^4.4|^5.0\",\n                \"symfony/property-access\": \"^4.4|^5.0\",\n                \"symfony/property-info\": \"^4.4|^5.0\",\n                \"symfony/translation\": \"^4.4|^5.0\",\n                \"symfony/yaml\": \"^4.4|^5.0\"\n            },\n            \"suggest\": {\n                \"doctrine/annotations\": \"For using the annotation mapping. You will also need doctrine/cache.\",\n                \"doctrine/cache\": \"For using the default cached annotation reader.\",\n                \"egulias/email-validator\": \"Strict (RFC compliant) email validation\",\n                \"psr/cache-implementation\": \"For using the mapping cache.\",\n                \"symfony/config\": \"\",\n                \"symfony/expression-language\": \"For using the Expression validator and the ExpressionLanguageSyntax constraints\",\n                \"symfony/http-foundation\": \"\",\n                \"symfony/intl\": \"\",\n                \"symfony/property-access\": \"For accessing properties within comparison constraints\",\n                \"symfony/property-info\": \"To automatically add NotNull and Type constraints\",\n                \"symfony/translation\": \"For translating validation errors.\",\n                \"symfony/yaml\": \"\"\n            },\n            \"type\": \"library\",\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Symfony\\\\Component\\\\Validator\\\\\": \"\"\n                },\n                \"exclude-from-classmap\": [\n                    \"/Tests/\"\n                ]\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Fabien Potencier\",\n                    \"email\": \"fabien@symfony.com\"\n                },\n                {\n                    \"name\": \"Symfony Community\",\n                    \"homepage\": \"https://symfony.com/contributors\"\n                }\n            ],\n            \"description\": \"Symfony Validator Component\",\n            \"homepage\": \"https://symfony.com\",\n            \"funding\": [\n                {\n                    \"url\": \"https://symfony.com/sponsor\",\n                    \"type\": \"custom\"\n                },\n                {\n                    \"url\": \"https://github.com/fabpot\",\n                    \"type\": \"github\"\n                },\n                {\n                    \"url\": \"https://tidelift.com/funding/github/packagist/symfony/symfony\",\n                    \"type\": \"tidelift\"\n                }\n            ],\n            \"time\": \"2020-10-28T05:25:38+00:00\"\n        },\n        {\n            \"name\": \"symfony/var-dumper\",\n            \"version\": \"v5.1.8\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/symfony/var-dumper.git\",\n                \"reference\": \"4e13f3fcefb1fcaaa5efb5403581406f4e840b9a\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/symfony/var-dumper/zipball/4e13f3fcefb1fcaaa5efb5403581406f4e840b9a\",\n                \"reference\": \"4e13f3fcefb1fcaaa5efb5403581406f4e840b9a\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=7.2.5\",\n                \"symfony/polyfill-mbstring\": \"~1.0\",\n                \"symfony/polyfill-php80\": \"^1.15\"\n            },\n            \"conflict\": {\n                \"phpunit/phpunit\": \"<5.4.3\",\n                \"symfony/console\": \"<4.4\"\n            },\n            \"require-dev\": {\n                \"ext-iconv\": \"*\",\n                \"symfony/console\": \"^4.4|^5.0\",\n                \"symfony/process\": \"^4.4|^5.0\",\n                \"twig/twig\": \"^2.4|^3.0\"\n            },\n            \"suggest\": {\n                \"ext-iconv\": \"To convert non-UTF-8 strings to UTF-8 (or symfony/polyfill-iconv in case ext-iconv cannot be used).\",\n                \"ext-intl\": \"To show region name in time zone dump\",\n                \"symfony/console\": \"To use the ServerDumpCommand and/or the bin/var-dump-server script\"\n            },\n            \"bin\": [\n                \"Resources/bin/var-dump-server\"\n            ],\n            \"type\": \"library\",\n            \"autoload\": {\n                \"files\": [\n                    \"Resources/functions/dump.php\"\n                ],\n                \"psr-4\": {\n                    \"Symfony\\\\Component\\\\VarDumper\\\\\": \"\"\n                },\n                \"exclude-from-classmap\": [\n                    \"/Tests/\"\n                ]\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Nicolas Grekas\",\n                    \"email\": \"p@tchwork.com\"\n                },\n                {\n                    \"name\": \"Symfony Community\",\n                    \"homepage\": \"https://symfony.com/contributors\"\n                }\n            ],\n            \"description\": \"Symfony mechanism for exploring and dumping PHP variables\",\n            \"homepage\": \"https://symfony.com\",\n            \"keywords\": [\n                \"debug\",\n                \"dump\"\n            ],\n            \"funding\": [\n                {\n                    \"url\": \"https://symfony.com/sponsor\",\n                    \"type\": \"custom\"\n                },\n                {\n                    \"url\": \"https://github.com/fabpot\",\n                    \"type\": \"github\"\n                },\n                {\n                    \"url\": \"https://tidelift.com/funding/github/packagist/symfony/symfony\",\n                    \"type\": \"tidelift\"\n                }\n            ],\n            \"time\": \"2020-10-27T10:11:13+00:00\"\n        },\n        {\n            \"name\": \"symfony/var-exporter\",\n            \"version\": \"v5.1.8\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/symfony/var-exporter.git\",\n                \"reference\": \"b4048bfc6248413592462c029381bdb2f7b6525f\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/symfony/var-exporter/zipball/b4048bfc6248413592462c029381bdb2f7b6525f\",\n                \"reference\": \"b4048bfc6248413592462c029381bdb2f7b6525f\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=7.2.5\",\n                \"symfony/polyfill-php80\": \"^1.15\"\n            },\n            \"require-dev\": {\n                \"symfony/var-dumper\": \"^4.4.9|^5.0.9\"\n            },\n            \"type\": \"library\",\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Symfony\\\\Component\\\\VarExporter\\\\\": \"\"\n                },\n                \"exclude-from-classmap\": [\n                    \"/Tests/\"\n                ]\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Nicolas Grekas\",\n                    \"email\": \"p@tchwork.com\"\n                },\n                {\n                    \"name\": \"Symfony Community\",\n                    \"homepage\": \"https://symfony.com/contributors\"\n                }\n            ],\n            \"description\": \"A blend of var_export() + serialize() to turn any serializable data structure to plain PHP code\",\n            \"homepage\": \"https://symfony.com\",\n            \"keywords\": [\n                \"clone\",\n                \"construct\",\n                \"export\",\n                \"hydrate\",\n                \"instantiate\",\n                \"serialize\"\n            ],\n            \"funding\": [\n                {\n                    \"url\": \"https://symfony.com/sponsor\",\n                    \"type\": \"custom\"\n                },\n                {\n                    \"url\": \"https://github.com/fabpot\",\n                    \"type\": \"github\"\n                },\n                {\n                    \"url\": \"https://tidelift.com/funding/github/packagist/symfony/symfony\",\n                    \"type\": \"tidelift\"\n                }\n            ],\n            \"time\": \"2020-10-24T12:01:57+00:00\"\n        },\n        {\n            \"name\": \"symfony/web-link\",\n            \"version\": \"v5.1.8\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/symfony/web-link.git\",\n                \"reference\": \"e805314ad8c4298d9bfc75335e35f83d6db2f43f\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/symfony/web-link/zipball/e805314ad8c4298d9bfc75335e35f83d6db2f43f\",\n                \"reference\": \"e805314ad8c4298d9bfc75335e35f83d6db2f43f\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=7.2.5\",\n                \"psr/link\": \"^1.0\"\n            },\n            \"conflict\": {\n                \"symfony/http-kernel\": \"<4.4\"\n            },\n            \"provide\": {\n                \"psr/link-implementation\": \"1.0\"\n            },\n            \"require-dev\": {\n                \"symfony/http-foundation\": \"^4.4|^5.0\",\n                \"symfony/http-kernel\": \"^4.4|^5.0\"\n            },\n            \"suggest\": {\n                \"symfony/http-kernel\": \"\"\n            },\n            \"type\": \"library\",\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Symfony\\\\Component\\\\WebLink\\\\\": \"\"\n                },\n                \"exclude-from-classmap\": [\n                    \"/Tests/\"\n                ]\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Kévin Dunglas\",\n                    \"email\": \"dunglas@gmail.com\"\n                },\n                {\n                    \"name\": \"Symfony Community\",\n                    \"homepage\": \"https://symfony.com/contributors\"\n                }\n            ],\n            \"description\": \"Symfony WebLink Component\",\n            \"homepage\": \"https://symfony.com\",\n            \"keywords\": [\n                \"dns-prefetch\",\n                \"http\",\n                \"http2\",\n                \"link\",\n                \"performance\",\n                \"prefetch\",\n                \"preload\",\n                \"prerender\",\n                \"psr13\",\n                \"push\"\n            ],\n            \"funding\": [\n                {\n                    \"url\": \"https://symfony.com/sponsor\",\n                    \"type\": \"custom\"\n                },\n                {\n                    \"url\": \"https://github.com/fabpot\",\n                    \"type\": \"github\"\n                },\n                {\n                    \"url\": \"https://tidelift.com/funding/github/packagist/symfony/symfony\",\n                    \"type\": \"tidelift\"\n                }\n            ],\n            \"time\": \"2020-10-24T12:01:57+00:00\"\n        },\n        {\n            \"name\": \"symfony/yaml\",\n            \"version\": \"v5.1.8\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/symfony/yaml.git\",\n                \"reference\": \"f284e032c3cefefb9943792132251b79a6127ca6\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/symfony/yaml/zipball/f284e032c3cefefb9943792132251b79a6127ca6\",\n                \"reference\": \"f284e032c3cefefb9943792132251b79a6127ca6\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=7.2.5\",\n                \"symfony/deprecation-contracts\": \"^2.1\",\n                \"symfony/polyfill-ctype\": \"~1.8\"\n            },\n            \"conflict\": {\n                \"symfony/console\": \"<4.4\"\n            },\n            \"require-dev\": {\n                \"symfony/console\": \"^4.4|^5.0\"\n            },\n            \"suggest\": {\n                \"symfony/console\": \"For validating YAML files using the lint command\"\n            },\n            \"bin\": [\n                \"Resources/bin/yaml-lint\"\n            ],\n            \"type\": \"library\",\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Symfony\\\\Component\\\\Yaml\\\\\": \"\"\n                },\n                \"exclude-from-classmap\": [\n                    \"/Tests/\"\n                ]\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Fabien Potencier\",\n                    \"email\": \"fabien@symfony.com\"\n                },\n                {\n                    \"name\": \"Symfony Community\",\n                    \"homepage\": \"https://symfony.com/contributors\"\n                }\n            ],\n            \"description\": \"Symfony Yaml Component\",\n            \"homepage\": \"https://symfony.com\",\n            \"funding\": [\n                {\n                    \"url\": \"https://symfony.com/sponsor\",\n                    \"type\": \"custom\"\n                },\n                {\n                    \"url\": \"https://github.com/fabpot\",\n                    \"type\": \"github\"\n                },\n                {\n                    \"url\": \"https://tidelift.com/funding/github/packagist/symfony/symfony\",\n                    \"type\": \"tidelift\"\n                }\n            ],\n            \"time\": \"2020-10-24T12:03:25+00:00\"\n        },\n        {\n            \"name\": \"twig/extra-bundle\",\n            \"version\": \"v3.1.1\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/twigphp/twig-extra-bundle.git\",\n                \"reference\": \"a7c5799cf742ab0827f5d32df37528ee8bf5a233\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/twigphp/twig-extra-bundle/zipball/a7c5799cf742ab0827f5d32df37528ee8bf5a233\",\n                \"reference\": \"a7c5799cf742ab0827f5d32df37528ee8bf5a233\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \"^7.1.3|^8.0\",\n                \"symfony/framework-bundle\": \"^4.3|^5.0\",\n                \"symfony/twig-bundle\": \"^4.3|^5.0\",\n                \"twig/twig\": \"^2.4|^3.0\"\n            },\n            \"require-dev\": {\n                \"twig/cssinliner-extra\": \"^2.12|^3.0\",\n                \"twig/html-extra\": \"^2.12|^3.0\",\n                \"twig/inky-extra\": \"^2.12|^3.0\",\n                \"twig/intl-extra\": \"^2.12|^3.0\",\n                \"twig/markdown-extra\": \"^2.12|^3.0\"\n            },\n            \"type\": \"symfony-bundle\",\n            \"extra\": {\n                \"branch-alias\": {\n                    \"dev-master\": \"3.0-dev\"\n                }\n            },\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Twig\\\\Extra\\\\TwigExtraBundle\\\\\": \"src/\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Fabien Potencier\",\n                    \"email\": \"fabien@symfony.com\",\n                    \"homepage\": \"http://fabien.potencier.org\",\n                    \"role\": \"Lead Developer\"\n                }\n            ],\n            \"description\": \"A Symfony bundle for extra Twig extensions\",\n            \"homepage\": \"https://twig.symfony.com\",\n            \"keywords\": [\n                \"bundle\",\n                \"extra\",\n                \"twig\"\n            ],\n            \"funding\": [\n                {\n                    \"url\": \"https://github.com/fabpot\",\n                    \"type\": \"github\"\n                },\n                {\n                    \"url\": \"https://tidelift.com/funding/github/packagist/twig/twig\",\n                    \"type\": \"tidelift\"\n                }\n            ],\n            \"time\": \"2020-05-21T09:56:39+00:00\"\n        },\n        {\n            \"name\": \"twig/twig\",\n            \"version\": \"v3.1.1\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/twigphp/Twig.git\",\n                \"reference\": \"b02fa41f3783a2616eccef7b92fbc2343ffed737\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/twigphp/Twig/zipball/b02fa41f3783a2616eccef7b92fbc2343ffed737\",\n                \"reference\": \"b02fa41f3783a2616eccef7b92fbc2343ffed737\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=7.2.5\",\n                \"symfony/polyfill-ctype\": \"^1.8\",\n                \"symfony/polyfill-mbstring\": \"^1.3\"\n            },\n            \"require-dev\": {\n                \"psr/container\": \"^1.0\",\n                \"symfony/phpunit-bridge\": \"^4.4.9|^5.0.9\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"branch-alias\": {\n                    \"dev-master\": \"3.1-dev\"\n                }\n            },\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Twig\\\\\": \"src/\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"BSD-3-Clause\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Fabien Potencier\",\n                    \"email\": \"fabien@symfony.com\",\n                    \"homepage\": \"http://fabien.potencier.org\",\n                    \"role\": \"Lead Developer\"\n                },\n                {\n                    \"name\": \"Twig Team\",\n                    \"role\": \"Contributors\"\n                },\n                {\n                    \"name\": \"Armin Ronacher\",\n                    \"email\": \"armin.ronacher@active-4.com\",\n                    \"role\": \"Project Founder\"\n                }\n            ],\n            \"description\": \"Twig, the flexible, fast, and secure template language for PHP\",\n            \"homepage\": \"https://twig.symfony.com\",\n            \"keywords\": [\n                \"templating\"\n            ],\n            \"funding\": [\n                {\n                    \"url\": \"https://github.com/fabpot\",\n                    \"type\": \"github\"\n                },\n                {\n                    \"url\": \"https://tidelift.com/funding/github/packagist/twig/twig\",\n                    \"type\": \"tidelift\"\n                }\n            ],\n            \"time\": \"2020-10-27T19:28:23+00:00\"\n        },\n        {\n            \"name\": \"webimpress/safe-writer\",\n            \"version\": \"2.1.0\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/webimpress/safe-writer.git\",\n                \"reference\": \"5cfafdec5873c389036f14bf832a5efc9390dcdd\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/webimpress/safe-writer/zipball/5cfafdec5873c389036f14bf832a5efc9390dcdd\",\n                \"reference\": \"5cfafdec5873c389036f14bf832a5efc9390dcdd\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \"^7.2 || ^8.0\"\n            },\n            \"require-dev\": {\n                \"phpunit/phpunit\": \"^8.5.8 || ^9.3.7\",\n                \"vimeo/psalm\": \"^3.14.2\",\n                \"webimpress/coding-standard\": \"^1.1.5\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"branch-alias\": {\n                    \"dev-master\": \"2.1.x-dev\",\n                    \"dev-develop\": \"2.2.x-dev\",\n                    \"dev-release-1.0\": \"1.0.x-dev\"\n                }\n            },\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Webimpress\\\\SafeWriter\\\\\": \"src/\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"BSD-2-Clause\"\n            ],\n            \"description\": \"Tool to write files safely, to avoid race conditions\",\n            \"keywords\": [\n                \"concurrent write\",\n                \"file writer\",\n                \"race condition\",\n                \"safe writer\",\n                \"webimpress\"\n            ],\n            \"funding\": [\n                {\n                    \"url\": \"https://github.com/michalbundyra\",\n                    \"type\": \"github\"\n                }\n            ],\n            \"time\": \"2020-08-25T07:21:11+00:00\"\n        },\n        {\n            \"name\": \"webmozart/assert\",\n            \"version\": \"1.9.1\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/webmozart/assert.git\",\n                \"reference\": \"bafc69caeb4d49c39fd0779086c03a3738cbb389\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/webmozart/assert/zipball/bafc69caeb4d49c39fd0779086c03a3738cbb389\",\n                \"reference\": \"bafc69caeb4d49c39fd0779086c03a3738cbb389\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \"^5.3.3 || ^7.0 || ^8.0\",\n                \"symfony/polyfill-ctype\": \"^1.8\"\n            },\n            \"conflict\": {\n                \"phpstan/phpstan\": \"<0.12.20\",\n                \"vimeo/psalm\": \"<3.9.1\"\n            },\n            \"require-dev\": {\n                \"phpunit/phpunit\": \"^4.8.36 || ^7.5.13\"\n            },\n            \"type\": \"library\",\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Webmozart\\\\Assert\\\\\": \"src/\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Bernhard Schussek\",\n                    \"email\": \"bschussek@gmail.com\"\n                }\n            ],\n            \"description\": \"Assertions to validate method input/output with nice error messages.\",\n            \"keywords\": [\n                \"assert\",\n                \"check\",\n                \"validate\"\n            ],\n            \"time\": \"2020-07-08T17:02:28+00:00\"\n        }\n    ],\n    \"packages-dev\": [\n        {\n            \"name\": \"doctrine/data-fixtures\",\n            \"version\": \"1.4.4\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/doctrine/data-fixtures.git\",\n                \"reference\": \"16a03fadb5473f49aad70384002dfd5012fe680e\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/doctrine/data-fixtures/zipball/16a03fadb5473f49aad70384002dfd5012fe680e\",\n                \"reference\": \"16a03fadb5473f49aad70384002dfd5012fe680e\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"doctrine/common\": \"^2.13|^3.0\",\n                \"doctrine/persistence\": \"^1.3.3|^2.0\",\n                \"php\": \"^7.2 || ^8.0\"\n            },\n            \"conflict\": {\n                \"doctrine/phpcr-odm\": \"<1.3.0\"\n            },\n            \"require-dev\": {\n                \"doctrine/coding-standard\": \"^6.0\",\n                \"doctrine/dbal\": \"^2.5.4\",\n                \"doctrine/mongodb-odm\": \"^1.3.0 || ^2.0.0\",\n                \"doctrine/orm\": \"^2.7.0\",\n                \"phpunit/phpunit\": \"^7.0\"\n            },\n            \"suggest\": {\n                \"alcaeus/mongo-php-adapter\": \"For using MongoDB ODM 1.3 with PHP 7 (deprecated)\",\n                \"doctrine/mongodb-odm\": \"For loading MongoDB ODM fixtures\",\n                \"doctrine/orm\": \"For loading ORM fixtures\",\n                \"doctrine/phpcr-odm\": \"For loading PHPCR ODM fixtures\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"branch-alias\": {\n                    \"dev-master\": \"1.4.x-dev\"\n                }\n            },\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Doctrine\\\\Common\\\\DataFixtures\\\\\": \"lib/Doctrine/Common/DataFixtures\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Jonathan Wage\",\n                    \"email\": \"jonwage@gmail.com\"\n                }\n            ],\n            \"description\": \"Data Fixtures for all Doctrine Object Managers\",\n            \"homepage\": \"http://www.doctrine-project.org\",\n            \"keywords\": [\n                \"database\"\n            ],\n            \"funding\": [\n                {\n                    \"url\": \"https://www.doctrine-project.org/sponsorship.html\",\n                    \"type\": \"custom\"\n                },\n                {\n                    \"url\": \"https://www.patreon.com/phpdoctrine\",\n                    \"type\": \"patreon\"\n                },\n                {\n                    \"url\": \"https://tidelift.com/funding/github/packagist/doctrine%2Fdata-fixtures\",\n                    \"type\": \"tidelift\"\n                }\n            ],\n            \"time\": \"2020-09-01T07:13:28+00:00\"\n        },\n        {\n            \"name\": \"doctrine/doctrine-fixtures-bundle\",\n            \"version\": \"3.4.0\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/doctrine/DoctrineFixturesBundle.git\",\n                \"reference\": \"870189619a7770f468ffb0b80925302e065a3b34\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/doctrine/DoctrineFixturesBundle/zipball/870189619a7770f468ffb0b80925302e065a3b34\",\n                \"reference\": \"870189619a7770f468ffb0b80925302e065a3b34\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"doctrine/data-fixtures\": \"^1.3\",\n                \"doctrine/doctrine-bundle\": \"^1.11|^2.0\",\n                \"doctrine/orm\": \"^2.6.0\",\n                \"doctrine/persistence\": \"^1.3.7|^2.0\",\n                \"php\": \"^7.1 || ^8.0\",\n                \"symfony/config\": \"^3.4|^4.3|^5.0\",\n                \"symfony/console\": \"^3.4|^4.3|^5.0\",\n                \"symfony/dependency-injection\": \"^3.4|^4.3|^5.0\",\n                \"symfony/doctrine-bridge\": \"^3.4|^4.1|^5.0\",\n                \"symfony/http-kernel\": \"^3.4|^4.3|^5.0\"\n            },\n            \"require-dev\": {\n                \"doctrine/coding-standard\": \"^6.0\",\n                \"phpunit/phpunit\": \"^7.4 || ^8.0 || ^9.2\",\n                \"symfony/phpunit-bridge\": \"^4.1|^5.0\"\n            },\n            \"type\": \"symfony-bundle\",\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Doctrine\\\\Bundle\\\\FixturesBundle\\\\\": \"\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Fabien Potencier\",\n                    \"email\": \"fabien@symfony.com\"\n                },\n                {\n                    \"name\": \"Doctrine Project\",\n                    \"homepage\": \"http://www.doctrine-project.org\"\n                },\n                {\n                    \"name\": \"Symfony Community\",\n                    \"homepage\": \"http://symfony.com/contributors\"\n                }\n            ],\n            \"description\": \"Symfony DoctrineFixturesBundle\",\n            \"homepage\": \"http://www.doctrine-project.org\",\n            \"keywords\": [\n                \"Fixture\",\n                \"persistence\"\n            ],\n            \"support\": {\n                \"issues\": \"https://github.com/doctrine/DoctrineFixturesBundle/issues\",\n                \"source\": \"https://github.com/doctrine/DoctrineFixturesBundle/tree/3.4.0\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://www.doctrine-project.org/sponsorship.html\",\n                    \"type\": \"custom\"\n                },\n                {\n                    \"url\": \"https://www.patreon.com/phpdoctrine\",\n                    \"type\": \"patreon\"\n                },\n                {\n                    \"url\": \"https://tidelift.com/funding/github/packagist/doctrine%2Fdoctrine-fixtures-bundle\",\n                    \"type\": \"tidelift\"\n                }\n            ],\n            \"time\": \"2020-11-14T09:36:49+00:00\"\n        },\n        {\n            \"name\": \"nikic/php-parser\",\n            \"version\": \"v4.10.2\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/nikic/PHP-Parser.git\",\n                \"reference\": \"658f1be311a230e0907f5dfe0213742aff0596de\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/nikic/PHP-Parser/zipball/658f1be311a230e0907f5dfe0213742aff0596de\",\n                \"reference\": \"658f1be311a230e0907f5dfe0213742aff0596de\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"ext-tokenizer\": \"*\",\n                \"php\": \">=7.0\"\n            },\n            \"require-dev\": {\n                \"ircmaxell/php-yacc\": \"^0.0.7\",\n                \"phpunit/phpunit\": \"^6.5 || ^7.0 || ^8.0 || ^9.0\"\n            },\n            \"bin\": [\n                \"bin/php-parse\"\n            ],\n            \"type\": \"library\",\n            \"extra\": {\n                \"branch-alias\": {\n                    \"dev-master\": \"4.9-dev\"\n                }\n            },\n            \"autoload\": {\n                \"psr-4\": {\n                    \"PhpParser\\\\\": \"lib/PhpParser\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"BSD-3-Clause\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Nikita Popov\"\n                }\n            ],\n            \"description\": \"A PHP parser written in PHP\",\n            \"keywords\": [\n                \"parser\",\n                \"php\"\n            ],\n            \"time\": \"2020-09-26T10:30:38+00:00\"\n        },\n        {\n            \"name\": \"symfony/browser-kit\",\n            \"version\": \"v5.1.8\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/symfony/browser-kit.git\",\n                \"reference\": \"65b7d208280f2700f43ba44a8059a25d7b01347b\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/symfony/browser-kit/zipball/65b7d208280f2700f43ba44a8059a25d7b01347b\",\n                \"reference\": \"65b7d208280f2700f43ba44a8059a25d7b01347b\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=7.2.5\",\n                \"symfony/dom-crawler\": \"^4.4|^5.0\"\n            },\n            \"require-dev\": {\n                \"symfony/css-selector\": \"^4.4|^5.0\",\n                \"symfony/http-client\": \"^4.4|^5.0\",\n                \"symfony/mime\": \"^4.4|^5.0\",\n                \"symfony/process\": \"^4.4|^5.0\"\n            },\n            \"suggest\": {\n                \"symfony/process\": \"\"\n            },\n            \"type\": \"library\",\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Symfony\\\\Component\\\\BrowserKit\\\\\": \"\"\n                },\n                \"exclude-from-classmap\": [\n                    \"/Tests/\"\n                ]\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Fabien Potencier\",\n                    \"email\": \"fabien@symfony.com\"\n                },\n                {\n                    \"name\": \"Symfony Community\",\n                    \"homepage\": \"https://symfony.com/contributors\"\n                }\n            ],\n            \"description\": \"Symfony BrowserKit Component\",\n            \"homepage\": \"https://symfony.com\",\n            \"funding\": [\n                {\n                    \"url\": \"https://symfony.com/sponsor\",\n                    \"type\": \"custom\"\n                },\n                {\n                    \"url\": \"https://github.com/fabpot\",\n                    \"type\": \"github\"\n                },\n                {\n                    \"url\": \"https://tidelift.com/funding/github/packagist/symfony/symfony\",\n                    \"type\": \"tidelift\"\n                }\n            ],\n            \"time\": \"2020-10-24T12:01:57+00:00\"\n        },\n        {\n            \"name\": \"symfony/css-selector\",\n            \"version\": \"v5.1.8\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/symfony/css-selector.git\",\n                \"reference\": \"6cbebda22ffc0d4bb8fea0c1311c2ca54c4c8fa0\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/symfony/css-selector/zipball/6cbebda22ffc0d4bb8fea0c1311c2ca54c4c8fa0\",\n                \"reference\": \"6cbebda22ffc0d4bb8fea0c1311c2ca54c4c8fa0\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=7.2.5\"\n            },\n            \"type\": \"library\",\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Symfony\\\\Component\\\\CssSelector\\\\\": \"\"\n                },\n                \"exclude-from-classmap\": [\n                    \"/Tests/\"\n                ]\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Fabien Potencier\",\n                    \"email\": \"fabien@symfony.com\"\n                },\n                {\n                    \"name\": \"Jean-François Simon\",\n                    \"email\": \"jeanfrancois.simon@sensiolabs.com\"\n                },\n                {\n                    \"name\": \"Symfony Community\",\n                    \"homepage\": \"https://symfony.com/contributors\"\n                }\n            ],\n            \"description\": \"Symfony CssSelector Component\",\n            \"homepage\": \"https://symfony.com\",\n            \"funding\": [\n                {\n                    \"url\": \"https://symfony.com/sponsor\",\n                    \"type\": \"custom\"\n                },\n                {\n                    \"url\": \"https://github.com/fabpot\",\n                    \"type\": \"github\"\n                },\n                {\n                    \"url\": \"https://tidelift.com/funding/github/packagist/symfony/symfony\",\n                    \"type\": \"tidelift\"\n                }\n            ],\n            \"time\": \"2020-10-24T12:01:57+00:00\"\n        },\n        {\n            \"name\": \"symfony/debug-bundle\",\n            \"version\": \"v5.1.8\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/symfony/debug-bundle.git\",\n                \"reference\": \"183a36bdb251eeeeff640ffbceea3403ac5c8d40\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/symfony/debug-bundle/zipball/183a36bdb251eeeeff640ffbceea3403ac5c8d40\",\n                \"reference\": \"183a36bdb251eeeeff640ffbceea3403ac5c8d40\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"ext-xml\": \"*\",\n                \"php\": \">=7.2.5\",\n                \"symfony/http-kernel\": \"^4.4|^5.0\",\n                \"symfony/twig-bridge\": \"^4.4|^5.0\",\n                \"symfony/var-dumper\": \"^4.4|^5.0\"\n            },\n            \"conflict\": {\n                \"symfony/config\": \"<4.4\",\n                \"symfony/dependency-injection\": \"<4.4\"\n            },\n            \"require-dev\": {\n                \"symfony/config\": \"^4.4|^5.0\",\n                \"symfony/dependency-injection\": \"^4.4|^5.0\",\n                \"symfony/web-profiler-bundle\": \"^4.4|^5.0\"\n            },\n            \"suggest\": {\n                \"symfony/config\": \"For service container configuration\",\n                \"symfony/dependency-injection\": \"For using as a service from the container\"\n            },\n            \"type\": \"symfony-bundle\",\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Symfony\\\\Bundle\\\\DebugBundle\\\\\": \"\"\n                },\n                \"exclude-from-classmap\": [\n                    \"/Tests/\"\n                ]\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Fabien Potencier\",\n                    \"email\": \"fabien@symfony.com\"\n                },\n                {\n                    \"name\": \"Symfony Community\",\n                    \"homepage\": \"https://symfony.com/contributors\"\n                }\n            ],\n            \"description\": \"Symfony DebugBundle\",\n            \"homepage\": \"https://symfony.com\",\n            \"funding\": [\n                {\n                    \"url\": \"https://symfony.com/sponsor\",\n                    \"type\": \"custom\"\n                },\n                {\n                    \"url\": \"https://github.com/fabpot\",\n                    \"type\": \"github\"\n                },\n                {\n                    \"url\": \"https://tidelift.com/funding/github/packagist/symfony/symfony\",\n                    \"type\": \"tidelift\"\n                }\n            ],\n            \"time\": \"2020-10-24T12:01:57+00:00\"\n        },\n        {\n            \"name\": \"symfony/dom-crawler\",\n            \"version\": \"v5.1.8\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/symfony/dom-crawler.git\",\n                \"reference\": \"0969122fe144dd8ab2e8c98c7e03eedc621b368c\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/symfony/dom-crawler/zipball/0969122fe144dd8ab2e8c98c7e03eedc621b368c\",\n                \"reference\": \"0969122fe144dd8ab2e8c98c7e03eedc621b368c\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=7.2.5\",\n                \"symfony/polyfill-ctype\": \"~1.8\",\n                \"symfony/polyfill-mbstring\": \"~1.0\",\n                \"symfony/polyfill-php80\": \"^1.15\"\n            },\n            \"conflict\": {\n                \"masterminds/html5\": \"<2.6\"\n            },\n            \"require-dev\": {\n                \"masterminds/html5\": \"^2.6\",\n                \"symfony/css-selector\": \"^4.4|^5.0\"\n            },\n            \"suggest\": {\n                \"symfony/css-selector\": \"\"\n            },\n            \"type\": \"library\",\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Symfony\\\\Component\\\\DomCrawler\\\\\": \"\"\n                },\n                \"exclude-from-classmap\": [\n                    \"/Tests/\"\n                ]\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Fabien Potencier\",\n                    \"email\": \"fabien@symfony.com\"\n                },\n                {\n                    \"name\": \"Symfony Community\",\n                    \"homepage\": \"https://symfony.com/contributors\"\n                }\n            ],\n            \"description\": \"Symfony DomCrawler Component\",\n            \"homepage\": \"https://symfony.com\",\n            \"funding\": [\n                {\n                    \"url\": \"https://symfony.com/sponsor\",\n                    \"type\": \"custom\"\n                },\n                {\n                    \"url\": \"https://github.com/fabpot\",\n                    \"type\": \"github\"\n                },\n                {\n                    \"url\": \"https://tidelift.com/funding/github/packagist/symfony/symfony\",\n                    \"type\": \"tidelift\"\n                }\n            ],\n            \"time\": \"2020-10-24T12:01:57+00:00\"\n        },\n        {\n            \"name\": \"symfony/maker-bundle\",\n            \"version\": \"v1.23.0\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/symfony/maker-bundle.git\",\n                \"reference\": \"ffaee624a20a462ec2da82942d3c9d8fc8dd1421\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/symfony/maker-bundle/zipball/ffaee624a20a462ec2da82942d3c9d8fc8dd1421\",\n                \"reference\": \"ffaee624a20a462ec2da82942d3c9d8fc8dd1421\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"doctrine/inflector\": \"^1.2\",\n                \"nikic/php-parser\": \"^4.0\",\n                \"php\": \">=7.1.3\",\n                \"symfony/config\": \"^3.4|^4.0|^5.0\",\n                \"symfony/console\": \"^3.4|^4.0|^5.0\",\n                \"symfony/dependency-injection\": \"^3.4|^4.0|^5.0\",\n                \"symfony/filesystem\": \"^3.4|^4.0|^5.0\",\n                \"symfony/finder\": \"^3.4|^4.0|^5.0\",\n                \"symfony/framework-bundle\": \"^3.4|^4.0|^5.0\",\n                \"symfony/http-kernel\": \"^3.4|^4.0|^5.0\"\n            },\n            \"require-dev\": {\n                \"composer/semver\": \"^3.0@dev\",\n                \"doctrine/doctrine-bundle\": \"^1.8|^2.0\",\n                \"doctrine/orm\": \"^2.3\",\n                \"friendsofphp/php-cs-fixer\": \"^2.8\",\n                \"friendsoftwig/twigcs\": \"^3.1.2\",\n                \"symfony/http-client\": \"^4.3|^5.0\",\n                \"symfony/phpunit-bridge\": \"^4.3|^5.0\",\n                \"symfony/process\": \"^3.4|^4.0|^5.0\",\n                \"symfony/security-core\": \"^3.4|^4.0|^5.0\",\n                \"symfony/yaml\": \"^3.4|^4.0|^5.0\"\n            },\n            \"type\": \"symfony-bundle\",\n            \"extra\": {\n                \"branch-alias\": {\n                    \"dev-master\": \"1.0-dev\"\n                }\n            },\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Symfony\\\\Bundle\\\\MakerBundle\\\\\": \"src/\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Symfony Community\",\n                    \"homepage\": \"https://symfony.com/contributors\"\n                }\n            ],\n            \"description\": \"Symfony Maker helps you create empty commands, controllers, form classes, tests and more so you can forget about writing boilerplate code.\",\n            \"homepage\": \"https://symfony.com/doc/current/bundles/SymfonyMakerBundle/index.html\",\n            \"keywords\": [\n                \"code generator\",\n                \"generator\",\n                \"scaffold\",\n                \"scaffolding\"\n            ],\n            \"funding\": [\n                {\n                    \"url\": \"https://symfony.com/sponsor\",\n                    \"type\": \"custom\"\n                },\n                {\n                    \"url\": \"https://github.com/fabpot\",\n                    \"type\": \"github\"\n                },\n                {\n                    \"url\": \"https://tidelift.com/funding/github/packagist/symfony/symfony\",\n                    \"type\": \"tidelift\"\n                }\n            ],\n            \"time\": \"2020-10-28T15:35:16+00:00\"\n        },\n        {\n            \"name\": \"symfony/phpunit-bridge\",\n            \"version\": \"v5.1.8\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/symfony/phpunit-bridge.git\",\n                \"reference\": \"61744927348cd391ac12f7c6b70544991275845c\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/symfony/phpunit-bridge/zipball/61744927348cd391ac12f7c6b70544991275845c\",\n                \"reference\": \"61744927348cd391ac12f7c6b70544991275845c\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=5.5.9\"\n            },\n            \"conflict\": {\n                \"phpunit/phpunit\": \"<4.8.35|<5.4.3,>=5.0|<6.4,>=6.0|9.1.2\"\n            },\n            \"require-dev\": {\n                \"symfony/deprecation-contracts\": \"^2.1\"\n            },\n            \"suggest\": {\n                \"symfony/error-handler\": \"For tracking deprecated interfaces usages at runtime with DebugClassLoader\"\n            },\n            \"bin\": [\n                \"bin/simple-phpunit\"\n            ],\n            \"type\": \"symfony-bridge\",\n            \"extra\": {\n                \"thanks\": {\n                    \"name\": \"phpunit/phpunit\",\n                    \"url\": \"https://github.com/sebastianbergmann/phpunit\"\n                }\n            },\n            \"autoload\": {\n                \"files\": [\n                    \"bootstrap.php\"\n                ],\n                \"psr-4\": {\n                    \"Symfony\\\\Bridge\\\\PhpUnit\\\\\": \"\"\n                },\n                \"exclude-from-classmap\": [\n                    \"/Tests/\"\n                ]\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Nicolas Grekas\",\n                    \"email\": \"p@tchwork.com\"\n                },\n                {\n                    \"name\": \"Symfony Community\",\n                    \"homepage\": \"https://symfony.com/contributors\"\n                }\n            ],\n            \"description\": \"Symfony PHPUnit Bridge\",\n            \"homepage\": \"https://symfony.com\",\n            \"funding\": [\n                {\n                    \"url\": \"https://symfony.com/sponsor\",\n                    \"type\": \"custom\"\n                },\n                {\n                    \"url\": \"https://github.com/fabpot\",\n                    \"type\": \"github\"\n                },\n                {\n                    \"url\": \"https://tidelift.com/funding/github/packagist/symfony/symfony\",\n                    \"type\": \"tidelift\"\n                }\n            ],\n            \"time\": \"2020-10-24T15:53:55+00:00\"\n        },\n        {\n            \"name\": \"symfony/web-profiler-bundle\",\n            \"version\": \"v5.1.8\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/symfony/web-profiler-bundle.git\",\n                \"reference\": \"d94865ad9365ee4ac0d9bd24d9e90410e7ec6185\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/symfony/web-profiler-bundle/zipball/d94865ad9365ee4ac0d9bd24d9e90410e7ec6185\",\n                \"reference\": \"d94865ad9365ee4ac0d9bd24d9e90410e7ec6185\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=7.2.5\",\n                \"symfony/config\": \"^4.4|^5.0\",\n                \"symfony/framework-bundle\": \"^5.1\",\n                \"symfony/http-kernel\": \"^4.4|^5.0\",\n                \"symfony/routing\": \"^4.4|^5.0\",\n                \"symfony/twig-bundle\": \"^4.4|^5.0\",\n                \"twig/twig\": \"^2.10|^3.0\"\n            },\n            \"conflict\": {\n                \"symfony/form\": \"<4.4\",\n                \"symfony/messenger\": \"<4.4\"\n            },\n            \"require-dev\": {\n                \"symfony/browser-kit\": \"^4.4|^5.0\",\n                \"symfony/console\": \"^4.4|^5.0\",\n                \"symfony/css-selector\": \"^4.4|^5.0\",\n                \"symfony/stopwatch\": \"^4.4|^5.0\"\n            },\n            \"type\": \"symfony-bundle\",\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Symfony\\\\Bundle\\\\WebProfilerBundle\\\\\": \"\"\n                },\n                \"exclude-from-classmap\": [\n                    \"/Tests/\"\n                ]\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Fabien Potencier\",\n                    \"email\": \"fabien@symfony.com\"\n                },\n                {\n                    \"name\": \"Symfony Community\",\n                    \"homepage\": \"https://symfony.com/contributors\"\n                }\n            ],\n            \"description\": \"Symfony WebProfilerBundle\",\n            \"homepage\": \"https://symfony.com\",\n            \"funding\": [\n                {\n                    \"url\": \"https://symfony.com/sponsor\",\n                    \"type\": \"custom\"\n                },\n                {\n                    \"url\": \"https://github.com/fabpot\",\n                    \"type\": \"github\"\n                },\n                {\n                    \"url\": \"https://tidelift.com/funding/github/packagist/symfony/symfony\",\n                    \"type\": \"tidelift\"\n                }\n            ],\n            \"time\": \"2020-10-24T12:01:57+00:00\"\n        }\n    ],\n    \"aliases\": [],\n    \"minimum-stability\": \"stable\",\n    \"stability-flags\": [],\n    \"prefer-stable\": false,\n    \"prefer-lowest\": false,\n    \"platform\": {\n        \"php\": \">=7.2.5\",\n        \"ext-ctype\": \"*\",\n        \"ext-iconv\": \"*\",\n        \"ext-intl\": \"*\"\n    },\n    \"platform-dev\": [],\n    \"plugin-api-version\": \"1.1.0\"\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- composer.lock	(revision a449d8a584af7c2722ad0d48f553c0917ddead6e)
+++ composer.lock	(date 1606322383473)
@@ -399,16 +399,16 @@
         },
         {
             "name": "doctrine/dbal",
-            "version": "2.12.0",
+            "version": "2.12.1",
             "source": {
                 "type": "git",
                 "url": "https://github.com/doctrine/dbal.git",
-                "reference": "c6d37b4c42aaa3c3ee175f05eca68056f4185646"
+                "reference": "adce7a954a1c2f14f85e94aed90c8489af204086"
             },
             "dist": {
                 "type": "zip",
-                "url": "https://api.github.com/repos/doctrine/dbal/zipball/c6d37b4c42aaa3c3ee175f05eca68056f4185646",
-                "reference": "c6d37b4c42aaa3c3ee175f05eca68056f4185646",
+                "url": "https://api.github.com/repos/doctrine/dbal/zipball/adce7a954a1c2f14f85e94aed90c8489af204086",
+                "reference": "adce7a954a1c2f14f85e94aed90c8489af204086",
                 "shasum": ""
             },
             "require": {
@@ -502,7 +502,7 @@
                     "type": "tidelift"
                 }
             ],
-            "time": "2020-10-22T17:26:24+00:00"
+            "time": "2020-11-14T20:26:58+00:00"
         },
         {
             "name": "doctrine/doctrine-bundle",
@@ -878,36 +878,31 @@
         },
         {
             "name": "doctrine/instantiator",
-            "version": "1.3.1",
+            "version": "1.4.0",
             "source": {
                 "type": "git",
                 "url": "https://github.com/doctrine/instantiator.git",
-                "reference": "f350df0268e904597e3bd9c4685c53e0e333feea"
+                "reference": "d56bf6102915de5702778fe20f2de3b2fe570b5b"
             },
             "dist": {
                 "type": "zip",
-                "url": "https://api.github.com/repos/doctrine/instantiator/zipball/f350df0268e904597e3bd9c4685c53e0e333feea",
-                "reference": "f350df0268e904597e3bd9c4685c53e0e333feea",
+                "url": "https://api.github.com/repos/doctrine/instantiator/zipball/d56bf6102915de5702778fe20f2de3b2fe570b5b",
+                "reference": "d56bf6102915de5702778fe20f2de3b2fe570b5b",
                 "shasum": ""
             },
             "require": {
                 "php": "^7.1 || ^8.0"
             },
             "require-dev": {
-                "doctrine/coding-standard": "^6.0",
+                "doctrine/coding-standard": "^8.0",
                 "ext-pdo": "*",
                 "ext-phar": "*",
-                "phpbench/phpbench": "^0.13",
-                "phpstan/phpstan-phpunit": "^0.11",
-                "phpstan/phpstan-shim": "^0.11",
-                "phpunit/phpunit": "^7.0"
+                "phpbench/phpbench": "^0.13 || 1.0.0-alpha2",
+                "phpstan/phpstan": "^0.12",
+                "phpstan/phpstan-phpunit": "^0.12",
+                "phpunit/phpunit": "^7.0 || ^8.0 || ^9.0"
             },
             "type": "library",
-            "extra": {
-                "branch-alias": {
-                    "dev-master": "1.2.x-dev"
-                }
-            },
             "autoload": {
                 "psr-4": {
                     "Doctrine\\Instantiator\\": "src/Doctrine/Instantiator/"
@@ -921,7 +916,7 @@
                 {
                     "name": "Marco Pivetta",
                     "email": "ocramius@gmail.com",
-                    "homepage": "http://ocramius.github.com/"
+                    "homepage": "https://ocramius.github.io/"
                 }
             ],
             "description": "A small, lightweight utility to instantiate objects in PHP without invoking their constructors",
@@ -944,7 +939,7 @@
                     "type": "tidelift"
                 }
             ],
-            "time": "2020-05-29T17:27:14+00:00"
+            "time": "2020-11-10T18:47:58+00:00"
         },
         {
             "name": "doctrine/lexer",
@@ -1344,16 +1339,16 @@
         },
         {
             "name": "egulias/email-validator",
-            "version": "2.1.23",
+            "version": "2.1.24",
             "source": {
                 "type": "git",
                 "url": "https://github.com/egulias/EmailValidator.git",
-                "reference": "5fa792ad1853ae2bc60528dd3e5cbf4542d3c1df"
+                "reference": "ca90a3291eee1538cd48ff25163240695bd95448"
             },
             "dist": {
                 "type": "zip",
-                "url": "https://api.github.com/repos/egulias/EmailValidator/zipball/5fa792ad1853ae2bc60528dd3e5cbf4542d3c1df",
-                "reference": "5fa792ad1853ae2bc60528dd3e5cbf4542d3c1df",
+                "url": "https://api.github.com/repos/egulias/EmailValidator/zipball/ca90a3291eee1538cd48ff25163240695bd95448",
+                "reference": "ca90a3291eee1538cd48ff25163240695bd95448",
                 "shasum": ""
             },
             "require": {
@@ -1398,7 +1393,13 @@
                 "validation",
                 "validator"
             ],
-            "time": "2020-10-31T20:37:35+00:00"
+            "funding": [
+                {
+                    "url": "https://github.com/egulias",
+                    "type": "github"
+                }
+            ],
+            "time": "2020-11-14T15:56:27+00:00"
         },
         {
             "name": "firebase/php-jwt",
@@ -1826,21 +1827,21 @@
         },
         {
             "name": "knpuniversity/oauth2-client-bundle",
-            "version": "v2.5.1",
+            "version": "v2.6.0",
             "source": {
                 "type": "git",
                 "url": "https://github.com/knpuniversity/oauth2-client-bundle.git",
-                "reference": "5e5919bf321f76121df93c55fdbf82a0c481bd5f"
+                "reference": "a17cf5b059e8d67ef54a94ea277816a5d1810f90"
             },
             "dist": {
                 "type": "zip",
-                "url": "https://api.github.com/repos/knpuniversity/oauth2-client-bundle/zipball/5e5919bf321f76121df93c55fdbf82a0c481bd5f",
-                "reference": "5e5919bf321f76121df93c55fdbf82a0c481bd5f",
+                "url": "https://api.github.com/repos/knpuniversity/oauth2-client-bundle/zipball/a17cf5b059e8d67ef54a94ea277816a5d1810f90",
+                "reference": "a17cf5b059e8d67ef54a94ea277816a5d1810f90",
                 "shasum": ""
             },
             "require": {
                 "league/oauth2-client": "^1.0|^2.0",
-                "php": "^7.1.3",
+                "php": ">=7.1.3",
                 "symfony/dependency-injection": "^4.4|^5.0",
                 "symfony/framework-bundle": "^4.4|^5.0",
                 "symfony/http-foundation": "^4.4|^5.0",
@@ -1879,52 +1880,45 @@
                 "oauth",
                 "oauth2"
             ],
-            "time": "2020-11-21T16:21:33+00:00"
+            "time": "2020-11-25T14:03:26+00:00"
         },
         {
             "name": "laminas/laminas-code",
-            "version": "3.4.1",
+            "version": "3.5.0",
             "source": {
                 "type": "git",
                 "url": "https://github.com/laminas/laminas-code.git",
-                "reference": "1cb8f203389ab1482bf89c0e70a04849bacd7766"
+                "reference": "cb90ef428da9260c2deaa827b037c20695f968ae"
             },
             "dist": {
                 "type": "zip",
-                "url": "https://api.github.com/repos/laminas/laminas-code/zipball/1cb8f203389ab1482bf89c0e70a04849bacd7766",
-                "reference": "1cb8f203389ab1482bf89c0e70a04849bacd7766",
+                "url": "https://api.github.com/repos/laminas/laminas-code/zipball/cb90ef428da9260c2deaa827b037c20695f968ae",
+                "reference": "cb90ef428da9260c2deaa827b037c20695f968ae",
                 "shasum": ""
             },
             "require": {
-                "laminas/laminas-eventmanager": "^2.6 || ^3.0",
-                "laminas/laminas-zendframework-bridge": "^1.0",
-                "php": "^7.1"
+                "laminas/laminas-eventmanager": "^3.3",
+                "laminas/laminas-zendframework-bridge": "^1.1",
+                "php": "^7.3 || ~8.0.0"
             },
             "conflict": {
                 "phpspec/prophecy": "<1.9.0"
             },
             "replace": {
-                "zendframework/zend-code": "self.version"
+                "zendframework/zend-code": "^3.4.1"
             },
             "require-dev": {
-                "doctrine/annotations": "^1.7",
+                "doctrine/annotations": "^1.10.4",
                 "ext-phar": "*",
-                "laminas/laminas-coding-standard": "^1.0",
-                "laminas/laminas-stdlib": "^2.7 || ^3.0",
-                "phpunit/phpunit": "^7.5.16 || ^8.4"
+                "laminas/laminas-coding-standard": "^1.0.0",
+                "laminas/laminas-stdlib": "^3.3.0",
+                "phpunit/phpunit": "^9.4.2"
             },
             "suggest": {
                 "doctrine/annotations": "Doctrine\\Common\\Annotations >=1.0 for annotation features",
                 "laminas/laminas-stdlib": "Laminas\\Stdlib component"
             },
             "type": "library",
-            "extra": {
-                "branch-alias": {
-                    "dev-master": "3.4.x-dev",
-                    "dev-develop": "3.5.x-dev",
-                    "dev-dev-4.0": "4.0.x-dev"
-                }
-            },
             "autoload": {
                 "psr-4": {
                     "Laminas\\Code\\": "src/"
@@ -1940,7 +1934,13 @@
                 "code",
                 "laminas"
             ],
-            "time": "2019-12-31T16:28:24+00:00"
+            "funding": [
+                {
+                    "url": "https://funding.communitybridge.org/projects/laminas-project",
+                    "type": "community_bridge"
+                }
+            ],
+            "time": "2020-11-11T22:11:27+00:00"
         },
         {
             "name": "laminas/laminas-eventmanager",
Index: vendor/laminas/laminas-code/README.md
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+># laminas-code\n\n[![Build Status](https://travis-ci.org/laminas/laminas-code.svg?branch=master)](https://travis-ci.org/laminas/laminas-code)\n[![Coverage Status](https://coveralls.io/repos/github/laminas/laminas-code/badge.svg?branch=master)](https://coveralls.io/github/laminas/laminas-code?branch=master)\n\n`Laminas\\Code\\Generator` provides facilities to generate arbitrary code using an\nobject-oriented interface, both to create new code as well as to update existing\ncode. While the current implementation is limited to generating PHP code, you\ncan easily extend the base class in order to provide code generation for other\ntasks: JavaScript, configuration files, apache vhosts, etc.\n\n- File issues at https://github.com/laminas/laminas-code/issues\n- Documentation is at https://docs.laminas.dev/laminas-code/\n- Migration documentation from v2 to v3 is at https://docs.laminas.dev/laminas-code/migration/\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- vendor/laminas/laminas-code/README.md	(revision a449d8a584af7c2722ad0d48f553c0917ddead6e)
+++ vendor/laminas/laminas-code/README.md	(date 1605132687000)
@@ -1,6 +1,6 @@
 # laminas-code
 
-[![Build Status](https://travis-ci.org/laminas/laminas-code.svg?branch=master)](https://travis-ci.org/laminas/laminas-code)
+[![Build Status](https://travis-ci.com/laminas/laminas-code.svg?branch=master)](https://travis-ci.com/laminas/laminas-code)
 [![Coverage Status](https://coveralls.io/repos/github/laminas/laminas-code/badge.svg?branch=master)](https://coveralls.io/github/laminas/laminas-code?branch=master)
 
 `Laminas\Code\Generator` provides facilities to generate arbitrary code using an
Index: vendor/doctrine/instantiator/src/Doctrine/Instantiator/Instantiator.php
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?php\n\nnamespace Doctrine\\Instantiator;\n\nuse ArrayIterator;\nuse Doctrine\\Instantiator\\Exception\\InvalidArgumentException;\nuse Doctrine\\Instantiator\\Exception\\UnexpectedValueException;\nuse Exception;\nuse ReflectionClass;\nuse ReflectionException;\nuse Serializable;\nuse function class_exists;\nuse function is_subclass_of;\nuse function restore_error_handler;\nuse function set_error_handler;\nuse function sprintf;\nuse function strlen;\nuse function unserialize;\n\n/**\n * {@inheritDoc}\n */\nfinal class Instantiator implements InstantiatorInterface\n{\n    /**\n     * Markers used internally by PHP to define whether {@see \\unserialize} should invoke\n     * the method {@see \\Serializable::unserialize()} when dealing with classes implementing\n     * the {@see \\Serializable} interface.\n     */\n    public const SERIALIZATION_FORMAT_USE_UNSERIALIZER   = 'C';\n    public const SERIALIZATION_FORMAT_AVOID_UNSERIALIZER = 'O';\n\n    /**\n     * Used to instantiate specific classes, indexed by class name.\n     *\n     * @var callable[]\n     */\n    private static $cachedInstantiators = [];\n\n    /**\n     * Array of objects that can directly be cloned, indexed by class name.\n     *\n     * @var object[]\n     */\n    private static $cachedCloneables = [];\n\n    /**\n     * {@inheritDoc}\n     */\n    public function instantiate($className)\n    {\n        if (isset(self::$cachedCloneables[$className])) {\n            return clone self::$cachedCloneables[$className];\n        }\n\n        if (isset(self::$cachedInstantiators[$className])) {\n            $factory = self::$cachedInstantiators[$className];\n\n            return $factory();\n        }\n\n        return $this->buildAndCacheFromFactory($className);\n    }\n\n    /**\n     * Builds the requested object and caches it in static properties for performance\n     *\n     * @return object\n     */\n    private function buildAndCacheFromFactory(string $className)\n    {\n        $factory  = self::$cachedInstantiators[$className] = $this->buildFactory($className);\n        $instance = $factory();\n\n        if ($this->isSafeToClone(new ReflectionClass($instance))) {\n            self::$cachedCloneables[$className] = clone $instance;\n        }\n\n        return $instance;\n    }\n\n    /**\n     * Builds a callable capable of instantiating the given $className without\n     * invoking its constructor.\n     *\n     * @throws InvalidArgumentException\n     * @throws UnexpectedValueException\n     * @throws ReflectionException\n     */\n    private function buildFactory(string $className) : callable\n    {\n        $reflectionClass = $this->getReflectionClass($className);\n\n        if ($this->isInstantiableViaReflection($reflectionClass)) {\n            return [$reflectionClass, 'newInstanceWithoutConstructor'];\n        }\n\n        $serializedString = sprintf(\n            '%s:%d:\"%s\":0:{}',\n            is_subclass_of($className, Serializable::class) ? self::SERIALIZATION_FORMAT_USE_UNSERIALIZER : self::SERIALIZATION_FORMAT_AVOID_UNSERIALIZER,\n            strlen($className),\n            $className\n        );\n\n        $this->checkIfUnSerializationIsSupported($reflectionClass, $serializedString);\n\n        return static function () use ($serializedString) {\n            return unserialize($serializedString);\n        };\n    }\n\n    /**\n     * @throws InvalidArgumentException\n     * @throws ReflectionException\n     */\n    private function getReflectionClass(string $className) : ReflectionClass\n    {\n        if (! class_exists($className)) {\n            throw InvalidArgumentException::fromNonExistingClass($className);\n        }\n\n        $reflection = new ReflectionClass($className);\n\n        if ($reflection->isAbstract()) {\n            throw InvalidArgumentException::fromAbstractClass($reflection);\n        }\n\n        return $reflection;\n    }\n\n    /**\n     * @throws UnexpectedValueException\n     */\n    private function checkIfUnSerializationIsSupported(ReflectionClass $reflectionClass, string $serializedString) : void\n    {\n        set_error_handler(static function (int $code, string $message, string $file, int $line) use ($reflectionClass, &$error) : bool {\n            $error = UnexpectedValueException::fromUncleanUnSerialization(\n                $reflectionClass,\n                $message,\n                $code,\n                $file,\n                $line\n            );\n\n            return true;\n        });\n\n        try {\n            $this->attemptInstantiationViaUnSerialization($reflectionClass, $serializedString);\n        } finally {\n            restore_error_handler();\n        }\n\n        if ($error) {\n            throw $error;\n        }\n    }\n\n    /**\n     * @throws UnexpectedValueException\n     */\n    private function attemptInstantiationViaUnSerialization(ReflectionClass $reflectionClass, string $serializedString) : void\n    {\n        try {\n            unserialize($serializedString);\n        } catch (Exception $exception) {\n            throw UnexpectedValueException::fromSerializationTriggeredException($reflectionClass, $exception);\n        }\n    }\n\n    private function isInstantiableViaReflection(ReflectionClass $reflectionClass) : bool\n    {\n        return ! ($this->hasInternalAncestors($reflectionClass) && $reflectionClass->isFinal());\n    }\n\n    /**\n     * Verifies whether the given class is to be considered internal\n     */\n    private function hasInternalAncestors(ReflectionClass $reflectionClass) : bool\n    {\n        do {\n            if ($reflectionClass->isInternal()) {\n                return true;\n            }\n\n            $reflectionClass = $reflectionClass->getParentClass();\n        } while ($reflectionClass);\n\n        return false;\n    }\n\n    /**\n     * Checks if a class is cloneable\n     *\n     * Classes implementing `__clone` cannot be safely cloned, as that may cause side-effects.\n     */\n    private function isSafeToClone(ReflectionClass $reflection) : bool\n    {\n        return $reflection->isCloneable()\n            && ! $reflection->hasMethod('__clone')\n            && ! $reflection->isSubclassOf(ArrayIterator::class);\n    }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- vendor/doctrine/instantiator/src/Doctrine/Instantiator/Instantiator.php	(revision a449d8a584af7c2722ad0d48f553c0917ddead6e)
+++ vendor/doctrine/instantiator/src/Doctrine/Instantiator/Instantiator.php	(date 1605034078000)
@@ -9,6 +9,7 @@
 use ReflectionClass;
 use ReflectionException;
 use Serializable;
+
 use function class_exists;
 use function is_subclass_of;
 use function restore_error_handler;
@@ -17,9 +18,6 @@
 use function strlen;
 use function unserialize;
 
-/**
- * {@inheritDoc}
- */
 final class Instantiator implements InstantiatorInterface
 {
     /**
@@ -66,6 +64,11 @@
      * Builds the requested object and caches it in static properties for performance
      *
      * @return object
+     *
+     * @template T of object
+     * @phpstan-param class-string<T> $className
+     *
+     * @phpstan-return T
      */
     private function buildAndCacheFromFactory(string $className)
     {
@@ -86,8 +89,13 @@
      * @throws InvalidArgumentException
      * @throws UnexpectedValueException
      * @throws ReflectionException
+     *
+     * @template T of object
+     * @phpstan-param class-string<T> $className
+     *
+     * @phpstan-return callable(): T
      */
-    private function buildFactory(string $className) : callable
+    private function buildFactory(string $className): callable
     {
         $reflectionClass = $this->getReflectionClass($className);
 
@@ -112,8 +120,13 @@
     /**
      * @throws InvalidArgumentException
      * @throws ReflectionException
+     *
+     * @template T of object
+     * @phpstan-param class-string<T> $className
+     *
+     * @phpstan-return ReflectionClass<T>
      */
-    private function getReflectionClass(string $className) : ReflectionClass
+    private function getReflectionClass(string $className): ReflectionClass
     {
         if (! class_exists($className)) {
             throw InvalidArgumentException::fromNonExistingClass($className);
@@ -130,10 +143,13 @@
 
     /**
      * @throws UnexpectedValueException
+     *
+     * @template T of object
+     * @phpstan-param ReflectionClass<T> $reflectionClass
      */
-    private function checkIfUnSerializationIsSupported(ReflectionClass $reflectionClass, string $serializedString) : void
+    private function checkIfUnSerializationIsSupported(ReflectionClass $reflectionClass, string $serializedString): void
     {
-        set_error_handler(static function (int $code, string $message, string $file, int $line) use ($reflectionClass, &$error) : bool {
+        set_error_handler(static function (int $code, string $message, string $file, int $line) use ($reflectionClass, &$error): bool {
             $error = UnexpectedValueException::fromUncleanUnSerialization(
                 $reflectionClass,
                 $message,
@@ -158,8 +174,11 @@
 
     /**
      * @throws UnexpectedValueException
+     *
+     * @template T of object
+     * @phpstan-param ReflectionClass<T> $reflectionClass
      */
-    private function attemptInstantiationViaUnSerialization(ReflectionClass $reflectionClass, string $serializedString) : void
+    private function attemptInstantiationViaUnSerialization(ReflectionClass $reflectionClass, string $serializedString): void
     {
         try {
             unserialize($serializedString);
@@ -168,15 +187,22 @@
         }
     }
 
-    private function isInstantiableViaReflection(ReflectionClass $reflectionClass) : bool
+    /**
+     * @template T of object
+     * @phpstan-param ReflectionClass<T> $reflectionClass
+     */
+    private function isInstantiableViaReflection(ReflectionClass $reflectionClass): bool
     {
         return ! ($this->hasInternalAncestors($reflectionClass) && $reflectionClass->isFinal());
     }
 
     /**
      * Verifies whether the given class is to be considered internal
+     *
+     * @template T of object
+     * @phpstan-param ReflectionClass<T> $reflectionClass
      */
-    private function hasInternalAncestors(ReflectionClass $reflectionClass) : bool
+    private function hasInternalAncestors(ReflectionClass $reflectionClass): bool
     {
         do {
             if ($reflectionClass->isInternal()) {
@@ -193,11 +219,14 @@
      * Checks if a class is cloneable
      *
      * Classes implementing `__clone` cannot be safely cloned, as that may cause side-effects.
+     *
+     * @template T of object
+     * @phpstan-param ReflectionClass<T> $reflectionClass
      */
-    private function isSafeToClone(ReflectionClass $reflection) : bool
+    private function isSafeToClone(ReflectionClass $reflectionClass): bool
     {
-        return $reflection->isCloneable()
-            && ! $reflection->hasMethod('__clone')
-            && ! $reflection->isSubclassOf(ArrayIterator::class);
+        return $reflectionClass->isCloneable()
+            && ! $reflectionClass->hasMethod('__clone')
+            && ! $reflectionClass->isSubclassOf(ArrayIterator::class);
     }
 }
Index: vendor/composer/autoload_classmap.php
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- vendor/composer/autoload_classmap.php	(revision a449d8a584af7c2722ad0d48f553c0917ddead6e)
+++ vendor/composer/autoload_classmap.php	(date 1606322385041)
@@ -14785,6 +14785,7 @@
     'Laminas\\Code\\Generator\\DocBlock\\Tag\\TagInterface' => $vendorDir . '/laminas/laminas-code/src/Generator/DocBlock/Tag/TagInterface.php',
     'Laminas\\Code\\Generator\\DocBlock\\Tag\\ThrowsTag' => $vendorDir . '/laminas/laminas-code/src/Generator/DocBlock/Tag/ThrowsTag.php',
     'Laminas\\Code\\Generator\\DocBlock\\Tag\\VarTag' => $vendorDir . '/laminas/laminas-code/src/Generator/DocBlock/Tag/VarTag.php',
+    'Laminas\\Code\\Generator\\Exception\\ClassNotFoundException' => $vendorDir . '/laminas/laminas-code/src/Generator/Exception/ClassNotFoundException.php',
     'Laminas\\Code\\Generator\\Exception\\ExceptionInterface' => $vendorDir . '/laminas/laminas-code/src/Generator/Exception/ExceptionInterface.php',
     'Laminas\\Code\\Generator\\Exception\\InvalidArgumentException' => $vendorDir . '/laminas/laminas-code/src/Generator/Exception/InvalidArgumentException.php',
     'Laminas\\Code\\Generator\\Exception\\RuntimeException' => $vendorDir . '/laminas/laminas-code/src/Generator/Exception/RuntimeException.php',
Index: vendor/doctrine/instantiator/src/Doctrine/Instantiator/InstantiatorInterface.php
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?php\n\nnamespace Doctrine\\Instantiator;\n\nuse Doctrine\\Instantiator\\Exception\\ExceptionInterface;\n\n/**\n * Instantiator provides utility methods to build objects without invoking their constructors\n */\ninterface InstantiatorInterface\n{\n    /**\n     * @param string $className\n     *\n     * @return object\n     *\n     * @throws ExceptionInterface\n     */\n    public function instantiate($className);\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- vendor/doctrine/instantiator/src/Doctrine/Instantiator/InstantiatorInterface.php	(revision a449d8a584af7c2722ad0d48f553c0917ddead6e)
+++ vendor/doctrine/instantiator/src/Doctrine/Instantiator/InstantiatorInterface.php	(date 1605034078000)
@@ -15,6 +15,9 @@
      * @return object
      *
      * @throws ExceptionInterface
+     *
+     * @template T of object
+     * @phpstan-param class-string<T> $className
      */
     public function instantiate($className);
 }
Index: vendor/doctrine/dbal/lib/Doctrine/DBAL/SQLParserUtils.php
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?php\n\nnamespace Doctrine\\DBAL;\n\nuse Doctrine\\DBAL\\Types\\Type;\n\nuse function array_fill;\nuse function array_fill_keys;\nuse function array_key_exists;\nuse function array_keys;\nuse function array_merge;\nuse function array_slice;\nuse function array_values;\nuse function count;\nuse function implode;\nuse function is_int;\nuse function key;\nuse function ksort;\nuse function preg_match_all;\nuse function sprintf;\nuse function strlen;\nuse function strpos;\nuse function substr;\n\nuse const PREG_OFFSET_CAPTURE;\n\n/**\n * Utility class that parses sql statements with regard to types and parameters.\n */\nclass SQLParserUtils\n{\n    /**#@+\n     *\n     * @deprecated Will be removed as internal implementation details.\n     */\n    public const POSITIONAL_TOKEN = '\\?';\n    public const NAMED_TOKEN      = '(?<!:):[a-zA-Z_][a-zA-Z0-9_]*';\n    // Quote characters within string literals can be preceded by a backslash.\n    public const ESCAPED_SINGLE_QUOTED_TEXT   = \"(?:'(?:\\\\\\\\)+'|'(?:[^'\\\\\\\\]|\\\\\\\\'?|'')*')\";\n    public const ESCAPED_DOUBLE_QUOTED_TEXT   = '(?:\"(?:\\\\\\\\)+\"|\"(?:[^\"\\\\\\\\]|\\\\\\\\\"?)*\")';\n    public const ESCAPED_BACKTICK_QUOTED_TEXT = '(?:`(?:\\\\\\\\)+`|`(?:[^`\\\\\\\\]|\\\\\\\\`?)*`)';\n    /**#@-*/\n\n    private const ESCAPED_BRACKET_QUOTED_TEXT = '(?<!\\b(?i:ARRAY))\\[(?:[^\\]])*\\]';\n\n    /**\n     * Gets an array of the placeholders in an sql statements as keys and their positions in the query string.\n     *\n     * For a statement with positional parameters, returns a zero-indexed list of placeholder position.\n     * For a statement with named parameters, returns a map of placeholder positions to their parameter names.\n     *\n     * @deprecated Will be removed as internal implementation detail.\n     *\n     * @param string $statement\n     * @param bool   $isPositional\n     *\n     * @return int[]|string[]\n     */\n    public static function getPlaceholderPositions($statement, $isPositional = true)\n    {\n        return $isPositional\n            ? self::getPositionalPlaceholderPositions($statement)\n            : self::getNamedPlaceholderPositions($statement);\n    }\n\n    /**\n     * Returns a zero-indexed list of placeholder position.\n     *\n     * @return list<int>\n     */\n    private static function getPositionalPlaceholderPositions(string $statement): array\n    {\n        return self::collectPlaceholders(\n            $statement,\n            '?',\n            self::POSITIONAL_TOKEN,\n            static function (string $_, int $placeholderPosition, int $fragmentPosition, array &$carry): void {\n                $carry[] = $placeholderPosition + $fragmentPosition;\n            }\n        );\n    }\n\n    /**\n     * Returns a map of placeholder positions to their parameter names.\n     *\n     * @return array<int,string>\n     */\n    private static function getNamedPlaceholderPositions(string $statement): array\n    {\n        return self::collectPlaceholders(\n            $statement,\n            ':',\n            self::NAMED_TOKEN,\n            static function (\n                string $placeholder,\n                int $placeholderPosition,\n                int $fragmentPosition,\n                array &$carry\n            ): void {\n                $carry[$placeholderPosition + $fragmentPosition] = substr($placeholder, 1);\n            }\n        );\n    }\n\n    /**\n     * @return mixed[]\n     */\n    private static function collectPlaceholders(\n        string $statement,\n        string $match,\n        string $token,\n        callable $collector\n    ): array {\n        if (strpos($statement, $match) === false) {\n            return [];\n        }\n\n        $carry = [];\n\n        foreach (self::getUnquotedStatementFragments($statement) as $fragment) {\n            preg_match_all('/' . $token . '/', $fragment[0], $matches, PREG_OFFSET_CAPTURE);\n            foreach ($matches[0] as $placeholder) {\n                $collector($placeholder[0], $placeholder[1], $fragment[1], $carry);\n            }\n        }\n\n        return $carry;\n    }\n\n    /**\n     * For a positional query this method can rewrite the sql statement with regard to array parameters.\n     *\n     * @param string                                                               $query  SQL query\n     * @param mixed[]                                                              $params Query parameters\n     * @param array<int, Type|int|string|null>|array<string, Type|int|string|null> $types  Parameter types\n     *\n     * @return mixed[]\n     *\n     * @throws SQLParserUtilsException\n     */\n    public static function expandListParameters($query, $params, $types)\n    {\n        $isPositional   = is_int(key($params));\n        $arrayPositions = [];\n        $bindIndex      = -1;\n\n        if ($isPositional) {\n            // make sure that $types has the same keys as $params\n            // to allow omitting parameters with unspecified types\n            $types += array_fill_keys(array_keys($params), null);\n\n            ksort($params);\n            ksort($types);\n        }\n\n        foreach ($types as $name => $type) {\n            ++$bindIndex;\n\n            if ($type !== Connection::PARAM_INT_ARRAY && $type !== Connection::PARAM_STR_ARRAY) {\n                continue;\n            }\n\n            if ($isPositional) {\n                $name = $bindIndex;\n            }\n\n            $arrayPositions[$name] = false;\n        }\n\n        if (( ! $arrayPositions && $isPositional)) {\n            return [$query, $params, $types];\n        }\n\n        if ($isPositional) {\n            $paramOffset = 0;\n            $queryOffset = 0;\n            $params      = array_values($params);\n            $types       = array_values($types);\n\n            $paramPos = self::getPositionalPlaceholderPositions($query);\n\n            foreach ($paramPos as $needle => $needlePos) {\n                if (! isset($arrayPositions[$needle])) {\n                    continue;\n                }\n\n                $needle    += $paramOffset;\n                $needlePos += $queryOffset;\n                $count      = count($params[$needle]);\n\n                $params = array_merge(\n                    array_slice($params, 0, $needle),\n                    $params[$needle],\n                    array_slice($params, $needle + 1)\n                );\n\n                $types = array_merge(\n                    array_slice($types, 0, $needle),\n                    $count ?\n                        // array needles are at {@link \\Doctrine\\DBAL\\ParameterType} constants\n                        // + {@link \\Doctrine\\DBAL\\Connection::ARRAY_PARAM_OFFSET}\n                        array_fill(0, $count, $types[$needle] - Connection::ARRAY_PARAM_OFFSET) :\n                        [],\n                    array_slice($types, $needle + 1)\n                );\n\n                $expandStr = $count ? implode(', ', array_fill(0, $count, '?')) : 'NULL';\n                $query     = substr($query, 0, $needlePos) . $expandStr . substr($query, $needlePos + 1);\n\n                $paramOffset += $count - 1; // Grows larger by number of parameters minus the replaced needle.\n                $queryOffset += strlen($expandStr) - 1;\n            }\n\n            return [$query, $params, $types];\n        }\n\n        $queryOffset = 0;\n        $typesOrd    = [];\n        $paramsOrd   = [];\n\n        $paramPos = self::getNamedPlaceholderPositions($query);\n\n        foreach ($paramPos as $pos => $paramName) {\n            $paramLen = strlen($paramName) + 1;\n            $value    = static::extractParam($paramName, $params, true);\n\n            if (! isset($arrayPositions[$paramName]) && ! isset($arrayPositions[':' . $paramName])) {\n                $pos         += $queryOffset;\n                $queryOffset -= $paramLen - 1;\n                $paramsOrd[]  = $value;\n                $typesOrd[]   = static::extractParam($paramName, $types, false, ParameterType::STRING);\n                $query        = substr($query, 0, $pos) . '?' . substr($query, $pos + $paramLen);\n\n                continue;\n            }\n\n            $count     = count($value);\n            $expandStr = $count > 0 ? implode(', ', array_fill(0, $count, '?')) : 'NULL';\n\n            foreach ($value as $val) {\n                $paramsOrd[] = $val;\n                $typesOrd[]  = static::extractParam($paramName, $types, false) - Connection::ARRAY_PARAM_OFFSET;\n            }\n\n            $pos         += $queryOffset;\n            $queryOffset += strlen($expandStr) - $paramLen;\n            $query        = substr($query, 0, $pos) . $expandStr . substr($query, $pos + $paramLen);\n        }\n\n        return [$query, $paramsOrd, $typesOrd];\n    }\n\n    /**\n     * Slice the SQL statement around pairs of quotes and\n     * return string fragments of SQL outside of quoted literals.\n     * Each fragment is captured as a 2-element array:\n     *\n     * 0 => matched fragment string,\n     * 1 => offset of fragment in $statement\n     *\n     * @param string $statement\n     *\n     * @return mixed[][]\n     */\n    private static function getUnquotedStatementFragments($statement)\n    {\n        $literal    = self::ESCAPED_SINGLE_QUOTED_TEXT . '|' .\n            self::ESCAPED_DOUBLE_QUOTED_TEXT . '|' .\n            self::ESCAPED_BACKTICK_QUOTED_TEXT . '|' .\n            self::ESCAPED_BRACKET_QUOTED_TEXT;\n        $expression = sprintf('/((.+(?i:ARRAY)\\\\[.+\\\\])|([^\\'\"`\\\\[]+))(?:%s)?/s', $literal);\n\n        preg_match_all($expression, $statement, $fragments, PREG_OFFSET_CAPTURE);\n\n        return $fragments[1];\n    }\n\n    /**\n     * @param string $paramName     The name of the parameter (without a colon in front)\n     * @param mixed  $paramsOrTypes A hash of parameters or types\n     * @param bool   $isParam\n     * @param mixed  $defaultValue  An optional default value. If omitted, an exception is thrown\n     *\n     * @return mixed\n     *\n     * @throws SQLParserUtilsException\n     */\n    private static function extractParam($paramName, $paramsOrTypes, $isParam, $defaultValue = null)\n    {\n        if (array_key_exists($paramName, $paramsOrTypes)) {\n            return $paramsOrTypes[$paramName];\n        }\n\n        // Hash keys can be prefixed with a colon for compatibility\n        if (array_key_exists(':' . $paramName, $paramsOrTypes)) {\n            return $paramsOrTypes[':' . $paramName];\n        }\n\n        if ($defaultValue !== null) {\n            return $defaultValue;\n        }\n\n        if ($isParam) {\n            throw SQLParserUtilsException::missingParam($paramName);\n        }\n\n        throw SQLParserUtilsException::missingType($paramName);\n    }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- vendor/doctrine/dbal/lib/Doctrine/DBAL/SQLParserUtils.php	(revision a449d8a584af7c2722ad0d48f553c0917ddead6e)
+++ vendor/doctrine/dbal/lib/Doctrine/DBAL/SQLParserUtils.php	(date 1605385618000)
@@ -26,6 +26,8 @@
 
 /**
  * Utility class that parses sql statements with regard to types and parameters.
+ *
+ * @internal
  */
 class SQLParserUtils
 {
Index: vendor/laminas/laminas-code/LICENSE.md
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>Copyright (c) 2019, Laminas Foundation\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are met:\n\n- Redistributions of source code must retain the above copyright notice, this\n  list of conditions and the following disclaimer.\n\n- Redistributions in binary form must reproduce the above copyright notice,\n  this list of conditions and the following disclaimer in the documentation\n  and/or other materials provided with the distribution.\n\n- Neither the name of Laminas Foundation nor the names of its contributors may\n  be used to endorse or promote products derived from this software without\n  specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\nANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\nWARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR\nANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\nLOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON\nANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\nSOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- vendor/laminas/laminas-code/LICENSE.md	(revision a449d8a584af7c2722ad0d48f553c0917ddead6e)
+++ vendor/laminas/laminas-code/LICENSE.md	(date 1605132687000)
@@ -1,5 +1,4 @@
-Copyright (c) 2019, Laminas Foundation
-All rights reserved.
+Copyright (c) 2020 Laminas Project a Series of LF Projects, LLC.
 
 Redistribution and use in source and binary forms, with or without
 modification, are permitted provided that the following conditions are met:
Index: vendor/knpuniversity/oauth2-client-bundle/.travis.yml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>language: php\n\nsudo: false\n\ncache:\n    directories:\n        - $HOME/.composer/cache/files\n\nphp:\n    - 7.1\n    - 7.2\n    - 7.3\nmatrix:\n    include:\n        - php: 7.3\n          env: LINT=1\n        - php: 7.1\n          env: COMPOSER_FLAGS='--prefer-lowest --prefer-stable'\n\nbefore_install:\n    - phpenv config-rm xdebug.ini || true\n    - composer self-update\n\ninstall: composer update --prefer-dist $COMPOSER_FLAGS\n\n# Fail CI if repo is in dirty state after bin/update_readme\nbefore_script: ./bin/update_readme && git diff --exit-code README.md\n\nscript:\n    - ./vendor/bin/simple-phpunit\n    - if [ \"$LINT\" = 1 ]; then ./vendor/bin/phpstan analyse; fi;\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- vendor/knpuniversity/oauth2-client-bundle/.travis.yml	(revision a449d8a584af7c2722ad0d48f553c0917ddead6e)
+++ vendor/knpuniversity/oauth2-client-bundle/.travis.yml	(date 1606313006000)
@@ -9,7 +9,8 @@
 php:
     - 7.1
     - 7.2
-    - 7.3
+    - 7.4
+    - 8.0snapshot
 matrix:
     include:
         - php: 7.3
@@ -20,6 +21,7 @@
 before_install:
     - phpenv config-rm xdebug.ini || true
     - composer self-update
+    - if [ "$LINT" != 1 ]; then composer remove --dev --no-update phpstan/phpstan; fi;
 
 install: composer update --prefer-dist $COMPOSER_FLAGS
 
Index: vendor/composer/autoload_static.php
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- vendor/composer/autoload_static.php	(revision a449d8a584af7c2722ad0d48f553c0917ddead6e)
+++ vendor/composer/autoload_static.php	(date 1606322385141)
@@ -15437,6 +15437,7 @@
         'Laminas\\Code\\Generator\\DocBlock\\Tag\\TagInterface' => __DIR__ . '/..' . '/laminas/laminas-code/src/Generator/DocBlock/Tag/TagInterface.php',
         'Laminas\\Code\\Generator\\DocBlock\\Tag\\ThrowsTag' => __DIR__ . '/..' . '/laminas/laminas-code/src/Generator/DocBlock/Tag/ThrowsTag.php',
         'Laminas\\Code\\Generator\\DocBlock\\Tag\\VarTag' => __DIR__ . '/..' . '/laminas/laminas-code/src/Generator/DocBlock/Tag/VarTag.php',
+        'Laminas\\Code\\Generator\\Exception\\ClassNotFoundException' => __DIR__ . '/..' . '/laminas/laminas-code/src/Generator/Exception/ClassNotFoundException.php',
         'Laminas\\Code\\Generator\\Exception\\ExceptionInterface' => __DIR__ . '/..' . '/laminas/laminas-code/src/Generator/Exception/ExceptionInterface.php',
         'Laminas\\Code\\Generator\\Exception\\InvalidArgumentException' => __DIR__ . '/..' . '/laminas/laminas-code/src/Generator/Exception/InvalidArgumentException.php',
         'Laminas\\Code\\Generator\\Exception\\RuntimeException' => __DIR__ . '/..' . '/laminas/laminas-code/src/Generator/Exception/RuntimeException.php',
Index: vendor/doctrine/instantiator/src/Doctrine/Instantiator/Exception/InvalidArgumentException.php
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?php\n\nnamespace Doctrine\\Instantiator\\Exception;\n\nuse InvalidArgumentException as BaseInvalidArgumentException;\nuse ReflectionClass;\nuse const PHP_VERSION_ID;\nuse function interface_exists;\nuse function sprintf;\nuse function trait_exists;\n\n/**\n * Exception for invalid arguments provided to the instantiator\n */\nclass InvalidArgumentException extends BaseInvalidArgumentException implements ExceptionInterface\n{\n    public static function fromNonExistingClass(string $className) : self\n    {\n        if (interface_exists($className)) {\n            return new self(sprintf('The provided type \"%s\" is an interface, and can not be instantiated', $className));\n        }\n\n        if (PHP_VERSION_ID >= 50400 && trait_exists($className)) {\n            return new self(sprintf('The provided type \"%s\" is a trait, and can not be instantiated', $className));\n        }\n\n        return new self(sprintf('The provided class \"%s\" does not exist', $className));\n    }\n\n    public static function fromAbstractClass(ReflectionClass $reflectionClass) : self\n    {\n        return new self(sprintf(\n            'The provided class \"%s\" is abstract, and can not be instantiated',\n            $reflectionClass->getName()\n        ));\n    }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- vendor/doctrine/instantiator/src/Doctrine/Instantiator/Exception/InvalidArgumentException.php	(revision a449d8a584af7c2722ad0d48f553c0917ddead6e)
+++ vendor/doctrine/instantiator/src/Doctrine/Instantiator/Exception/InvalidArgumentException.php	(date 1605034078000)
@@ -4,7 +4,7 @@
 
 use InvalidArgumentException as BaseInvalidArgumentException;
 use ReflectionClass;
-use const PHP_VERSION_ID;
+
 use function interface_exists;
 use function sprintf;
 use function trait_exists;
@@ -14,20 +14,24 @@
  */
 class InvalidArgumentException extends BaseInvalidArgumentException implements ExceptionInterface
 {
-    public static function fromNonExistingClass(string $className) : self
+    public static function fromNonExistingClass(string $className): self
     {
         if (interface_exists($className)) {
             return new self(sprintf('The provided type "%s" is an interface, and can not be instantiated', $className));
         }
 
-        if (PHP_VERSION_ID >= 50400 && trait_exists($className)) {
+        if (trait_exists($className)) {
             return new self(sprintf('The provided type "%s" is a trait, and can not be instantiated', $className));
         }
 
         return new self(sprintf('The provided class "%s" does not exist', $className));
     }
 
-    public static function fromAbstractClass(ReflectionClass $reflectionClass) : self
+    /**
+     * @template T of object
+     * @phpstan-param ReflectionClass<T> $reflectionClass
+     */
+    public static function fromAbstractClass(ReflectionClass $reflectionClass): self
     {
         return new self(sprintf(
             'The provided class "%s" is abstract, and can not be instantiated',
Index: vendor/knpuniversity/oauth2-client-bundle/composer.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>{\n    \"name\": \"knpuniversity/oauth2-client-bundle\",\n    \"type\": \"symfony-bundle\",\n    \"description\": \"Integration with league/oauth2-client to provide services\",\n    \"keywords\": [\"oauth\", \"oauth2\"],\n    \"homepage\": \"https://symfonycasts.com\",\n    \"license\": \"MIT\",\n    \"authors\": [\n        {\n            \"name\": \"Ryan Weaver\",\n            \"email\": \"ryan@symfonycasts.com\"\n        }\n    ],\n    \"require\": {\n        \"php\": \"^7.1.3\",\n        \"symfony/framework-bundle\": \"^4.4|^5.0\",\n        \"symfony/dependency-injection\": \"^4.4|^5.0\",\n        \"symfony/routing\": \"^4.4|^5.0\",\n        \"symfony/http-foundation\": \"^4.4|^5.0\",\n        \"league/oauth2-client\": \"^1.0|^2.0\"\n    },\n    \"autoload\": {\n        \"psr-4\": { \"KnpU\\\\OAuth2ClientBundle\\\\\": \"src/\" }\n    },\n    \"autoload-dev\": {\n        \"psr-4\": { \"KnpU\\\\OAuth2ClientBundle\\\\Tests\\\\\": \"tests/\" }\n    },\n    \"require-dev\": {\n        \"league/oauth2-facebook\": \"^1.1|^2.0\",\n        \"symfony/phpunit-bridge\": \"^4.4|^5.0\",\n        \"symfony/security-guard\": \"^4.4|^5.0\",\n        \"symfony/yaml\": \"^4.4|^5.0\",\n        \"phpspec/prophecy\": \"^1.8\",\n        \"phpstan/phpstan\": \"^0.11.16\"\n    },\n    \"suggest\": {\n        \"symfony/security-guard\": \"For integration with Symfony's Guard Security layer\"\n    },\n    \"scripts\": {\n        \"test\": \"simple-phpunit && phpstan analyze\"\n    }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- vendor/knpuniversity/oauth2-client-bundle/composer.json	(revision a449d8a584af7c2722ad0d48f553c0917ddead6e)
+++ vendor/knpuniversity/oauth2-client-bundle/composer.json	(date 1606313006000)
@@ -12,7 +12,7 @@
         }
     ],
     "require": {
-        "php": "^7.1.3",
+        "php": ">=7.1.3",
         "symfony/framework-bundle": "^4.4|^5.0",
         "symfony/dependency-injection": "^4.4|^5.0",
         "symfony/routing": "^4.4|^5.0",
Index: vendor/composer/installed.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>[\n    {\n        \"name\": \"composer/package-versions-deprecated\",\n        \"version\": \"1.11.99.1\",\n        \"version_normalized\": \"1.11.99.1\",\n        \"source\": {\n            \"type\": \"git\",\n            \"url\": \"https://github.com/composer/package-versions-deprecated.git\",\n            \"reference\": \"7413f0b55a051e89485c5cb9f765fe24bb02a7b6\"\n        },\n        \"dist\": {\n            \"type\": \"zip\",\n            \"url\": \"https://api.github.com/repos/composer/package-versions-deprecated/zipball/7413f0b55a051e89485c5cb9f765fe24bb02a7b6\",\n            \"reference\": \"7413f0b55a051e89485c5cb9f765fe24bb02a7b6\",\n            \"shasum\": \"\"\n        },\n        \"require\": {\n            \"composer-plugin-api\": \"^1.1.0 || ^2.0\",\n            \"php\": \"^7 || ^8\"\n        },\n        \"replace\": {\n            \"ocramius/package-versions\": \"1.11.99\"\n        },\n        \"require-dev\": {\n            \"composer/composer\": \"^1.9.3 || ^2.0@dev\",\n            \"ext-zip\": \"^1.13\",\n            \"phpunit/phpunit\": \"^6.5 || ^7\"\n        },\n        \"time\": \"2020-11-11T10:22:58+00:00\",\n        \"type\": \"composer-plugin\",\n        \"extra\": {\n            \"class\": \"PackageVersions\\\\Installer\",\n            \"branch-alias\": {\n                \"dev-master\": \"1.x-dev\"\n            }\n        },\n        \"installation-source\": \"dist\",\n        \"autoload\": {\n            \"psr-4\": {\n                \"PackageVersions\\\\\": \"src/PackageVersions\"\n            }\n        },\n        \"notification-url\": \"https://packagist.org/downloads/\",\n        \"license\": [\n            \"MIT\"\n        ],\n        \"authors\": [\n            {\n                \"name\": \"Marco Pivetta\",\n                \"email\": \"ocramius@gmail.com\"\n            },\n            {\n                \"name\": \"Jordi Boggiano\",\n                \"email\": \"j.boggiano@seld.be\"\n            }\n        ],\n        \"description\": \"Composer plugin that provides efficient querying for installed package versions (no runtime IO)\",\n        \"funding\": [\n            {\n                \"url\": \"https://packagist.com\",\n                \"type\": \"custom\"\n            },\n            {\n                \"url\": \"https://github.com/composer\",\n                \"type\": \"github\"\n            },\n            {\n                \"url\": \"https://tidelift.com/funding/github/packagist/composer/composer\",\n                \"type\": \"tidelift\"\n            }\n        ]\n    },\n    {\n        \"name\": \"doctrine/annotations\",\n        \"version\": \"1.11.1\",\n        \"version_normalized\": \"1.11.1.0\",\n        \"source\": {\n            \"type\": \"git\",\n            \"url\": \"https://github.com/doctrine/annotations.git\",\n            \"reference\": \"ce77a7ba1770462cd705a91a151b6c3746f9c6ad\"\n        },\n        \"dist\": {\n            \"type\": \"zip\",\n            \"url\": \"https://api.github.com/repos/doctrine/annotations/zipball/ce77a7ba1770462cd705a91a151b6c3746f9c6ad\",\n            \"reference\": \"ce77a7ba1770462cd705a91a151b6c3746f9c6ad\",\n            \"shasum\": \"\"\n        },\n        \"require\": {\n            \"doctrine/lexer\": \"1.*\",\n            \"ext-tokenizer\": \"*\",\n            \"php\": \"^7.1 || ^8.0\"\n        },\n        \"require-dev\": {\n            \"doctrine/cache\": \"1.*\",\n            \"doctrine/coding-standard\": \"^6.0 || ^8.1\",\n            \"phpstan/phpstan\": \"^0.12.20\",\n            \"phpunit/phpunit\": \"^7.5 || ^9.1.5\"\n        },\n        \"time\": \"2020-10-26T10:28:16+00:00\",\n        \"type\": \"library\",\n        \"extra\": {\n            \"branch-alias\": {\n                \"dev-master\": \"1.11.x-dev\"\n            }\n        },\n        \"installation-source\": \"dist\",\n        \"autoload\": {\n            \"psr-4\": {\n                \"Doctrine\\\\Common\\\\Annotations\\\\\": \"lib/Doctrine/Common/Annotations\"\n            }\n        },\n        \"notification-url\": \"https://packagist.org/downloads/\",\n        \"license\": [\n            \"MIT\"\n        ],\n        \"authors\": [\n            {\n                \"name\": \"Guilherme Blanco\",\n                \"email\": \"guilhermeblanco@gmail.com\"\n            },\n            {\n                \"name\": \"Roman Borschel\",\n                \"email\": \"roman@code-factory.org\"\n            },\n            {\n                \"name\": \"Benjamin Eberlei\",\n                \"email\": \"kontakt@beberlei.de\"\n            },\n            {\n                \"name\": \"Jonathan Wage\",\n                \"email\": \"jonwage@gmail.com\"\n            },\n            {\n                \"name\": \"Johannes Schmitt\",\n                \"email\": \"schmittjoh@gmail.com\"\n            }\n        ],\n        \"description\": \"Docblock Annotations Parser\",\n        \"homepage\": \"https://www.doctrine-project.org/projects/annotations.html\",\n        \"keywords\": [\n            \"annotations\",\n            \"docblock\",\n            \"parser\"\n        ]\n    },\n    {\n        \"name\": \"doctrine/cache\",\n        \"version\": \"1.10.2\",\n        \"version_normalized\": \"1.10.2.0\",\n        \"source\": {\n            \"type\": \"git\",\n            \"url\": \"https://github.com/doctrine/cache.git\",\n            \"reference\": \"13e3381b25847283a91948d04640543941309727\"\n        },\n        \"dist\": {\n            \"type\": \"zip\",\n            \"url\": \"https://api.github.com/repos/doctrine/cache/zipball/13e3381b25847283a91948d04640543941309727\",\n            \"reference\": \"13e3381b25847283a91948d04640543941309727\",\n            \"shasum\": \"\"\n        },\n        \"require\": {\n            \"php\": \"~7.1 || ^8.0\"\n        },\n        \"conflict\": {\n            \"doctrine/common\": \">2.2,<2.4\"\n        },\n        \"require-dev\": {\n            \"alcaeus/mongo-php-adapter\": \"^1.1\",\n            \"doctrine/coding-standard\": \"^6.0\",\n            \"mongodb/mongodb\": \"^1.1\",\n            \"phpunit/phpunit\": \"^7.0\",\n            \"predis/predis\": \"~1.0\"\n        },\n        \"suggest\": {\n            \"alcaeus/mongo-php-adapter\": \"Required to use legacy MongoDB driver\"\n        },\n        \"time\": \"2020-07-07T18:54:01+00:00\",\n        \"type\": \"library\",\n        \"extra\": {\n            \"branch-alias\": {\n                \"dev-master\": \"1.9.x-dev\"\n            }\n        },\n        \"installation-source\": \"dist\",\n        \"autoload\": {\n            \"psr-4\": {\n                \"Doctrine\\\\Common\\\\Cache\\\\\": \"lib/Doctrine/Common/Cache\"\n            }\n        },\n        \"notification-url\": \"https://packagist.org/downloads/\",\n        \"license\": [\n            \"MIT\"\n        ],\n        \"authors\": [\n            {\n                \"name\": \"Guilherme Blanco\",\n                \"email\": \"guilhermeblanco@gmail.com\"\n            },\n            {\n                \"name\": \"Roman Borschel\",\n                \"email\": \"roman@code-factory.org\"\n            },\n            {\n                \"name\": \"Benjamin Eberlei\",\n                \"email\": \"kontakt@beberlei.de\"\n            },\n            {\n                \"name\": \"Jonathan Wage\",\n                \"email\": \"jonwage@gmail.com\"\n            },\n            {\n                \"name\": \"Johannes Schmitt\",\n                \"email\": \"schmittjoh@gmail.com\"\n            }\n        ],\n        \"description\": \"PHP Doctrine Cache library is a popular cache implementation that supports many different drivers such as redis, memcache, apc, mongodb and others.\",\n        \"homepage\": \"https://www.doctrine-project.org/projects/cache.html\",\n        \"keywords\": [\n            \"abstraction\",\n            \"apcu\",\n            \"cache\",\n            \"caching\",\n            \"couchdb\",\n            \"memcached\",\n            \"php\",\n            \"redis\",\n            \"xcache\"\n        ],\n        \"funding\": [\n            {\n                \"url\": \"https://www.doctrine-project.org/sponsorship.html\",\n                \"type\": \"custom\"\n            },\n            {\n                \"url\": \"https://www.patreon.com/phpdoctrine\",\n                \"type\": \"patreon\"\n            },\n            {\n                \"url\": \"https://tidelift.com/funding/github/packagist/doctrine%2Fcache\",\n                \"type\": \"tidelift\"\n            }\n        ]\n    },\n    {\n        \"name\": \"doctrine/collections\",\n        \"version\": \"1.6.7\",\n        \"version_normalized\": \"1.6.7.0\",\n        \"source\": {\n            \"type\": \"git\",\n            \"url\": \"https://github.com/doctrine/collections.git\",\n            \"reference\": \"55f8b799269a1a472457bd1a41b4f379d4cfba4a\"\n        },\n        \"dist\": {\n            \"type\": \"zip\",\n            \"url\": \"https://api.github.com/repos/doctrine/collections/zipball/55f8b799269a1a472457bd1a41b4f379d4cfba4a\",\n            \"reference\": \"55f8b799269a1a472457bd1a41b4f379d4cfba4a\",\n            \"shasum\": \"\"\n        },\n        \"require\": {\n            \"php\": \"^7.1.3 || ^8.0\"\n        },\n        \"require-dev\": {\n            \"doctrine/coding-standard\": \"^6.0\",\n            \"phpstan/phpstan-shim\": \"^0.9.2\",\n            \"phpunit/phpunit\": \"^7.0\",\n            \"vimeo/psalm\": \"^3.8.1\"\n        },\n        \"time\": \"2020-07-27T17:53:49+00:00\",\n        \"type\": \"library\",\n        \"installation-source\": \"dist\",\n        \"autoload\": {\n            \"psr-4\": {\n                \"Doctrine\\\\Common\\\\Collections\\\\\": \"lib/Doctrine/Common/Collections\"\n            }\n        },\n        \"notification-url\": \"https://packagist.org/downloads/\",\n        \"license\": [\n            \"MIT\"\n        ],\n        \"authors\": [\n            {\n                \"name\": \"Guilherme Blanco\",\n                \"email\": \"guilhermeblanco@gmail.com\"\n            },\n            {\n                \"name\": \"Roman Borschel\",\n                \"email\": \"roman@code-factory.org\"\n            },\n            {\n                \"name\": \"Benjamin Eberlei\",\n                \"email\": \"kontakt@beberlei.de\"\n            },\n            {\n                \"name\": \"Jonathan Wage\",\n                \"email\": \"jonwage@gmail.com\"\n            },\n            {\n                \"name\": \"Johannes Schmitt\",\n                \"email\": \"schmittjoh@gmail.com\"\n            }\n        ],\n        \"description\": \"PHP Doctrine Collections library that adds additional functionality on top of PHP arrays.\",\n        \"homepage\": \"https://www.doctrine-project.org/projects/collections.html\",\n        \"keywords\": [\n            \"array\",\n            \"collections\",\n            \"iterators\",\n            \"php\"\n        ]\n    },\n    {\n        \"name\": \"doctrine/common\",\n        \"version\": \"3.0.2\",\n        \"version_normalized\": \"3.0.2.0\",\n        \"source\": {\n            \"type\": \"git\",\n            \"url\": \"https://github.com/doctrine/common.git\",\n            \"reference\": \"a3c6479858989e242a2465972b4f7a8642baf0d4\"\n        },\n        \"dist\": {\n            \"type\": \"zip\",\n            \"url\": \"https://api.github.com/repos/doctrine/common/zipball/a3c6479858989e242a2465972b4f7a8642baf0d4\",\n            \"reference\": \"a3c6479858989e242a2465972b4f7a8642baf0d4\",\n            \"shasum\": \"\"\n        },\n        \"require\": {\n            \"doctrine/persistence\": \"^2.0\",\n            \"php\": \"^7.1 || ^8.0\"\n        },\n        \"require-dev\": {\n            \"doctrine/coding-standard\": \"^1.0\",\n            \"phpstan/phpstan\": \"^0.11\",\n            \"phpstan/phpstan-phpunit\": \"^0.11\",\n            \"phpunit/phpunit\": \"^7.0\",\n            \"squizlabs/php_codesniffer\": \"^3.0\",\n            \"symfony/phpunit-bridge\": \"^4.0.5\"\n        },\n        \"time\": \"2020-06-05T16:59:53+00:00\",\n        \"type\": \"library\",\n        \"extra\": {\n            \"branch-alias\": {\n                \"dev-master\": \"3.0.x-dev\"\n            }\n        },\n        \"installation-source\": \"dist\",\n        \"autoload\": {\n            \"psr-4\": {\n                \"Doctrine\\\\Common\\\\\": \"lib/Doctrine/Common\"\n            }\n        },\n        \"notification-url\": \"https://packagist.org/downloads/\",\n        \"license\": [\n            \"MIT\"\n        ],\n        \"authors\": [\n            {\n                \"name\": \"Guilherme Blanco\",\n                \"email\": \"guilhermeblanco@gmail.com\"\n            },\n            {\n                \"name\": \"Roman Borschel\",\n                \"email\": \"roman@code-factory.org\"\n            },\n            {\n                \"name\": \"Benjamin Eberlei\",\n                \"email\": \"kontakt@beberlei.de\"\n            },\n            {\n                \"name\": \"Jonathan Wage\",\n                \"email\": \"jonwage@gmail.com\"\n            },\n            {\n                \"name\": \"Johannes Schmitt\",\n                \"email\": \"schmittjoh@gmail.com\"\n            },\n            {\n                \"name\": \"Marco Pivetta\",\n                \"email\": \"ocramius@gmail.com\"\n            }\n        ],\n        \"description\": \"PHP Doctrine Common project is a library that provides additional functionality that other Doctrine projects depend on such as better reflection support, persistence interfaces, proxies, event system and much more.\",\n        \"homepage\": \"https://www.doctrine-project.org/projects/common.html\",\n        \"keywords\": [\n            \"common\",\n            \"doctrine\",\n            \"php\"\n        ],\n        \"funding\": [\n            {\n                \"url\": \"https://www.doctrine-project.org/sponsorship.html\",\n                \"type\": \"custom\"\n            },\n            {\n                \"url\": \"https://www.patreon.com/phpdoctrine\",\n                \"type\": \"patreon\"\n            },\n            {\n                \"url\": \"https://tidelift.com/funding/github/packagist/doctrine%2Fcommon\",\n                \"type\": \"tidelift\"\n            }\n        ]\n    },\n    {\n        \"name\": \"doctrine/data-fixtures\",\n        \"version\": \"1.4.4\",\n        \"version_normalized\": \"1.4.4.0\",\n        \"source\": {\n            \"type\": \"git\",\n            \"url\": \"https://github.com/doctrine/data-fixtures.git\",\n            \"reference\": \"16a03fadb5473f49aad70384002dfd5012fe680e\"\n        },\n        \"dist\": {\n            \"type\": \"zip\",\n            \"url\": \"https://api.github.com/repos/doctrine/data-fixtures/zipball/16a03fadb5473f49aad70384002dfd5012fe680e\",\n            \"reference\": \"16a03fadb5473f49aad70384002dfd5012fe680e\",\n            \"shasum\": \"\"\n        },\n        \"require\": {\n            \"doctrine/common\": \"^2.13|^3.0\",\n            \"doctrine/persistence\": \"^1.3.3|^2.0\",\n            \"php\": \"^7.2 || ^8.0\"\n        },\n        \"conflict\": {\n            \"doctrine/phpcr-odm\": \"<1.3.0\"\n        },\n        \"require-dev\": {\n            \"doctrine/coding-standard\": \"^6.0\",\n            \"doctrine/dbal\": \"^2.5.4\",\n            \"doctrine/mongodb-odm\": \"^1.3.0 || ^2.0.0\",\n            \"doctrine/orm\": \"^2.7.0\",\n            \"phpunit/phpunit\": \"^7.0\"\n        },\n        \"suggest\": {\n            \"alcaeus/mongo-php-adapter\": \"For using MongoDB ODM 1.3 with PHP 7 (deprecated)\",\n            \"doctrine/mongodb-odm\": \"For loading MongoDB ODM fixtures\",\n            \"doctrine/orm\": \"For loading ORM fixtures\",\n            \"doctrine/phpcr-odm\": \"For loading PHPCR ODM fixtures\"\n        },\n        \"time\": \"2020-09-01T07:13:28+00:00\",\n        \"type\": \"library\",\n        \"extra\": {\n            \"branch-alias\": {\n                \"dev-master\": \"1.4.x-dev\"\n            }\n        },\n        \"installation-source\": \"dist\",\n        \"autoload\": {\n            \"psr-4\": {\n                \"Doctrine\\\\Common\\\\DataFixtures\\\\\": \"lib/Doctrine/Common/DataFixtures\"\n            }\n        },\n        \"notification-url\": \"https://packagist.org/downloads/\",\n        \"license\": [\n            \"MIT\"\n        ],\n        \"authors\": [\n            {\n                \"name\": \"Jonathan Wage\",\n                \"email\": \"jonwage@gmail.com\"\n            }\n        ],\n        \"description\": \"Data Fixtures for all Doctrine Object Managers\",\n        \"homepage\": \"http://www.doctrine-project.org\",\n        \"keywords\": [\n            \"database\"\n        ],\n        \"funding\": [\n            {\n                \"url\": \"https://www.doctrine-project.org/sponsorship.html\",\n                \"type\": \"custom\"\n            },\n            {\n                \"url\": \"https://www.patreon.com/phpdoctrine\",\n                \"type\": \"patreon\"\n            },\n            {\n                \"url\": \"https://tidelift.com/funding/github/packagist/doctrine%2Fdata-fixtures\",\n                \"type\": \"tidelift\"\n            }\n        ]\n    },\n    {\n        \"name\": \"doctrine/dbal\",\n        \"version\": \"2.12.0\",\n        \"version_normalized\": \"2.12.0.0\",\n        \"source\": {\n            \"type\": \"git\",\n            \"url\": \"https://github.com/doctrine/dbal.git\",\n            \"reference\": \"c6d37b4c42aaa3c3ee175f05eca68056f4185646\"\n        },\n        \"dist\": {\n            \"type\": \"zip\",\n            \"url\": \"https://api.github.com/repos/doctrine/dbal/zipball/c6d37b4c42aaa3c3ee175f05eca68056f4185646\",\n            \"reference\": \"c6d37b4c42aaa3c3ee175f05eca68056f4185646\",\n            \"shasum\": \"\"\n        },\n        \"require\": {\n            \"doctrine/cache\": \"^1.0\",\n            \"doctrine/event-manager\": \"^1.0\",\n            \"ext-pdo\": \"*\",\n            \"php\": \"^7.3 || ^8\"\n        },\n        \"require-dev\": {\n            \"doctrine/coding-standard\": \"^8.1\",\n            \"jetbrains/phpstorm-stubs\": \"^2019.1\",\n            \"phpstan/phpstan\": \"^0.12.40\",\n            \"phpunit/phpunit\": \"^9.4\",\n            \"psalm/plugin-phpunit\": \"^0.10.0\",\n            \"symfony/console\": \"^2.0.5|^3.0|^4.0|^5.0\",\n            \"vimeo/psalm\": \"^3.17.2\"\n        },\n        \"suggest\": {\n            \"symfony/console\": \"For helpful console commands such as SQL execution and import of files.\"\n        },\n        \"time\": \"2020-10-22T17:26:24+00:00\",\n        \"bin\": [\n            \"bin/doctrine-dbal\"\n        ],\n        \"type\": \"library\",\n        \"extra\": {\n            \"branch-alias\": {\n                \"dev-master\": \"4.0.x-dev\"\n            }\n        },\n        \"installation-source\": \"dist\",\n        \"autoload\": {\n            \"psr-4\": {\n                \"Doctrine\\\\DBAL\\\\\": \"lib/Doctrine/DBAL\"\n            }\n        },\n        \"notification-url\": \"https://packagist.org/downloads/\",\n        \"license\": [\n            \"MIT\"\n        ],\n        \"authors\": [\n            {\n                \"name\": \"Guilherme Blanco\",\n                \"email\": \"guilhermeblanco@gmail.com\"\n            },\n            {\n                \"name\": \"Roman Borschel\",\n                \"email\": \"roman@code-factory.org\"\n            },\n            {\n                \"name\": \"Benjamin Eberlei\",\n                \"email\": \"kontakt@beberlei.de\"\n            },\n            {\n                \"name\": \"Jonathan Wage\",\n                \"email\": \"jonwage@gmail.com\"\n            }\n        ],\n        \"description\": \"Powerful PHP database abstraction layer (DBAL) with many features for database schema introspection and management.\",\n        \"homepage\": \"https://www.doctrine-project.org/projects/dbal.html\",\n        \"keywords\": [\n            \"abstraction\",\n            \"database\",\n            \"db2\",\n            \"dbal\",\n            \"mariadb\",\n            \"mssql\",\n            \"mysql\",\n            \"oci8\",\n            \"oracle\",\n            \"pdo\",\n            \"pgsql\",\n            \"postgresql\",\n            \"queryobject\",\n            \"sasql\",\n            \"sql\",\n            \"sqlanywhere\",\n            \"sqlite\",\n            \"sqlserver\",\n            \"sqlsrv\"\n        ],\n        \"funding\": [\n            {\n                \"url\": \"https://www.doctrine-project.org/sponsorship.html\",\n                \"type\": \"custom\"\n            },\n            {\n                \"url\": \"https://www.patreon.com/phpdoctrine\",\n                \"type\": \"patreon\"\n            },\n            {\n                \"url\": \"https://tidelift.com/funding/github/packagist/doctrine%2Fdbal\",\n                \"type\": \"tidelift\"\n            }\n        ]\n    },\n    {\n        \"name\": \"doctrine/doctrine-bundle\",\n        \"version\": \"2.2.1\",\n        \"version_normalized\": \"2.2.1.0\",\n        \"source\": {\n            \"type\": \"git\",\n            \"url\": \"https://github.com/doctrine/DoctrineBundle.git\",\n            \"reference\": \"9e07bb1ff35d35d9ec4597b79e5d05502d7d4d43\"\n        },\n        \"dist\": {\n            \"type\": \"zip\",\n            \"url\": \"https://api.github.com/repos/doctrine/DoctrineBundle/zipball/9e07bb1ff35d35d9ec4597b79e5d05502d7d4d43\",\n            \"reference\": \"9e07bb1ff35d35d9ec4597b79e5d05502d7d4d43\",\n            \"shasum\": \"\"\n        },\n        \"require\": {\n            \"doctrine/dbal\": \"^2.9.0|^3.0\",\n            \"doctrine/persistence\": \"^1.3.3|^2.0\",\n            \"doctrine/sql-formatter\": \"^1.0.1\",\n            \"php\": \"^7.1 || ^8.0\",\n            \"symfony/cache\": \"^4.3.3|^5.0\",\n            \"symfony/config\": \"^4.3.3|^5.0\",\n            \"symfony/console\": \"^3.4.30|^4.3.3|^5.0\",\n            \"symfony/dependency-injection\": \"^4.3.3|^5.0\",\n            \"symfony/doctrine-bridge\": \"^4.3.7|^5.0\",\n            \"symfony/framework-bundle\": \"^3.4.30|^4.3.3|^5.0\",\n            \"symfony/service-contracts\": \"^1.1.1|^2.0\"\n        },\n        \"conflict\": {\n            \"doctrine/orm\": \"<2.6\",\n            \"twig/twig\": \"<1.34|>=2.0,<2.4\"\n        },\n        \"require-dev\": {\n            \"doctrine/coding-standard\": \"^8.0\",\n            \"doctrine/orm\": \"^2.6\",\n            \"ocramius/proxy-manager\": \"^2.1\",\n            \"phpunit/phpunit\": \"^7.5 || ^9.3\",\n            \"symfony/phpunit-bridge\": \"^4.2\",\n            \"symfony/property-info\": \"^4.3.3|^5.0\",\n            \"symfony/proxy-manager-bridge\": \"^3.4|^4.3.3|^5.0\",\n            \"symfony/twig-bridge\": \"^3.4.30|^4.3.3|^5.0\",\n            \"symfony/validator\": \"^3.4.30|^4.3.3|^5.0\",\n            \"symfony/web-profiler-bundle\": \"^3.4.30|^4.3.3|^5.0\",\n            \"symfony/yaml\": \"^3.4.30|^4.3.3|^5.0\",\n            \"twig/twig\": \"^1.34|^2.12|^3.0\"\n        },\n        \"suggest\": {\n            \"doctrine/orm\": \"The Doctrine ORM integration is optional in the bundle.\",\n            \"symfony/web-profiler-bundle\": \"To use the data collector.\"\n        },\n        \"time\": \"2020-11-10T20:42:15+00:00\",\n        \"type\": \"symfony-bundle\",\n        \"extra\": {\n            \"branch-alias\": {\n                \"dev-master\": \"2.3.x-dev\"\n            }\n        },\n        \"installation-source\": \"dist\",\n        \"autoload\": {\n            \"psr-4\": {\n                \"Doctrine\\\\Bundle\\\\DoctrineBundle\\\\\": \"\"\n            }\n        },\n        \"notification-url\": \"https://packagist.org/downloads/\",\n        \"license\": [\n            \"MIT\"\n        ],\n        \"authors\": [\n            {\n                \"name\": \"Fabien Potencier\",\n                \"email\": \"fabien@symfony.com\"\n            },\n            {\n                \"name\": \"Benjamin Eberlei\",\n                \"email\": \"kontakt@beberlei.de\"\n            },\n            {\n                \"name\": \"Symfony Community\",\n                \"homepage\": \"http://symfony.com/contributors\"\n            },\n            {\n                \"name\": \"Doctrine Project\",\n                \"homepage\": \"http://www.doctrine-project.org/\"\n            }\n        ],\n        \"description\": \"Symfony DoctrineBundle\",\n        \"homepage\": \"http://www.doctrine-project.org\",\n        \"keywords\": [\n            \"database\",\n            \"dbal\",\n            \"orm\",\n            \"persistence\"\n        ],\n        \"funding\": [\n            {\n                \"url\": \"https://www.doctrine-project.org/sponsorship.html\",\n                \"type\": \"custom\"\n            },\n            {\n                \"url\": \"https://www.patreon.com/phpdoctrine\",\n                \"type\": \"patreon\"\n            },\n            {\n                \"url\": \"https://tidelift.com/funding/github/packagist/doctrine%2Fdoctrine-bundle\",\n                \"type\": \"tidelift\"\n            }\n        ]\n    },\n    {\n        \"name\": \"doctrine/doctrine-fixtures-bundle\",\n        \"version\": \"3.4.0\",\n        \"version_normalized\": \"3.4.0.0\",\n        \"source\": {\n            \"type\": \"git\",\n            \"url\": \"https://github.com/doctrine/DoctrineFixturesBundle.git\",\n            \"reference\": \"870189619a7770f468ffb0b80925302e065a3b34\"\n        },\n        \"dist\": {\n            \"type\": \"zip\",\n            \"url\": \"https://api.github.com/repos/doctrine/DoctrineFixturesBundle/zipball/870189619a7770f468ffb0b80925302e065a3b34\",\n            \"reference\": \"870189619a7770f468ffb0b80925302e065a3b34\",\n            \"shasum\": \"\"\n        },\n        \"require\": {\n            \"doctrine/data-fixtures\": \"^1.3\",\n            \"doctrine/doctrine-bundle\": \"^1.11|^2.0\",\n            \"doctrine/orm\": \"^2.6.0\",\n            \"doctrine/persistence\": \"^1.3.7|^2.0\",\n            \"php\": \"^7.1 || ^8.0\",\n            \"symfony/config\": \"^3.4|^4.3|^5.0\",\n            \"symfony/console\": \"^3.4|^4.3|^5.0\",\n            \"symfony/dependency-injection\": \"^3.4|^4.3|^5.0\",\n            \"symfony/doctrine-bridge\": \"^3.4|^4.1|^5.0\",\n            \"symfony/http-kernel\": \"^3.4|^4.3|^5.0\"\n        },\n        \"require-dev\": {\n            \"doctrine/coding-standard\": \"^6.0\",\n            \"phpunit/phpunit\": \"^7.4 || ^8.0 || ^9.2\",\n            \"symfony/phpunit-bridge\": \"^4.1|^5.0\"\n        },\n        \"time\": \"2020-11-14T09:36:49+00:00\",\n        \"type\": \"symfony-bundle\",\n        \"installation-source\": \"dist\",\n        \"autoload\": {\n            \"psr-4\": {\n                \"Doctrine\\\\Bundle\\\\FixturesBundle\\\\\": \"\"\n            }\n        },\n        \"notification-url\": \"https://packagist.org/downloads/\",\n        \"license\": [\n            \"MIT\"\n        ],\n        \"authors\": [\n            {\n                \"name\": \"Fabien Potencier\",\n                \"email\": \"fabien@symfony.com\"\n            },\n            {\n                \"name\": \"Doctrine Project\",\n                \"homepage\": \"http://www.doctrine-project.org\"\n            },\n            {\n                \"name\": \"Symfony Community\",\n                \"homepage\": \"http://symfony.com/contributors\"\n            }\n        ],\n        \"description\": \"Symfony DoctrineFixturesBundle\",\n        \"homepage\": \"http://www.doctrine-project.org\",\n        \"keywords\": [\n            \"Fixture\",\n            \"persistence\"\n        ],\n        \"support\": {\n            \"issues\": \"https://github.com/doctrine/DoctrineFixturesBundle/issues\",\n            \"source\": \"https://github.com/doctrine/DoctrineFixturesBundle/tree/3.4.0\"\n        },\n        \"funding\": [\n            {\n                \"url\": \"https://www.doctrine-project.org/sponsorship.html\",\n                \"type\": \"custom\"\n            },\n            {\n                \"url\": \"https://www.patreon.com/phpdoctrine\",\n                \"type\": \"patreon\"\n            },\n            {\n                \"url\": \"https://tidelift.com/funding/github/packagist/doctrine%2Fdoctrine-fixtures-bundle\",\n                \"type\": \"tidelift\"\n            }\n        ]\n    },\n    {\n        \"name\": \"doctrine/doctrine-migrations-bundle\",\n        \"version\": \"3.0.1\",\n        \"version_normalized\": \"3.0.1.0\",\n        \"source\": {\n            \"type\": \"git\",\n            \"url\": \"https://github.com/doctrine/DoctrineMigrationsBundle.git\",\n            \"reference\": \"96e730b0ffa0bb39c0f913c1966213f1674bf249\"\n        },\n        \"dist\": {\n            \"type\": \"zip\",\n            \"url\": \"https://api.github.com/repos/doctrine/DoctrineMigrationsBundle/zipball/96e730b0ffa0bb39c0f913c1966213f1674bf249\",\n            \"reference\": \"96e730b0ffa0bb39c0f913c1966213f1674bf249\",\n            \"shasum\": \"\"\n        },\n        \"require\": {\n            \"doctrine/doctrine-bundle\": \"~1.0|~2.0\",\n            \"doctrine/migrations\": \"~3.0\",\n            \"php\": \"^7.2\",\n            \"symfony/framework-bundle\": \"~3.4|~4.0|~5.0\"\n        },\n        \"require-dev\": {\n            \"doctrine/coding-standard\": \"^5.0\",\n            \"doctrine/orm\": \"^2.6\",\n            \"phpstan/phpstan\": \"^0.11\",\n            \"phpstan/phpstan-deprecation-rules\": \"^0.11\",\n            \"phpstan/phpstan-phpunit\": \"^0.11\",\n            \"phpstan/phpstan-strict-rules\": \"^0.11\",\n            \"phpunit/phpunit\": \"^6.4|^7.0\"\n        },\n        \"time\": \"2020-06-15T06:04:38+00:00\",\n        \"type\": \"symfony-bundle\",\n        \"extra\": {\n            \"branch-alias\": {\n                \"dev-master\": \"3.0.x-dev\"\n            }\n        },\n        \"installation-source\": \"dist\",\n        \"autoload\": {\n            \"psr-4\": {\n                \"Doctrine\\\\Bundle\\\\MigrationsBundle\\\\\": \"\"\n            },\n            \"exclude-from-classmap\": [\n                \"/Tests/\"\n            ]\n        },\n        \"notification-url\": \"https://packagist.org/downloads/\",\n        \"license\": [\n            \"MIT\"\n        ],\n        \"authors\": [\n            {\n                \"name\": \"Fabien Potencier\",\n                \"email\": \"fabien@symfony.com\"\n            },\n            {\n                \"name\": \"Doctrine Project\",\n                \"homepage\": \"http://www.doctrine-project.org\"\n            },\n            {\n                \"name\": \"Symfony Community\",\n                \"homepage\": \"http://symfony.com/contributors\"\n            }\n        ],\n        \"description\": \"Symfony DoctrineMigrationsBundle\",\n        \"homepage\": \"https://www.doctrine-project.org\",\n        \"keywords\": [\n            \"dbal\",\n            \"migrations\",\n            \"schema\"\n        ],\n        \"funding\": [\n            {\n                \"url\": \"https://www.doctrine-project.org/sponsorship.html\",\n                \"type\": \"custom\"\n            },\n            {\n                \"url\": \"https://www.patreon.com/phpdoctrine\",\n                \"type\": \"patreon\"\n            },\n            {\n                \"url\": \"https://tidelift.com/funding/github/packagist/doctrine%2Fdoctrine-migrations-bundle\",\n                \"type\": \"tidelift\"\n            }\n        ]\n    },\n    {\n        \"name\": \"doctrine/event-manager\",\n        \"version\": \"1.1.1\",\n        \"version_normalized\": \"1.1.1.0\",\n        \"source\": {\n            \"type\": \"git\",\n            \"url\": \"https://github.com/doctrine/event-manager.git\",\n            \"reference\": \"41370af6a30faa9dc0368c4a6814d596e81aba7f\"\n        },\n        \"dist\": {\n            \"type\": \"zip\",\n            \"url\": \"https://api.github.com/repos/doctrine/event-manager/zipball/41370af6a30faa9dc0368c4a6814d596e81aba7f\",\n            \"reference\": \"41370af6a30faa9dc0368c4a6814d596e81aba7f\",\n            \"shasum\": \"\"\n        },\n        \"require\": {\n            \"php\": \"^7.1 || ^8.0\"\n        },\n        \"conflict\": {\n            \"doctrine/common\": \"<2.9@dev\"\n        },\n        \"require-dev\": {\n            \"doctrine/coding-standard\": \"^6.0\",\n            \"phpunit/phpunit\": \"^7.0\"\n        },\n        \"time\": \"2020-05-29T18:28:51+00:00\",\n        \"type\": \"library\",\n        \"extra\": {\n            \"branch-alias\": {\n                \"dev-master\": \"1.0.x-dev\"\n            }\n        },\n        \"installation-source\": \"dist\",\n        \"autoload\": {\n            \"psr-4\": {\n                \"Doctrine\\\\Common\\\\\": \"lib/Doctrine/Common\"\n            }\n        },\n        \"notification-url\": \"https://packagist.org/downloads/\",\n        \"license\": [\n            \"MIT\"\n        ],\n        \"authors\": [\n            {\n                \"name\": \"Guilherme Blanco\",\n                \"email\": \"guilhermeblanco@gmail.com\"\n            },\n            {\n                \"name\": \"Roman Borschel\",\n                \"email\": \"roman@code-factory.org\"\n            },\n            {\n                \"name\": \"Benjamin Eberlei\",\n                \"email\": \"kontakt@beberlei.de\"\n            },\n            {\n                \"name\": \"Jonathan Wage\",\n                \"email\": \"jonwage@gmail.com\"\n            },\n            {\n                \"name\": \"Johannes Schmitt\",\n                \"email\": \"schmittjoh@gmail.com\"\n            },\n            {\n                \"name\": \"Marco Pivetta\",\n                \"email\": \"ocramius@gmail.com\"\n            }\n        ],\n        \"description\": \"The Doctrine Event Manager is a simple PHP event system that was built to be used with the various Doctrine projects.\",\n        \"homepage\": \"https://www.doctrine-project.org/projects/event-manager.html\",\n        \"keywords\": [\n            \"event\",\n            \"event dispatcher\",\n            \"event manager\",\n            \"event system\",\n            \"events\"\n        ],\n        \"funding\": [\n            {\n                \"url\": \"https://www.doctrine-project.org/sponsorship.html\",\n                \"type\": \"custom\"\n            },\n            {\n                \"url\": \"https://www.patreon.com/phpdoctrine\",\n                \"type\": \"patreon\"\n            },\n            {\n                \"url\": \"https://tidelift.com/funding/github/packagist/doctrine%2Fevent-manager\",\n                \"type\": \"tidelift\"\n            }\n        ]\n    },\n    {\n        \"name\": \"doctrine/inflector\",\n        \"version\": \"1.4.3\",\n        \"version_normalized\": \"1.4.3.0\",\n        \"source\": {\n            \"type\": \"git\",\n            \"url\": \"https://github.com/doctrine/inflector.git\",\n            \"reference\": \"4650c8b30c753a76bf44fb2ed00117d6f367490c\"\n        },\n        \"dist\": {\n            \"type\": \"zip\",\n            \"url\": \"https://api.github.com/repos/doctrine/inflector/zipball/4650c8b30c753a76bf44fb2ed00117d6f367490c\",\n            \"reference\": \"4650c8b30c753a76bf44fb2ed00117d6f367490c\",\n            \"shasum\": \"\"\n        },\n        \"require\": {\n            \"php\": \"^7.2 || ^8.0\"\n        },\n        \"require-dev\": {\n            \"doctrine/coding-standard\": \"^7.0\",\n            \"phpstan/phpstan\": \"^0.11\",\n            \"phpstan/phpstan-phpunit\": \"^0.11\",\n            \"phpstan/phpstan-strict-rules\": \"^0.11\",\n            \"phpunit/phpunit\": \"^7.0 || ^8.0 || ^9.0\"\n        },\n        \"time\": \"2020-05-29T07:19:59+00:00\",\n        \"type\": \"library\",\n        \"extra\": {\n            \"branch-alias\": {\n                \"dev-master\": \"2.0.x-dev\"\n            }\n        },\n        \"installation-source\": \"dist\",\n        \"autoload\": {\n            \"psr-4\": {\n                \"Doctrine\\\\Common\\\\Inflector\\\\\": \"lib/Doctrine/Common/Inflector\",\n                \"Doctrine\\\\Inflector\\\\\": \"lib/Doctrine/Inflector\"\n            }\n        },\n        \"notification-url\": \"https://packagist.org/downloads/\",\n        \"license\": [\n            \"MIT\"\n        ],\n        \"authors\": [\n            {\n                \"name\": \"Guilherme Blanco\",\n                \"email\": \"guilhermeblanco@gmail.com\"\n            },\n            {\n                \"name\": \"Roman Borschel\",\n                \"email\": \"roman@code-factory.org\"\n            },\n            {\n                \"name\": \"Benjamin Eberlei\",\n                \"email\": \"kontakt@beberlei.de\"\n            },\n            {\n                \"name\": \"Jonathan Wage\",\n                \"email\": \"jonwage@gmail.com\"\n            },\n            {\n                \"name\": \"Johannes Schmitt\",\n                \"email\": \"schmittjoh@gmail.com\"\n            }\n        ],\n        \"description\": \"PHP Doctrine Inflector is a small library that can perform string manipulations with regard to upper/lowercase and singular/plural forms of words.\",\n        \"homepage\": \"https://www.doctrine-project.org/projects/inflector.html\",\n        \"keywords\": [\n            \"inflection\",\n            \"inflector\",\n            \"lowercase\",\n            \"manipulation\",\n            \"php\",\n            \"plural\",\n            \"singular\",\n            \"strings\",\n            \"uppercase\",\n            \"words\"\n        ],\n        \"funding\": [\n            {\n                \"url\": \"https://www.doctrine-project.org/sponsorship.html\",\n                \"type\": \"custom\"\n            },\n            {\n                \"url\": \"https://www.patreon.com/phpdoctrine\",\n                \"type\": \"patreon\"\n            },\n            {\n                \"url\": \"https://tidelift.com/funding/github/packagist/doctrine%2Finflector\",\n                \"type\": \"tidelift\"\n            }\n        ]\n    },\n    {\n        \"name\": \"doctrine/instantiator\",\n        \"version\": \"1.3.1\",\n        \"version_normalized\": \"1.3.1.0\",\n        \"source\": {\n            \"type\": \"git\",\n            \"url\": \"https://github.com/doctrine/instantiator.git\",\n            \"reference\": \"f350df0268e904597e3bd9c4685c53e0e333feea\"\n        },\n        \"dist\": {\n            \"type\": \"zip\",\n            \"url\": \"https://api.github.com/repos/doctrine/instantiator/zipball/f350df0268e904597e3bd9c4685c53e0e333feea\",\n            \"reference\": \"f350df0268e904597e3bd9c4685c53e0e333feea\",\n            \"shasum\": \"\"\n        },\n        \"require\": {\n            \"php\": \"^7.1 || ^8.0\"\n        },\n        \"require-dev\": {\n            \"doctrine/coding-standard\": \"^6.0\",\n            \"ext-pdo\": \"*\",\n            \"ext-phar\": \"*\",\n            \"phpbench/phpbench\": \"^0.13\",\n            \"phpstan/phpstan-phpunit\": \"^0.11\",\n            \"phpstan/phpstan-shim\": \"^0.11\",\n            \"phpunit/phpunit\": \"^7.0\"\n        },\n        \"time\": \"2020-05-29T17:27:14+00:00\",\n        \"type\": \"library\",\n        \"extra\": {\n            \"branch-alias\": {\n                \"dev-master\": \"1.2.x-dev\"\n            }\n        },\n        \"installation-source\": \"dist\",\n        \"autoload\": {\n            \"psr-4\": {\n                \"Doctrine\\\\Instantiator\\\\\": \"src/Doctrine/Instantiator/\"\n            }\n        },\n        \"notification-url\": \"https://packagist.org/downloads/\",\n        \"license\": [\n            \"MIT\"\n        ],\n        \"authors\": [\n            {\n                \"name\": \"Marco Pivetta\",\n                \"email\": \"ocramius@gmail.com\",\n                \"homepage\": \"http://ocramius.github.com/\"\n            }\n        ],\n        \"description\": \"A small, lightweight utility to instantiate objects in PHP without invoking their constructors\",\n        \"homepage\": \"https://www.doctrine-project.org/projects/instantiator.html\",\n        \"keywords\": [\n            \"constructor\",\n            \"instantiate\"\n        ],\n        \"funding\": [\n            {\n                \"url\": \"https://www.doctrine-project.org/sponsorship.html\",\n                \"type\": \"custom\"\n            },\n            {\n                \"url\": \"https://www.patreon.com/phpdoctrine\",\n                \"type\": \"patreon\"\n            },\n            {\n                \"url\": \"https://tidelift.com/funding/github/packagist/doctrine%2Finstantiator\",\n                \"type\": \"tidelift\"\n            }\n        ]\n    },\n    {\n        \"name\": \"doctrine/lexer\",\n        \"version\": \"1.2.1\",\n        \"version_normalized\": \"1.2.1.0\",\n        \"source\": {\n            \"type\": \"git\",\n            \"url\": \"https://github.com/doctrine/lexer.git\",\n            \"reference\": \"e864bbf5904cb8f5bb334f99209b48018522f042\"\n        },\n        \"dist\": {\n            \"type\": \"zip\",\n            \"url\": \"https://api.github.com/repos/doctrine/lexer/zipball/e864bbf5904cb8f5bb334f99209b48018522f042\",\n            \"reference\": \"e864bbf5904cb8f5bb334f99209b48018522f042\",\n            \"shasum\": \"\"\n        },\n        \"require\": {\n            \"php\": \"^7.2 || ^8.0\"\n        },\n        \"require-dev\": {\n            \"doctrine/coding-standard\": \"^6.0\",\n            \"phpstan/phpstan\": \"^0.11.8\",\n            \"phpunit/phpunit\": \"^8.2\"\n        },\n        \"time\": \"2020-05-25T17:44:05+00:00\",\n        \"type\": \"library\",\n        \"extra\": {\n            \"branch-alias\": {\n                \"dev-master\": \"1.2.x-dev\"\n            }\n        },\n        \"installation-source\": \"dist\",\n        \"autoload\": {\n            \"psr-4\": {\n                \"Doctrine\\\\Common\\\\Lexer\\\\\": \"lib/Doctrine/Common/Lexer\"\n            }\n        },\n        \"notification-url\": \"https://packagist.org/downloads/\",\n        \"license\": [\n            \"MIT\"\n        ],\n        \"authors\": [\n            {\n                \"name\": \"Guilherme Blanco\",\n                \"email\": \"guilhermeblanco@gmail.com\"\n            },\n            {\n                \"name\": \"Roman Borschel\",\n                \"email\": \"roman@code-factory.org\"\n            },\n            {\n                \"name\": \"Johannes Schmitt\",\n                \"email\": \"schmittjoh@gmail.com\"\n            }\n        ],\n        \"description\": \"PHP Doctrine Lexer parser library that can be used in Top-Down, Recursive Descent Parsers.\",\n        \"homepage\": \"https://www.doctrine-project.org/projects/lexer.html\",\n        \"keywords\": [\n            \"annotations\",\n            \"docblock\",\n            \"lexer\",\n            \"parser\",\n            \"php\"\n        ],\n        \"funding\": [\n            {\n                \"url\": \"https://www.doctrine-project.org/sponsorship.html\",\n                \"type\": \"custom\"\n            },\n            {\n                \"url\": \"https://www.patreon.com/phpdoctrine\",\n                \"type\": \"patreon\"\n            },\n            {\n                \"url\": \"https://tidelift.com/funding/github/packagist/doctrine%2Flexer\",\n                \"type\": \"tidelift\"\n            }\n        ]\n    },\n    {\n        \"name\": \"doctrine/migrations\",\n        \"version\": \"3.0.1\",\n        \"version_normalized\": \"3.0.1.0\",\n        \"source\": {\n            \"type\": \"git\",\n            \"url\": \"https://github.com/doctrine/migrations.git\",\n            \"reference\": \"69eaf2ca5bc48357b43ddbdc31ccdffc0e2a0882\"\n        },\n        \"dist\": {\n            \"type\": \"zip\",\n            \"url\": \"https://api.github.com/repos/doctrine/migrations/zipball/69eaf2ca5bc48357b43ddbdc31ccdffc0e2a0882\",\n            \"reference\": \"69eaf2ca5bc48357b43ddbdc31ccdffc0e2a0882\",\n            \"shasum\": \"\"\n        },\n        \"require\": {\n            \"doctrine/dbal\": \"^2.10\",\n            \"doctrine/event-manager\": \"^1.0\",\n            \"ocramius/package-versions\": \"^1.3\",\n            \"ocramius/proxy-manager\": \"^2.0.2\",\n            \"php\": \"^7.2\",\n            \"psr/log\": \"^1.1.3\",\n            \"symfony/console\": \"^3.4||^4.0||^5.0\",\n            \"symfony/stopwatch\": \"^3.4||^4.0||^5.0\"\n        },\n        \"require-dev\": {\n            \"doctrine/coding-standard\": \"^7.0\",\n            \"doctrine/orm\": \"^2.6\",\n            \"doctrine/persistence\": \"^1.3||^2.0\",\n            \"doctrine/sql-formatter\": \"^1.0\",\n            \"ext-pdo_sqlite\": \"*\",\n            \"phpstan/phpstan\": \"^0.12\",\n            \"phpstan/phpstan-deprecation-rules\": \"^0.12\",\n            \"phpstan/phpstan-phpunit\": \"^0.12\",\n            \"phpstan/phpstan-strict-rules\": \"^0.12\",\n            \"phpstan/phpstan-symfony\": \"^0.12\",\n            \"phpunit/phpunit\": \"^8.4\",\n            \"symfony/process\": \"^3.4||^4.0||^5.0\",\n            \"symfony/yaml\": \"^3.4||^4.0||^5.0\"\n        },\n        \"suggest\": {\n            \"doctrine/sql-formatter\": \"Allows to generate formatted SQL with the diff command.\",\n            \"symfony/yaml\": \"Allows the use of yaml for migration configuration files.\"\n        },\n        \"time\": \"2020-06-21T08:55:42+00:00\",\n        \"bin\": [\n            \"bin/doctrine-migrations\"\n        ],\n        \"type\": \"library\",\n        \"extra\": {\n            \"branch-alias\": {\n                \"dev-master\": \"3.0.x-dev\"\n            }\n        },\n        \"installation-source\": \"dist\",\n        \"autoload\": {\n            \"psr-4\": {\n                \"Doctrine\\\\Migrations\\\\\": \"lib/Doctrine/Migrations\"\n            }\n        },\n        \"notification-url\": \"https://packagist.org/downloads/\",\n        \"license\": [\n            \"MIT\"\n        ],\n        \"authors\": [\n            {\n                \"name\": \"Benjamin Eberlei\",\n                \"email\": \"kontakt@beberlei.de\"\n            },\n            {\n                \"name\": \"Jonathan Wage\",\n                \"email\": \"jonwage@gmail.com\"\n            },\n            {\n                \"name\": \"Michael Simonson\",\n                \"email\": \"contact@mikesimonson.com\"\n            }\n        ],\n        \"description\": \"PHP Doctrine Migrations project offer additional functionality on top of the database abstraction layer (DBAL) for versioning your database schema and easily deploying changes to it. It is a very easy to use and a powerful tool.\",\n        \"homepage\": \"https://www.doctrine-project.org/projects/migrations.html\",\n        \"keywords\": [\n            \"database\",\n            \"dbal\",\n            \"migrations\",\n            \"php\"\n        ],\n        \"funding\": [\n            {\n                \"url\": \"https://www.doctrine-project.org/sponsorship.html\",\n                \"type\": \"custom\"\n            },\n            {\n                \"url\": \"https://www.patreon.com/phpdoctrine\",\n                \"type\": \"patreon\"\n            },\n            {\n                \"url\": \"https://tidelift.com/funding/github/packagist/doctrine%2Fmigrations\",\n                \"type\": \"tidelift\"\n            }\n        ]\n    },\n    {\n        \"name\": \"doctrine/orm\",\n        \"version\": \"2.7.4\",\n        \"version_normalized\": \"2.7.4.0\",\n        \"source\": {\n            \"type\": \"git\",\n            \"url\": \"https://github.com/doctrine/orm.git\",\n            \"reference\": \"7d84a4998091ece4d645253ac65de9f879eeed2f\"\n        },\n        \"dist\": {\n            \"type\": \"zip\",\n            \"url\": \"https://api.github.com/repos/doctrine/orm/zipball/7d84a4998091ece4d645253ac65de9f879eeed2f\",\n            \"reference\": \"7d84a4998091ece4d645253ac65de9f879eeed2f\",\n            \"shasum\": \"\"\n        },\n        \"require\": {\n            \"composer/package-versions-deprecated\": \"^1.8\",\n            \"doctrine/annotations\": \"^1.8\",\n            \"doctrine/cache\": \"^1.9.1\",\n            \"doctrine/collections\": \"^1.5\",\n            \"doctrine/common\": \"^2.11 || ^3.0\",\n            \"doctrine/dbal\": \"^2.9.3\",\n            \"doctrine/event-manager\": \"^1.1\",\n            \"doctrine/inflector\": \"^1.0\",\n            \"doctrine/instantiator\": \"^1.3\",\n            \"doctrine/lexer\": \"^1.0\",\n            \"doctrine/persistence\": \"^1.3.3 || ^2.0\",\n            \"ext-pdo\": \"*\",\n            \"php\": \"^7.1\",\n            \"symfony/console\": \"^3.0|^4.0|^5.0\"\n        },\n        \"require-dev\": {\n            \"doctrine/coding-standard\": \"^5.0\",\n            \"phpstan/phpstan\": \"^0.12.18\",\n            \"phpunit/phpunit\": \"^7.5\",\n            \"symfony/yaml\": \"^3.4|^4.0|^5.0\",\n            \"vimeo/psalm\": \"^3.11\"\n        },\n        \"suggest\": {\n            \"symfony/yaml\": \"If you want to use YAML Metadata Mapping Driver\"\n        },\n        \"time\": \"2020-10-10T17:11:26+00:00\",\n        \"bin\": [\n            \"bin/doctrine\"\n        ],\n        \"type\": \"library\",\n        \"extra\": {\n            \"branch-alias\": {\n                \"dev-master\": \"2.7.x-dev\"\n            }\n        },\n        \"installation-source\": \"dist\",\n        \"autoload\": {\n            \"psr-4\": {\n                \"Doctrine\\\\ORM\\\\\": \"lib/Doctrine/ORM\"\n            }\n        },\n        \"notification-url\": \"https://packagist.org/downloads/\",\n        \"license\": [\n            \"MIT\"\n        ],\n        \"authors\": [\n            {\n                \"name\": \"Guilherme Blanco\",\n                \"email\": \"guilhermeblanco@gmail.com\"\n            },\n            {\n                \"name\": \"Roman Borschel\",\n                \"email\": \"roman@code-factory.org\"\n            },\n            {\n                \"name\": \"Benjamin Eberlei\",\n                \"email\": \"kontakt@beberlei.de\"\n            },\n            {\n                \"name\": \"Jonathan Wage\",\n                \"email\": \"jonwage@gmail.com\"\n            },\n            {\n                \"name\": \"Marco Pivetta\",\n                \"email\": \"ocramius@gmail.com\"\n            }\n        ],\n        \"description\": \"Object-Relational-Mapper for PHP\",\n        \"homepage\": \"https://www.doctrine-project.org/projects/orm.html\",\n        \"keywords\": [\n            \"database\",\n            \"orm\"\n        ]\n    },\n    {\n        \"name\": \"doctrine/persistence\",\n        \"version\": \"2.1.0\",\n        \"version_normalized\": \"2.1.0.0\",\n        \"source\": {\n            \"type\": \"git\",\n            \"url\": \"https://github.com/doctrine/persistence.git\",\n            \"reference\": \"9899c16934053880876b920a3b8b02ed2337ac1d\"\n        },\n        \"dist\": {\n            \"type\": \"zip\",\n            \"url\": \"https://api.github.com/repos/doctrine/persistence/zipball/9899c16934053880876b920a3b8b02ed2337ac1d\",\n            \"reference\": \"9899c16934053880876b920a3b8b02ed2337ac1d\",\n            \"shasum\": \"\"\n        },\n        \"require\": {\n            \"doctrine/annotations\": \"^1.0\",\n            \"doctrine/cache\": \"^1.0\",\n            \"doctrine/collections\": \"^1.0\",\n            \"doctrine/event-manager\": \"^1.0\",\n            \"php\": \"^7.1 || ^8.0\"\n        },\n        \"conflict\": {\n            \"doctrine/common\": \"<2.10@dev\"\n        },\n        \"require-dev\": {\n            \"composer/package-versions-deprecated\": \"^1.11\",\n            \"doctrine/coding-standard\": \"^6.0 || ^8.0\",\n            \"doctrine/common\": \"^3.0\",\n            \"phpstan/phpstan\": \"^0.12\",\n            \"phpunit/phpunit\": \"^7.5.20 || ^8.0 || ^9.0\",\n            \"vimeo/psalm\": \"^3.11\"\n        },\n        \"time\": \"2020-10-24T22:13:54+00:00\",\n        \"type\": \"library\",\n        \"installation-source\": \"dist\",\n        \"autoload\": {\n            \"psr-4\": {\n                \"Doctrine\\\\Common\\\\\": \"lib/Doctrine/Common\",\n                \"Doctrine\\\\Persistence\\\\\": \"lib/Doctrine/Persistence\"\n            }\n        },\n        \"notification-url\": \"https://packagist.org/downloads/\",\n        \"license\": [\n            \"MIT\"\n        ],\n        \"authors\": [\n            {\n                \"name\": \"Guilherme Blanco\",\n                \"email\": \"guilhermeblanco@gmail.com\"\n            },\n            {\n                \"name\": \"Roman Borschel\",\n                \"email\": \"roman@code-factory.org\"\n            },\n            {\n                \"name\": \"Benjamin Eberlei\",\n                \"email\": \"kontakt@beberlei.de\"\n            },\n            {\n                \"name\": \"Jonathan Wage\",\n                \"email\": \"jonwage@gmail.com\"\n            },\n            {\n                \"name\": \"Johannes Schmitt\",\n                \"email\": \"schmittjoh@gmail.com\"\n            },\n            {\n                \"name\": \"Marco Pivetta\",\n                \"email\": \"ocramius@gmail.com\"\n            }\n        ],\n        \"description\": \"The Doctrine Persistence project is a set of shared interfaces and functionality that the different Doctrine object mappers share.\",\n        \"homepage\": \"https://doctrine-project.org/projects/persistence.html\",\n        \"keywords\": [\n            \"mapper\",\n            \"object\",\n            \"odm\",\n            \"orm\",\n            \"persistence\"\n        ]\n    },\n    {\n        \"name\": \"doctrine/sql-formatter\",\n        \"version\": \"1.1.1\",\n        \"version_normalized\": \"1.1.1.0\",\n        \"source\": {\n            \"type\": \"git\",\n            \"url\": \"https://github.com/doctrine/sql-formatter.git\",\n            \"reference\": \"56070bebac6e77230ed7d306ad13528e60732871\"\n        },\n        \"dist\": {\n            \"type\": \"zip\",\n            \"url\": \"https://api.github.com/repos/doctrine/sql-formatter/zipball/56070bebac6e77230ed7d306ad13528e60732871\",\n            \"reference\": \"56070bebac6e77230ed7d306ad13528e60732871\",\n            \"shasum\": \"\"\n        },\n        \"require\": {\n            \"php\": \"^7.1 || ^8.0\"\n        },\n        \"require-dev\": {\n            \"bamarni/composer-bin-plugin\": \"^1.4\"\n        },\n        \"time\": \"2020-07-30T16:57:33+00:00\",\n        \"bin\": [\n            \"bin/sql-formatter\"\n        ],\n        \"type\": \"library\",\n        \"extra\": {\n            \"branch-alias\": {\n                \"dev-master\": \"1.x-dev\"\n            }\n        },\n        \"installation-source\": \"dist\",\n        \"autoload\": {\n            \"psr-4\": {\n                \"Doctrine\\\\SqlFormatter\\\\\": \"src\"\n            }\n        },\n        \"notification-url\": \"https://packagist.org/downloads/\",\n        \"license\": [\n            \"MIT\"\n        ],\n        \"authors\": [\n            {\n                \"name\": \"Jeremy Dorn\",\n                \"email\": \"jeremy@jeremydorn.com\",\n                \"homepage\": \"http://jeremydorn.com/\"\n            }\n        ],\n        \"description\": \"a PHP SQL highlighting library\",\n        \"homepage\": \"https://github.com/doctrine/sql-formatter/\",\n        \"keywords\": [\n            \"highlight\",\n            \"sql\"\n        ]\n    },\n    {\n        \"name\": \"egulias/email-validator\",\n        \"version\": \"2.1.23\",\n        \"version_normalized\": \"2.1.23.0\",\n        \"source\": {\n            \"type\": \"git\",\n            \"url\": \"https://github.com/egulias/EmailValidator.git\",\n            \"reference\": \"5fa792ad1853ae2bc60528dd3e5cbf4542d3c1df\"\n        },\n        \"dist\": {\n            \"type\": \"zip\",\n            \"url\": \"https://api.github.com/repos/egulias/EmailValidator/zipball/5fa792ad1853ae2bc60528dd3e5cbf4542d3c1df\",\n            \"reference\": \"5fa792ad1853ae2bc60528dd3e5cbf4542d3c1df\",\n            \"shasum\": \"\"\n        },\n        \"require\": {\n            \"doctrine/lexer\": \"^1.0.1\",\n            \"php\": \">=5.5\",\n            \"symfony/polyfill-intl-idn\": \"^1.10\"\n        },\n        \"require-dev\": {\n            \"dominicsayers/isemail\": \"^3.0.7\",\n            \"phpunit/phpunit\": \"^4.8.36|^7.5.15\",\n            \"satooshi/php-coveralls\": \"^1.0.1\"\n        },\n        \"suggest\": {\n            \"ext-intl\": \"PHP Internationalization Libraries are required to use the SpoofChecking validation\"\n        },\n        \"time\": \"2020-10-31T20:37:35+00:00\",\n        \"type\": \"library\",\n        \"extra\": {\n            \"branch-alias\": {\n                \"dev-master\": \"2.1.x-dev\"\n            }\n        },\n        \"installation-source\": \"dist\",\n        \"autoload\": {\n            \"psr-4\": {\n                \"Egulias\\\\EmailValidator\\\\\": \"src\"\n            }\n        },\n        \"notification-url\": \"https://packagist.org/downloads/\",\n        \"license\": [\n            \"MIT\"\n        ],\n        \"authors\": [\n            {\n                \"name\": \"Eduardo Gulias Davis\"\n            }\n        ],\n        \"description\": \"A library for validating emails against several RFCs\",\n        \"homepage\": \"https://github.com/egulias/EmailValidator\",\n        \"keywords\": [\n            \"email\",\n            \"emailvalidation\",\n            \"emailvalidator\",\n            \"validation\",\n            \"validator\"\n        ]\n    },\n    {\n        \"name\": \"firebase/php-jwt\",\n        \"version\": \"v5.2.0\",\n        \"version_normalized\": \"5.2.0.0\",\n        \"source\": {\n            \"type\": \"git\",\n            \"url\": \"https://github.com/firebase/php-jwt.git\",\n            \"reference\": \"feb0e820b8436873675fd3aca04f3728eb2185cb\"\n        },\n        \"dist\": {\n            \"type\": \"zip\",\n            \"url\": \"https://api.github.com/repos/firebase/php-jwt/zipball/feb0e820b8436873675fd3aca04f3728eb2185cb\",\n            \"reference\": \"feb0e820b8436873675fd3aca04f3728eb2185cb\",\n            \"shasum\": \"\"\n        },\n        \"require\": {\n            \"php\": \">=5.3.0\"\n        },\n        \"require-dev\": {\n            \"phpunit/phpunit\": \">=4.8 <=9\"\n        },\n        \"time\": \"2020-03-25T18:49:23+00:00\",\n        \"type\": \"library\",\n        \"installation-source\": \"dist\",\n        \"autoload\": {\n            \"psr-4\": {\n                \"Firebase\\\\JWT\\\\\": \"src\"\n            }\n        },\n        \"notification-url\": \"https://packagist.org/downloads/\",\n        \"license\": [\n            \"BSD-3-Clause\"\n        ],\n        \"authors\": [\n            {\n                \"name\": \"Neuman Vong\",\n                \"email\": \"neuman+pear@twilio.com\",\n                \"role\": \"Developer\"\n            },\n            {\n                \"name\": \"Anant Narayanan\",\n                \"email\": \"anant@php.net\",\n                \"role\": \"Developer\"\n            }\n        ],\n        \"description\": \"A simple library to encode and decode JSON Web Tokens (JWT) in PHP. Should conform to the current spec.\",\n        \"homepage\": \"https://github.com/firebase/php-jwt\",\n        \"keywords\": [\n            \"jwt\",\n            \"php\"\n        ]\n    },\n    {\n        \"name\": \"google/apiclient\",\n        \"version\": \"v2.8.3\",\n        \"version_normalized\": \"2.8.3.0\",\n        \"source\": {\n            \"type\": \"git\",\n            \"url\": \"https://github.com/googleapis/google-api-php-client.git\",\n            \"reference\": \"81696e6206322e38c643cfcc96c4494ccfef8a32\"\n        },\n        \"dist\": {\n            \"type\": \"zip\",\n            \"url\": \"https://api.github.com/repos/googleapis/google-api-php-client/zipball/81696e6206322e38c643cfcc96c4494ccfef8a32\",\n            \"reference\": \"81696e6206322e38c643cfcc96c4494ccfef8a32\",\n            \"shasum\": \"\"\n        },\n        \"require\": {\n            \"firebase/php-jwt\": \"~2.0||~3.0||~4.0||~5.0\",\n            \"google/apiclient-services\": \"~0.13\",\n            \"google/auth\": \"^1.10\",\n            \"guzzlehttp/guzzle\": \"~5.3.1||~6.0||~7.0\",\n            \"guzzlehttp/psr7\": \"^1.2\",\n            \"monolog/monolog\": \"^1.17|^2.0\",\n            \"php\": \">=5.4\",\n            \"phpseclib/phpseclib\": \"~0.3.10||~2.0\"\n        },\n        \"require-dev\": {\n            \"cache/filesystem-adapter\": \"^0.3.2\",\n            \"composer/composer\": \"^1.10\",\n            \"dealerdirect/phpcodesniffer-composer-installer\": \"^0.7\",\n            \"phpcompatibility/php-compatibility\": \"^9.2\",\n            \"phpunit/phpunit\": \"^4.8.36|^5.0\",\n            \"squizlabs/php_codesniffer\": \"~2.3\",\n            \"symfony/css-selector\": \"~2.1\",\n            \"symfony/dom-crawler\": \"~2.1\"\n        },\n        \"suggest\": {\n            \"cache/filesystem-adapter\": \"For caching certs and tokens (using Google\\\\Client::setCache)\"\n        },\n        \"time\": \"2020-11-17T17:33:35+00:00\",\n        \"type\": \"library\",\n        \"extra\": {\n            \"branch-alias\": {\n                \"dev-master\": \"2.x-dev\"\n            }\n        },\n        \"installation-source\": \"dist\",\n        \"autoload\": {\n            \"psr-4\": {\n                \"Google\\\\\": \"src/\"\n            },\n            \"files\": [\n                \"src/aliases.php\"\n            ],\n            \"classmap\": [\n                \"src/aliases.php\"\n            ]\n        },\n        \"notification-url\": \"https://packagist.org/downloads/\",\n        \"license\": [\n            \"Apache-2.0\"\n        ],\n        \"description\": \"Client library for Google APIs\",\n        \"homepage\": \"http://developers.google.com/api-client-library/php\",\n        \"keywords\": [\n            \"google\"\n        ]\n    },\n    {\n        \"name\": \"google/apiclient-services\",\n        \"version\": \"v0.154\",\n        \"version_normalized\": \"0.154.0.0\",\n        \"source\": {\n            \"type\": \"git\",\n            \"url\": \"https://github.com/googleapis/google-api-php-client-services.git\",\n            \"reference\": \"7f44a314836c444b7894d648c1c49f83fb9d37ca\"\n        },\n        \"dist\": {\n            \"type\": \"zip\",\n            \"url\": \"https://api.github.com/repos/googleapis/google-api-php-client-services/zipball/7f44a314836c444b7894d648c1c49f83fb9d37ca\",\n            \"reference\": \"7f44a314836c444b7894d648c1c49f83fb9d37ca\",\n            \"shasum\": \"\"\n        },\n        \"require\": {\n            \"php\": \">=5.4\"\n        },\n        \"require-dev\": {\n            \"phpunit/phpunit\": \"^4.8|^5\"\n        },\n        \"time\": \"2020-11-19T19:01:11+00:00\",\n        \"type\": \"library\",\n        \"installation-source\": \"dist\",\n        \"autoload\": {\n            \"psr-0\": {\n                \"Google_Service_\": \"src\"\n            }\n        },\n        \"notification-url\": \"https://packagist.org/downloads/\",\n        \"license\": [\n            \"Apache-2.0\"\n        ],\n        \"description\": \"Client library for Google APIs\",\n        \"homepage\": \"http://developers.google.com/api-client-library/php\",\n        \"keywords\": [\n            \"google\"\n        ]\n    },\n    {\n        \"name\": \"google/auth\",\n        \"version\": \"v1.14.3\",\n        \"version_normalized\": \"1.14.3.0\",\n        \"source\": {\n            \"type\": \"git\",\n            \"url\": \"https://github.com/googleapis/google-auth-library-php.git\",\n            \"reference\": \"c1503299c779af0cbc99b43788f75930988852cf\"\n        },\n        \"dist\": {\n            \"type\": \"zip\",\n            \"url\": \"https://api.github.com/repos/googleapis/google-auth-library-php/zipball/c1503299c779af0cbc99b43788f75930988852cf\",\n            \"reference\": \"c1503299c779af0cbc99b43788f75930988852cf\",\n            \"shasum\": \"\"\n        },\n        \"require\": {\n            \"firebase/php-jwt\": \"~2.0|~3.0|~4.0|~5.0\",\n            \"guzzlehttp/guzzle\": \"^5.3.1|^6.2.1|^7.0\",\n            \"guzzlehttp/psr7\": \"^1.2\",\n            \"php\": \">=5.4\",\n            \"psr/cache\": \"^1.0\",\n            \"psr/http-message\": \"^1.0\"\n        },\n        \"require-dev\": {\n            \"guzzlehttp/promises\": \"0.1.1|^1.3\",\n            \"kelvinmo/simplejwt\": \"^0.2.5\",\n            \"phpseclib/phpseclib\": \"^2\",\n            \"phpunit/phpunit\": \"^4.8.36|^5.7\",\n            \"sebastian/comparator\": \">=1.2.3\",\n            \"squizlabs/php_codesniffer\": \"^3.5\"\n        },\n        \"suggest\": {\n            \"phpseclib/phpseclib\": \"May be used in place of OpenSSL for signing strings or for token management. Please require version ^2.\"\n        },\n        \"time\": \"2020-10-16T21:33:48+00:00\",\n        \"type\": \"library\",\n        \"installation-source\": \"dist\",\n        \"autoload\": {\n            \"psr-4\": {\n                \"Google\\\\Auth\\\\\": \"src\"\n            }\n        },\n        \"notification-url\": \"https://packagist.org/downloads/\",\n        \"license\": [\n            \"Apache-2.0\"\n        ],\n        \"description\": \"Google Auth Library for PHP\",\n        \"homepage\": \"http://github.com/google/google-auth-library-php\",\n        \"keywords\": [\n            \"Authentication\",\n            \"google\",\n            \"oauth2\"\n        ]\n    },\n    {\n        \"name\": \"guzzlehttp/guzzle\",\n        \"version\": \"7.2.0\",\n        \"version_normalized\": \"7.2.0.0\",\n        \"source\": {\n            \"type\": \"git\",\n            \"url\": \"https://github.com/guzzle/guzzle.git\",\n            \"reference\": \"0aa74dfb41ae110835923ef10a9d803a22d50e79\"\n        },\n        \"dist\": {\n            \"type\": \"zip\",\n            \"url\": \"https://api.github.com/repos/guzzle/guzzle/zipball/0aa74dfb41ae110835923ef10a9d803a22d50e79\",\n            \"reference\": \"0aa74dfb41ae110835923ef10a9d803a22d50e79\",\n            \"shasum\": \"\"\n        },\n        \"require\": {\n            \"ext-json\": \"*\",\n            \"guzzlehttp/promises\": \"^1.4\",\n            \"guzzlehttp/psr7\": \"^1.7\",\n            \"php\": \"^7.2.5 || ^8.0\",\n            \"psr/http-client\": \"^1.0\"\n        },\n        \"provide\": {\n            \"psr/http-client-implementation\": \"1.0\"\n        },\n        \"require-dev\": {\n            \"ext-curl\": \"*\",\n            \"php-http/client-integration-tests\": \"^3.0\",\n            \"phpunit/phpunit\": \"^8.5.5 || ^9.3.5\",\n            \"psr/log\": \"^1.1\"\n        },\n        \"suggest\": {\n            \"ext-curl\": \"Required for CURL handler support\",\n            \"ext-intl\": \"Required for Internationalized Domain Name (IDN) support\",\n            \"psr/log\": \"Required for using the Log middleware\"\n        },\n        \"time\": \"2020-10-10T11:47:56+00:00\",\n        \"type\": \"library\",\n        \"extra\": {\n            \"branch-alias\": {\n                \"dev-master\": \"7.1-dev\"\n            }\n        },\n        \"installation-source\": \"dist\",\n        \"autoload\": {\n            \"psr-4\": {\n                \"GuzzleHttp\\\\\": \"src/\"\n            },\n            \"files\": [\n                \"src/functions_include.php\"\n            ]\n        },\n        \"notification-url\": \"https://packagist.org/downloads/\",\n        \"license\": [\n            \"MIT\"\n        ],\n        \"authors\": [\n            {\n                \"name\": \"Michael Dowling\",\n                \"email\": \"mtdowling@gmail.com\",\n                \"homepage\": \"https://github.com/mtdowling\"\n            },\n            {\n                \"name\": \"Márk Sági-Kazár\",\n                \"email\": \"mark.sagikazar@gmail.com\",\n                \"homepage\": \"https://sagikazarmark.hu\"\n            }\n        ],\n        \"description\": \"Guzzle is a PHP HTTP client library\",\n        \"homepage\": \"http://guzzlephp.org/\",\n        \"keywords\": [\n            \"client\",\n            \"curl\",\n            \"framework\",\n            \"http\",\n            \"http client\",\n            \"psr-18\",\n            \"psr-7\",\n            \"rest\",\n            \"web service\"\n        ],\n        \"funding\": [\n            {\n                \"url\": \"https://github.com/GrahamCampbell\",\n                \"type\": \"github\"\n            },\n            {\n                \"url\": \"https://github.com/Nyholm\",\n                \"type\": \"github\"\n            },\n            {\n                \"url\": \"https://github.com/alexeyshockov\",\n                \"type\": \"github\"\n            },\n            {\n                \"url\": \"https://github.com/gmponos\",\n                \"type\": \"github\"\n            }\n        ]\n    },\n    {\n        \"name\": \"guzzlehttp/promises\",\n        \"version\": \"1.4.0\",\n        \"version_normalized\": \"1.4.0.0\",\n        \"source\": {\n            \"type\": \"git\",\n            \"url\": \"https://github.com/guzzle/promises.git\",\n            \"reference\": \"60d379c243457e073cff02bc323a2a86cb355631\"\n        },\n        \"dist\": {\n            \"type\": \"zip\",\n            \"url\": \"https://api.github.com/repos/guzzle/promises/zipball/60d379c243457e073cff02bc323a2a86cb355631\",\n            \"reference\": \"60d379c243457e073cff02bc323a2a86cb355631\",\n            \"shasum\": \"\"\n        },\n        \"require\": {\n            \"php\": \">=5.5\"\n        },\n        \"require-dev\": {\n            \"symfony/phpunit-bridge\": \"^4.4 || ^5.1\"\n        },\n        \"time\": \"2020-09-30T07:37:28+00:00\",\n        \"type\": \"library\",\n        \"extra\": {\n            \"branch-alias\": {\n                \"dev-master\": \"1.4-dev\"\n            }\n        },\n        \"installation-source\": \"dist\",\n        \"autoload\": {\n            \"psr-4\": {\n                \"GuzzleHttp\\\\Promise\\\\\": \"src/\"\n            },\n            \"files\": [\n                \"src/functions_include.php\"\n            ]\n        },\n        \"notification-url\": \"https://packagist.org/downloads/\",\n        \"license\": [\n            \"MIT\"\n        ],\n        \"authors\": [\n            {\n                \"name\": \"Michael Dowling\",\n                \"email\": \"mtdowling@gmail.com\",\n                \"homepage\": \"https://github.com/mtdowling\"\n            }\n        ],\n        \"description\": \"Guzzle promises library\",\n        \"keywords\": [\n            \"promise\"\n        ]\n    },\n    {\n        \"name\": \"guzzlehttp/psr7\",\n        \"version\": \"1.7.0\",\n        \"version_normalized\": \"1.7.0.0\",\n        \"source\": {\n            \"type\": \"git\",\n            \"url\": \"https://github.com/guzzle/psr7.git\",\n            \"reference\": \"53330f47520498c0ae1f61f7e2c90f55690c06a3\"\n        },\n        \"dist\": {\n            \"type\": \"zip\",\n            \"url\": \"https://api.github.com/repos/guzzle/psr7/zipball/53330f47520498c0ae1f61f7e2c90f55690c06a3\",\n            \"reference\": \"53330f47520498c0ae1f61f7e2c90f55690c06a3\",\n            \"shasum\": \"\"\n        },\n        \"require\": {\n            \"php\": \">=5.4.0\",\n            \"psr/http-message\": \"~1.0\",\n            \"ralouphie/getallheaders\": \"^2.0.5 || ^3.0.0\"\n        },\n        \"provide\": {\n            \"psr/http-message-implementation\": \"1.0\"\n        },\n        \"require-dev\": {\n            \"ext-zlib\": \"*\",\n            \"phpunit/phpunit\": \"~4.8.36 || ^5.7.27 || ^6.5.14 || ^7.5.20 || ^8.5.8 || ^9.3.10\"\n        },\n        \"suggest\": {\n            \"laminas/laminas-httphandlerrunner\": \"Emit PSR-7 responses\"\n        },\n        \"time\": \"2020-09-30T07:37:11+00:00\",\n        \"type\": \"library\",\n        \"extra\": {\n            \"branch-alias\": {\n                \"dev-master\": \"1.7-dev\"\n            }\n        },\n        \"installation-source\": \"dist\",\n        \"autoload\": {\n            \"psr-4\": {\n                \"GuzzleHttp\\\\Psr7\\\\\": \"src/\"\n            },\n            \"files\": [\n                \"src/functions_include.php\"\n            ]\n        },\n        \"notification-url\": \"https://packagist.org/downloads/\",\n        \"license\": [\n            \"MIT\"\n        ],\n        \"authors\": [\n            {\n                \"name\": \"Michael Dowling\",\n                \"email\": \"mtdowling@gmail.com\",\n                \"homepage\": \"https://github.com/mtdowling\"\n            },\n            {\n                \"name\": \"Tobias Schultze\",\n                \"homepage\": \"https://github.com/Tobion\"\n            }\n        ],\n        \"description\": \"PSR-7 message implementation that also provides common utility methods\",\n        \"keywords\": [\n            \"http\",\n            \"message\",\n            \"psr-7\",\n            \"request\",\n            \"response\",\n            \"stream\",\n            \"uri\",\n            \"url\"\n        ]\n    },\n    {\n        \"name\": \"knpuniversity/oauth2-client-bundle\",\n        \"version\": \"v2.5.1\",\n        \"version_normalized\": \"2.5.1.0\",\n        \"source\": {\n            \"type\": \"git\",\n            \"url\": \"https://github.com/knpuniversity/oauth2-client-bundle.git\",\n            \"reference\": \"5e5919bf321f76121df93c55fdbf82a0c481bd5f\"\n        },\n        \"dist\": {\n            \"type\": \"zip\",\n            \"url\": \"https://api.github.com/repos/knpuniversity/oauth2-client-bundle/zipball/5e5919bf321f76121df93c55fdbf82a0c481bd5f\",\n            \"reference\": \"5e5919bf321f76121df93c55fdbf82a0c481bd5f\",\n            \"shasum\": \"\"\n        },\n        \"require\": {\n            \"league/oauth2-client\": \"^1.0|^2.0\",\n            \"php\": \"^7.1.3\",\n            \"symfony/dependency-injection\": \"^4.4|^5.0\",\n            \"symfony/framework-bundle\": \"^4.4|^5.0\",\n            \"symfony/http-foundation\": \"^4.4|^5.0\",\n            \"symfony/routing\": \"^4.4|^5.0\"\n        },\n        \"require-dev\": {\n            \"league/oauth2-facebook\": \"^1.1|^2.0\",\n            \"phpspec/prophecy\": \"^1.8\",\n            \"phpstan/phpstan\": \"^0.11.16\",\n            \"symfony/phpunit-bridge\": \"^4.4|^5.0\",\n            \"symfony/security-guard\": \"^4.4|^5.0\",\n            \"symfony/yaml\": \"^4.4|^5.0\"\n        },\n        \"suggest\": {\n            \"symfony/security-guard\": \"For integration with Symfony's Guard Security layer\"\n        },\n        \"time\": \"2020-11-21T16:21:33+00:00\",\n        \"type\": \"symfony-bundle\",\n        \"installation-source\": \"dist\",\n        \"autoload\": {\n            \"psr-4\": {\n                \"KnpU\\\\OAuth2ClientBundle\\\\\": \"src/\"\n            }\n        },\n        \"notification-url\": \"https://packagist.org/downloads/\",\n        \"license\": [\n            \"MIT\"\n        ],\n        \"authors\": [\n            {\n                \"name\": \"Ryan Weaver\",\n                \"email\": \"ryan@symfonycasts.com\"\n            }\n        ],\n        \"description\": \"Integration with league/oauth2-client to provide services\",\n        \"homepage\": \"https://symfonycasts.com\",\n        \"keywords\": [\n            \"oauth\",\n            \"oauth2\"\n        ]\n    },\n    {\n        \"name\": \"laminas/laminas-code\",\n        \"version\": \"3.4.1\",\n        \"version_normalized\": \"3.4.1.0\",\n        \"source\": {\n            \"type\": \"git\",\n            \"url\": \"https://github.com/laminas/laminas-code.git\",\n            \"reference\": \"1cb8f203389ab1482bf89c0e70a04849bacd7766\"\n        },\n        \"dist\": {\n            \"type\": \"zip\",\n            \"url\": \"https://api.github.com/repos/laminas/laminas-code/zipball/1cb8f203389ab1482bf89c0e70a04849bacd7766\",\n            \"reference\": \"1cb8f203389ab1482bf89c0e70a04849bacd7766\",\n            \"shasum\": \"\"\n        },\n        \"require\": {\n            \"laminas/laminas-eventmanager\": \"^2.6 || ^3.0\",\n            \"laminas/laminas-zendframework-bridge\": \"^1.0\",\n            \"php\": \"^7.1\"\n        },\n        \"conflict\": {\n            \"phpspec/prophecy\": \"<1.9.0\"\n        },\n        \"replace\": {\n            \"zendframework/zend-code\": \"self.version\"\n        },\n        \"require-dev\": {\n            \"doctrine/annotations\": \"^1.7\",\n            \"ext-phar\": \"*\",\n            \"laminas/laminas-coding-standard\": \"^1.0\",\n            \"laminas/laminas-stdlib\": \"^2.7 || ^3.0\",\n            \"phpunit/phpunit\": \"^7.5.16 || ^8.4\"\n        },\n        \"suggest\": {\n            \"doctrine/annotations\": \"Doctrine\\\\Common\\\\Annotations >=1.0 for annotation features\",\n            \"laminas/laminas-stdlib\": \"Laminas\\\\Stdlib component\"\n        },\n        \"time\": \"2019-12-31T16:28:24+00:00\",\n        \"type\": \"library\",\n        \"extra\": {\n            \"branch-alias\": {\n                \"dev-master\": \"3.4.x-dev\",\n                \"dev-develop\": \"3.5.x-dev\",\n                \"dev-dev-4.0\": \"4.0.x-dev\"\n            }\n        },\n        \"installation-source\": \"dist\",\n        \"autoload\": {\n            \"psr-4\": {\n                \"Laminas\\\\Code\\\\\": \"src/\"\n            }\n        },\n        \"notification-url\": \"https://packagist.org/downloads/\",\n        \"license\": [\n            \"BSD-3-Clause\"\n        ],\n        \"description\": \"Extensions to the PHP Reflection API, static code scanning, and code generation\",\n        \"homepage\": \"https://laminas.dev\",\n        \"keywords\": [\n            \"code\",\n            \"laminas\"\n        ]\n    },\n    {\n        \"name\": \"laminas/laminas-eventmanager\",\n        \"version\": \"3.3.0\",\n        \"version_normalized\": \"3.3.0.0\",\n        \"source\": {\n            \"type\": \"git\",\n            \"url\": \"https://github.com/laminas/laminas-eventmanager.git\",\n            \"reference\": \"1940ccf30e058b2fd66f5a9d696f1b5e0027b082\"\n        },\n        \"dist\": {\n            \"type\": \"zip\",\n            \"url\": \"https://api.github.com/repos/laminas/laminas-eventmanager/zipball/1940ccf30e058b2fd66f5a9d696f1b5e0027b082\",\n            \"reference\": \"1940ccf30e058b2fd66f5a9d696f1b5e0027b082\",\n            \"shasum\": \"\"\n        },\n        \"require\": {\n            \"laminas/laminas-zendframework-bridge\": \"^1.0\",\n            \"php\": \"^7.3 || ^8.0\"\n        },\n        \"replace\": {\n            \"zendframework/zend-eventmanager\": \"^3.2.1\"\n        },\n        \"require-dev\": {\n            \"container-interop/container-interop\": \"^1.1\",\n            \"laminas/laminas-coding-standard\": \"~1.0.0\",\n            \"laminas/laminas-stdlib\": \"^2.7.3 || ^3.0\",\n            \"phpbench/phpbench\": \"^0.17.1\",\n            \"phpunit/phpunit\": \"^8.5.8\"\n        },\n        \"suggest\": {\n            \"container-interop/container-interop\": \"^1.1, to use the lazy listeners feature\",\n            \"laminas/laminas-stdlib\": \"^2.7.3 || ^3.0, to use the FilterChain feature\"\n        },\n        \"time\": \"2020-08-25T11:10:44+00:00\",\n        \"type\": \"library\",\n        \"extra\": {\n            \"branch-alias\": {\n                \"dev-master\": \"3.3.x-dev\",\n                \"dev-develop\": \"3.4.x-dev\"\n            }\n        },\n        \"installation-source\": \"dist\",\n        \"autoload\": {\n            \"psr-4\": {\n                \"Laminas\\\\EventManager\\\\\": \"src/\"\n            }\n        },\n        \"notification-url\": \"https://packagist.org/downloads/\",\n        \"license\": [\n            \"BSD-3-Clause\"\n        ],\n        \"description\": \"Trigger and listen to events within a PHP application\",\n        \"homepage\": \"https://laminas.dev\",\n        \"keywords\": [\n            \"event\",\n            \"eventmanager\",\n            \"events\",\n            \"laminas\"\n        ],\n        \"funding\": [\n            {\n                \"url\": \"https://funding.communitybridge.org/projects/laminas-project\",\n                \"type\": \"community_bridge\"\n            }\n        ]\n    },\n    {\n        \"name\": \"laminas/laminas-zendframework-bridge\",\n        \"version\": \"1.1.1\",\n        \"version_normalized\": \"1.1.1.0\",\n        \"source\": {\n            \"type\": \"git\",\n            \"url\": \"https://github.com/laminas/laminas-zendframework-bridge.git\",\n            \"reference\": \"6ede70583e101030bcace4dcddd648f760ddf642\"\n        },\n        \"dist\": {\n            \"type\": \"zip\",\n            \"url\": \"https://api.github.com/repos/laminas/laminas-zendframework-bridge/zipball/6ede70583e101030bcace4dcddd648f760ddf642\",\n            \"reference\": \"6ede70583e101030bcace4dcddd648f760ddf642\",\n            \"shasum\": \"\"\n        },\n        \"require\": {\n            \"php\": \"^5.6 || ^7.0 || ^8.0\"\n        },\n        \"require-dev\": {\n            \"phpunit/phpunit\": \"^5.7 || ^6.5 || ^7.5 || ^8.1 || ^9.3\",\n            \"squizlabs/php_codesniffer\": \"^3.5\"\n        },\n        \"time\": \"2020-09-14T14:23:00+00:00\",\n        \"type\": \"library\",\n        \"extra\": {\n            \"laminas\": {\n                \"module\": \"Laminas\\\\ZendFrameworkBridge\"\n            }\n        },\n        \"installation-source\": \"dist\",\n        \"autoload\": {\n            \"files\": [\n                \"src/autoload.php\"\n            ],\n            \"psr-4\": {\n                \"Laminas\\\\ZendFrameworkBridge\\\\\": \"src//\"\n            }\n        },\n        \"notification-url\": \"https://packagist.org/downloads/\",\n        \"license\": [\n            \"BSD-3-Clause\"\n        ],\n        \"description\": \"Alias legacy ZF class names to Laminas Project equivalents.\",\n        \"keywords\": [\n            \"ZendFramework\",\n            \"autoloading\",\n            \"laminas\",\n            \"zf\"\n        ],\n        \"funding\": [\n            {\n                \"url\": \"https://funding.communitybridge.org/projects/laminas-project\",\n                \"type\": \"community_bridge\"\n            }\n        ]\n    },\n    {\n        \"name\": \"league/oauth2-client\",\n        \"version\": \"2.6.0\",\n        \"version_normalized\": \"2.6.0.0\",\n        \"source\": {\n            \"type\": \"git\",\n            \"url\": \"https://github.com/thephpleague/oauth2-client.git\",\n            \"reference\": \"badb01e62383430706433191b82506b6df24ad98\"\n        },\n        \"dist\": {\n            \"type\": \"zip\",\n            \"url\": \"https://api.github.com/repos/thephpleague/oauth2-client/zipball/badb01e62383430706433191b82506b6df24ad98\",\n            \"reference\": \"badb01e62383430706433191b82506b6df24ad98\",\n            \"shasum\": \"\"\n        },\n        \"require\": {\n            \"guzzlehttp/guzzle\": \"^6.0 || ^7.0\",\n            \"paragonie/random_compat\": \"^1 || ^2 || ^9.99\",\n            \"php\": \"^5.6 || ^7.0 || ^8.0\"\n        },\n        \"require-dev\": {\n            \"mockery/mockery\": \"^1.3\",\n            \"php-parallel-lint/php-parallel-lint\": \"^1.2\",\n            \"phpunit/phpunit\": \"^5.7 || ^6.0 || ^9.3\",\n            \"squizlabs/php_codesniffer\": \"^2.3 || ^3.0\"\n        },\n        \"time\": \"2020-10-28T02:03:40+00:00\",\n        \"type\": \"library\",\n        \"extra\": {\n            \"branch-alias\": {\n                \"dev-2.x\": \"2.0.x-dev\"\n            }\n        },\n        \"installation-source\": \"dist\",\n        \"autoload\": {\n            \"psr-4\": {\n                \"League\\\\OAuth2\\\\Client\\\\\": \"src/\"\n            }\n        },\n        \"notification-url\": \"https://packagist.org/downloads/\",\n        \"license\": [\n            \"MIT\"\n        ],\n        \"authors\": [\n            {\n                \"name\": \"Alex Bilbie\",\n                \"email\": \"hello@alexbilbie.com\",\n                \"homepage\": \"http://www.alexbilbie.com\",\n                \"role\": \"Developer\"\n            },\n            {\n                \"name\": \"Woody Gilk\",\n                \"homepage\": \"https://github.com/shadowhand\",\n                \"role\": \"Contributor\"\n            }\n        ],\n        \"description\": \"OAuth 2.0 Client Library\",\n        \"keywords\": [\n            \"Authentication\",\n            \"SSO\",\n            \"authorization\",\n            \"identity\",\n            \"idp\",\n            \"oauth\",\n            \"oauth2\",\n            \"single sign on\"\n        ]\n    },\n    {\n        \"name\": \"monolog/monolog\",\n        \"version\": \"2.1.1\",\n        \"version_normalized\": \"2.1.1.0\",\n        \"source\": {\n            \"type\": \"git\",\n            \"url\": \"https://github.com/Seldaek/monolog.git\",\n            \"reference\": \"f9eee5cec93dfb313a38b6b288741e84e53f02d5\"\n        },\n        \"dist\": {\n            \"type\": \"zip\",\n            \"url\": \"https://api.github.com/repos/Seldaek/monolog/zipball/f9eee5cec93dfb313a38b6b288741e84e53f02d5\",\n            \"reference\": \"f9eee5cec93dfb313a38b6b288741e84e53f02d5\",\n            \"shasum\": \"\"\n        },\n        \"require\": {\n            \"php\": \">=7.2\",\n            \"psr/log\": \"^1.0.1\"\n        },\n        \"provide\": {\n            \"psr/log-implementation\": \"1.0.0\"\n        },\n        \"require-dev\": {\n            \"aws/aws-sdk-php\": \"^2.4.9 || ^3.0\",\n            \"doctrine/couchdb\": \"~1.0@dev\",\n            \"elasticsearch/elasticsearch\": \"^6.0\",\n            \"graylog2/gelf-php\": \"^1.4.2\",\n            \"php-amqplib/php-amqplib\": \"~2.4\",\n            \"php-console/php-console\": \"^3.1.3\",\n            \"php-parallel-lint/php-parallel-lint\": \"^1.0\",\n            \"phpspec/prophecy\": \"^1.6.1\",\n            \"phpunit/phpunit\": \"^8.5\",\n            \"predis/predis\": \"^1.1\",\n            \"rollbar/rollbar\": \"^1.3\",\n            \"ruflin/elastica\": \">=0.90 <3.0\",\n            \"swiftmailer/swiftmailer\": \"^5.3|^6.0\"\n        },\n        \"suggest\": {\n            \"aws/aws-sdk-php\": \"Allow sending log messages to AWS services like DynamoDB\",\n            \"doctrine/couchdb\": \"Allow sending log messages to a CouchDB server\",\n            \"elasticsearch/elasticsearch\": \"Allow sending log messages to an Elasticsearch server via official client\",\n            \"ext-amqp\": \"Allow sending log messages to an AMQP server (1.0+ required)\",\n            \"ext-mbstring\": \"Allow to work properly with unicode symbols\",\n            \"ext-mongodb\": \"Allow sending log messages to a MongoDB server (via driver)\",\n            \"graylog2/gelf-php\": \"Allow sending log messages to a GrayLog2 server\",\n            \"mongodb/mongodb\": \"Allow sending log messages to a MongoDB server (via library)\",\n            \"php-amqplib/php-amqplib\": \"Allow sending log messages to an AMQP server using php-amqplib\",\n            \"php-console/php-console\": \"Allow sending log messages to Google Chrome\",\n            \"rollbar/rollbar\": \"Allow sending log messages to Rollbar\",\n            \"ruflin/elastica\": \"Allow sending log messages to an Elastic Search server\"\n        },\n        \"time\": \"2020-07-23T08:41:23+00:00\",\n        \"type\": \"library\",\n        \"extra\": {\n            \"branch-alias\": {\n                \"dev-master\": \"2.x-dev\"\n            }\n        },\n        \"installation-source\": \"dist\",\n        \"autoload\": {\n            \"psr-4\": {\n                \"Monolog\\\\\": \"src/Monolog\"\n            }\n        },\n        \"notification-url\": \"https://packagist.org/downloads/\",\n        \"license\": [\n            \"MIT\"\n        ],\n        \"authors\": [\n            {\n                \"name\": \"Jordi Boggiano\",\n                \"email\": \"j.boggiano@seld.be\",\n                \"homepage\": \"http://seld.be\"\n            }\n        ],\n        \"description\": \"Sends your logs to files, sockets, inboxes, databases and various web services\",\n        \"homepage\": \"http://github.com/Seldaek/monolog\",\n        \"keywords\": [\n            \"log\",\n            \"logging\",\n            \"psr-3\"\n        ],\n        \"funding\": [\n            {\n                \"url\": \"https://github.com/Seldaek\",\n                \"type\": \"github\"\n            },\n            {\n                \"url\": \"https://tidelift.com/funding/github/packagist/monolog/monolog\",\n                \"type\": \"tidelift\"\n            }\n        ]\n    },\n    {\n        \"name\": \"nikic/php-parser\",\n        \"version\": \"v4.10.2\",\n        \"version_normalized\": \"4.10.2.0\",\n        \"source\": {\n            \"type\": \"git\",\n            \"url\": \"https://github.com/nikic/PHP-Parser.git\",\n            \"reference\": \"658f1be311a230e0907f5dfe0213742aff0596de\"\n        },\n        \"dist\": {\n            \"type\": \"zip\",\n            \"url\": \"https://api.github.com/repos/nikic/PHP-Parser/zipball/658f1be311a230e0907f5dfe0213742aff0596de\",\n            \"reference\": \"658f1be311a230e0907f5dfe0213742aff0596de\",\n            \"shasum\": \"\"\n        },\n        \"require\": {\n            \"ext-tokenizer\": \"*\",\n            \"php\": \">=7.0\"\n        },\n        \"require-dev\": {\n            \"ircmaxell/php-yacc\": \"^0.0.7\",\n            \"phpunit/phpunit\": \"^6.5 || ^7.0 || ^8.0 || ^9.0\"\n        },\n        \"time\": \"2020-09-26T10:30:38+00:00\",\n        \"bin\": [\n            \"bin/php-parse\"\n        ],\n        \"type\": \"library\",\n        \"extra\": {\n            \"branch-alias\": {\n                \"dev-master\": \"4.9-dev\"\n            }\n        },\n        \"installation-source\": \"dist\",\n        \"autoload\": {\n            \"psr-4\": {\n                \"PhpParser\\\\\": \"lib/PhpParser\"\n            }\n        },\n        \"notification-url\": \"https://packagist.org/downloads/\",\n        \"license\": [\n            \"BSD-3-Clause\"\n        ],\n        \"authors\": [\n            {\n                \"name\": \"Nikita Popov\"\n            }\n        ],\n        \"description\": \"A PHP parser written in PHP\",\n        \"keywords\": [\n            \"parser\",\n            \"php\"\n        ]\n    },\n    {\n        \"name\": \"ocramius/proxy-manager\",\n        \"version\": \"2.8.0\",\n        \"version_normalized\": \"2.8.0.0\",\n        \"source\": {\n            \"type\": \"git\",\n            \"url\": \"https://github.com/Ocramius/ProxyManager.git\",\n            \"reference\": \"ac1dd414fd114cfc0da9930e0ab46063c2f5e62a\"\n        },\n        \"dist\": {\n            \"type\": \"zip\",\n            \"url\": \"https://api.github.com/repos/Ocramius/ProxyManager/zipball/ac1dd414fd114cfc0da9930e0ab46063c2f5e62a\",\n            \"reference\": \"ac1dd414fd114cfc0da9930e0ab46063c2f5e62a\",\n            \"shasum\": \"\"\n        },\n        \"require\": {\n            \"laminas/laminas-code\": \"^3.4.1\",\n            \"ocramius/package-versions\": \"^1.8.0\",\n            \"php\": \"~7.4.1\",\n            \"webimpress/safe-writer\": \"^2.0.1\"\n        },\n        \"conflict\": {\n            \"doctrine/annotations\": \"<1.6.1\",\n            \"laminas/laminas-stdlib\": \"<3.2.1\",\n            \"zendframework/zend-stdlib\": \"<3.2.1\"\n        },\n        \"require-dev\": {\n            \"doctrine/coding-standard\": \"^6.0.0\",\n            \"ext-phar\": \"*\",\n            \"infection/infection\": \"^0.16.2\",\n            \"nikic/php-parser\": \"^4.4.0\",\n            \"phpbench/phpbench\": \"^0.17.0\",\n            \"phpunit/phpunit\": \"^9.1.1\",\n            \"slevomat/coding-standard\": \"^5.0.4\",\n            \"squizlabs/php_codesniffer\": \"^3.5.4\",\n            \"vimeo/psalm\": \"^3.11.1\"\n        },\n        \"suggest\": {\n            \"laminas/laminas-json\": \"To have the JsonRpc adapter (Remote Object feature)\",\n            \"laminas/laminas-soap\": \"To have the Soap adapter (Remote Object feature)\",\n            \"laminas/laminas-xmlrpc\": \"To have the XmlRpc adapter (Remote Object feature)\",\n            \"ocramius/generated-hydrator\": \"To have very fast object to array to object conversion for ghost objects\"\n        },\n        \"time\": \"2020-04-13T14:42:16+00:00\",\n        \"type\": \"library\",\n        \"extra\": {\n            \"branch-alias\": {\n                \"dev-master\": \"3.0.x-dev\"\n            }\n        },\n        \"installation-source\": \"dist\",\n        \"autoload\": {\n            \"psr-4\": {\n                \"ProxyManager\\\\\": \"src/ProxyManager\"\n            }\n        },\n        \"notification-url\": \"https://packagist.org/downloads/\",\n        \"license\": [\n            \"MIT\"\n        ],\n        \"authors\": [\n            {\n                \"name\": \"Marco Pivetta\",\n                \"email\": \"ocramius@gmail.com\",\n                \"homepage\": \"http://ocramius.github.io/\"\n            }\n        ],\n        \"description\": \"A library providing utilities to generate, instantiate and generally operate with Object Proxies\",\n        \"homepage\": \"https://github.com/Ocramius/ProxyManager\",\n        \"keywords\": [\n            \"aop\",\n            \"lazy loading\",\n            \"proxy\",\n            \"proxy pattern\",\n            \"service proxies\"\n        ],\n        \"funding\": [\n            {\n                \"url\": \"https://github.com/Ocramius\",\n                \"type\": \"github\"\n            },\n            {\n                \"url\": \"https://tidelift.com/funding/github/packagist/ocramius/proxy-manager\",\n                \"type\": \"tidelift\"\n            }\n        ]\n    },\n    {\n        \"name\": \"phpdocumentor/reflection-common\",\n        \"version\": \"2.2.0\",\n        \"version_normalized\": \"2.2.0.0\",\n        \"source\": {\n            \"type\": \"git\",\n            \"url\": \"https://github.com/phpDocumentor/ReflectionCommon.git\",\n            \"reference\": \"1d01c49d4ed62f25aa84a747ad35d5a16924662b\"\n        },\n        \"dist\": {\n            \"type\": \"zip\",\n            \"url\": \"https://api.github.com/repos/phpDocumentor/ReflectionCommon/zipball/1d01c49d4ed62f25aa84a747ad35d5a16924662b\",\n            \"reference\": \"1d01c49d4ed62f25aa84a747ad35d5a16924662b\",\n            \"shasum\": \"\"\n        },\n        \"require\": {\n            \"php\": \"^7.2 || ^8.0\"\n        },\n        \"time\": \"2020-06-27T09:03:43+00:00\",\n        \"type\": \"library\",\n        \"extra\": {\n            \"branch-alias\": {\n                \"dev-2.x\": \"2.x-dev\"\n            }\n        },\n        \"installation-source\": \"dist\",\n        \"autoload\": {\n            \"psr-4\": {\n                \"phpDocumentor\\\\Reflection\\\\\": \"src/\"\n            }\n        },\n        \"notification-url\": \"https://packagist.org/downloads/\",\n        \"license\": [\n            \"MIT\"\n        ],\n        \"authors\": [\n            {\n                \"name\": \"Jaap van Otterdijk\",\n                \"email\": \"opensource@ijaap.nl\"\n            }\n        ],\n        \"description\": \"Common reflection classes used by phpdocumentor to reflect the code structure\",\n        \"homepage\": \"http://www.phpdoc.org\",\n        \"keywords\": [\n            \"FQSEN\",\n            \"phpDocumentor\",\n            \"phpdoc\",\n            \"reflection\",\n            \"static analysis\"\n        ]\n    },\n    {\n        \"name\": \"phpdocumentor/reflection-docblock\",\n        \"version\": \"5.2.2\",\n        \"version_normalized\": \"5.2.2.0\",\n        \"source\": {\n            \"type\": \"git\",\n            \"url\": \"https://github.com/phpDocumentor/ReflectionDocBlock.git\",\n            \"reference\": \"069a785b2141f5bcf49f3e353548dc1cce6df556\"\n        },\n        \"dist\": {\n            \"type\": \"zip\",\n            \"url\": \"https://api.github.com/repos/phpDocumentor/ReflectionDocBlock/zipball/069a785b2141f5bcf49f3e353548dc1cce6df556\",\n            \"reference\": \"069a785b2141f5bcf49f3e353548dc1cce6df556\",\n            \"shasum\": \"\"\n        },\n        \"require\": {\n            \"ext-filter\": \"*\",\n            \"php\": \"^7.2 || ^8.0\",\n            \"phpdocumentor/reflection-common\": \"^2.2\",\n            \"phpdocumentor/type-resolver\": \"^1.3\",\n            \"webmozart/assert\": \"^1.9.1\"\n        },\n        \"require-dev\": {\n            \"mockery/mockery\": \"~1.3.2\"\n        },\n        \"time\": \"2020-09-03T19:13:55+00:00\",\n        \"type\": \"library\",\n        \"extra\": {\n            \"branch-alias\": {\n                \"dev-master\": \"5.x-dev\"\n            }\n        },\n        \"installation-source\": \"dist\",\n        \"autoload\": {\n            \"psr-4\": {\n                \"phpDocumentor\\\\Reflection\\\\\": \"src\"\n            }\n        },\n        \"notification-url\": \"https://packagist.org/downloads/\",\n        \"license\": [\n            \"MIT\"\n        ],\n        \"authors\": [\n            {\n                \"name\": \"Mike van Riel\",\n                \"email\": \"me@mikevanriel.com\"\n            },\n            {\n                \"name\": \"Jaap van Otterdijk\",\n                \"email\": \"account@ijaap.nl\"\n            }\n        ],\n        \"description\": \"With this component, a library can provide support for annotations via DocBlocks or otherwise retrieve information that is embedded in a DocBlock.\"\n    },\n    {\n        \"name\": \"phpdocumentor/type-resolver\",\n        \"version\": \"1.4.0\",\n        \"version_normalized\": \"1.4.0.0\",\n        \"source\": {\n            \"type\": \"git\",\n            \"url\": \"https://github.com/phpDocumentor/TypeResolver.git\",\n            \"reference\": \"6a467b8989322d92aa1c8bf2bebcc6e5c2ba55c0\"\n        },\n        \"dist\": {\n            \"type\": \"zip\",\n            \"url\": \"https://api.github.com/repos/phpDocumentor/TypeResolver/zipball/6a467b8989322d92aa1c8bf2bebcc6e5c2ba55c0\",\n            \"reference\": \"6a467b8989322d92aa1c8bf2bebcc6e5c2ba55c0\",\n            \"shasum\": \"\"\n        },\n        \"require\": {\n            \"php\": \"^7.2 || ^8.0\",\n            \"phpdocumentor/reflection-common\": \"^2.0\"\n        },\n        \"require-dev\": {\n            \"ext-tokenizer\": \"*\"\n        },\n        \"time\": \"2020-09-17T18:55:26+00:00\",\n        \"type\": \"library\",\n        \"extra\": {\n            \"branch-alias\": {\n                \"dev-1.x\": \"1.x-dev\"\n            }\n        },\n        \"installation-source\": \"dist\",\n        \"autoload\": {\n            \"psr-4\": {\n                \"phpDocumentor\\\\Reflection\\\\\": \"src\"\n            }\n        },\n        \"notification-url\": \"https://packagist.org/downloads/\",\n        \"license\": [\n            \"MIT\"\n        ],\n        \"authors\": [\n            {\n                \"name\": \"Mike van Riel\",\n                \"email\": \"me@mikevanriel.com\"\n            }\n        ],\n        \"description\": \"A PSR-5 based resolver of Class names, Types and Structural Element Names\"\n    },\n    {\n        \"name\": \"phpseclib/phpseclib\",\n        \"version\": \"2.0.29\",\n        \"version_normalized\": \"2.0.29.0\",\n        \"source\": {\n            \"type\": \"git\",\n            \"url\": \"https://github.com/phpseclib/phpseclib.git\",\n            \"reference\": \"497856a8d997f640b4a516062f84228a772a48a8\"\n        },\n        \"dist\": {\n            \"type\": \"zip\",\n            \"url\": \"https://api.github.com/repos/phpseclib/phpseclib/zipball/497856a8d997f640b4a516062f84228a772a48a8\",\n            \"reference\": \"497856a8d997f640b4a516062f84228a772a48a8\",\n            \"shasum\": \"\"\n        },\n        \"require\": {\n            \"php\": \">=5.3.3\"\n        },\n        \"require-dev\": {\n            \"phing/phing\": \"~2.7\",\n            \"phpunit/phpunit\": \"^4.8.35|^5.7|^6.0\",\n            \"squizlabs/php_codesniffer\": \"~2.0\"\n        },\n        \"suggest\": {\n            \"ext-gmp\": \"Install the GMP (GNU Multiple Precision) extension in order to speed up arbitrary precision integer arithmetic operations.\",\n            \"ext-libsodium\": \"SSH2/SFTP can make use of some algorithms provided by the libsodium-php extension.\",\n            \"ext-mcrypt\": \"Install the Mcrypt extension in order to speed up a few other cryptographic operations.\",\n            \"ext-openssl\": \"Install the OpenSSL extension in order to speed up a wide variety of cryptographic operations.\"\n        },\n        \"time\": \"2020-09-08T04:24:43+00:00\",\n        \"type\": \"library\",\n        \"installation-source\": \"dist\",\n        \"autoload\": {\n            \"files\": [\n                \"phpseclib/bootstrap.php\"\n            ],\n            \"psr-4\": {\n                \"phpseclib\\\\\": \"phpseclib/\"\n            }\n        },\n        \"notification-url\": \"https://packagist.org/downloads/\",\n        \"license\": [\n            \"MIT\"\n        ],\n        \"authors\": [\n            {\n                \"name\": \"Jim Wigginton\",\n                \"email\": \"terrafrost@php.net\",\n                \"role\": \"Lead Developer\"\n            },\n            {\n                \"name\": \"Patrick Monnerat\",\n                \"email\": \"pm@datasphere.ch\",\n                \"role\": \"Developer\"\n            },\n            {\n                \"name\": \"Andreas Fischer\",\n                \"email\": \"bantu@phpbb.com\",\n                \"role\": \"Developer\"\n            },\n            {\n                \"name\": \"Hans-Jürgen Petrich\",\n                \"email\": \"petrich@tronic-media.com\",\n                \"role\": \"Developer\"\n            },\n            {\n                \"name\": \"Graham Campbell\",\n                \"email\": \"graham@alt-three.com\",\n                \"role\": \"Developer\"\n            }\n        ],\n        \"description\": \"PHP Secure Communications Library - Pure-PHP implementations of RSA, AES, SSH2, SFTP, X.509 etc.\",\n        \"homepage\": \"http://phpseclib.sourceforge.net\",\n        \"keywords\": [\n            \"BigInteger\",\n            \"aes\",\n            \"asn.1\",\n            \"asn1\",\n            \"blowfish\",\n            \"crypto\",\n            \"cryptography\",\n            \"encryption\",\n            \"rsa\",\n            \"security\",\n            \"sftp\",\n            \"signature\",\n            \"signing\",\n            \"ssh\",\n            \"twofish\",\n            \"x.509\",\n            \"x509\"\n        ],\n        \"funding\": [\n            {\n                \"url\": \"https://github.com/terrafrost\",\n                \"type\": \"github\"\n            },\n            {\n                \"url\": \"https://www.patreon.com/phpseclib\",\n                \"type\": \"patreon\"\n            },\n            {\n                \"url\": \"https://tidelift.com/funding/github/packagist/phpseclib/phpseclib\",\n                \"type\": \"tidelift\"\n            }\n        ]\n    },\n    {\n        \"name\": \"psr/cache\",\n        \"version\": \"1.0.1\",\n        \"version_normalized\": \"1.0.1.0\",\n        \"source\": {\n            \"type\": \"git\",\n            \"url\": \"https://github.com/php-fig/cache.git\",\n            \"reference\": \"d11b50ad223250cf17b86e38383413f5a6764bf8\"\n        },\n        \"dist\": {\n            \"type\": \"zip\",\n            \"url\": \"https://api.github.com/repos/php-fig/cache/zipball/d11b50ad223250cf17b86e38383413f5a6764bf8\",\n            \"reference\": \"d11b50ad223250cf17b86e38383413f5a6764bf8\",\n            \"shasum\": \"\"\n        },\n        \"require\": {\n            \"php\": \">=5.3.0\"\n        },\n        \"time\": \"2016-08-06T20:24:11+00:00\",\n        \"type\": \"library\",\n        \"extra\": {\n            \"branch-alias\": {\n                \"dev-master\": \"1.0.x-dev\"\n            }\n        },\n        \"installation-source\": \"dist\",\n        \"autoload\": {\n            \"psr-4\": {\n                \"Psr\\\\Cache\\\\\": \"src/\"\n            }\n        },\n        \"notification-url\": \"https://packagist.org/downloads/\",\n        \"license\": [\n            \"MIT\"\n        ],\n        \"authors\": [\n            {\n                \"name\": \"PHP-FIG\",\n                \"homepage\": \"http://www.php-fig.org/\"\n            }\n        ],\n        \"description\": \"Common interface for caching libraries\",\n        \"keywords\": [\n            \"cache\",\n            \"psr\",\n            \"psr-6\"\n        ]\n    },\n    {\n        \"name\": \"psr/container\",\n        \"version\": \"1.0.0\",\n        \"version_normalized\": \"1.0.0.0\",\n        \"source\": {\n            \"type\": \"git\",\n            \"url\": \"https://github.com/php-fig/container.git\",\n            \"reference\": \"b7ce3b176482dbbc1245ebf52b181af44c2cf55f\"\n        },\n        \"dist\": {\n            \"type\": \"zip\",\n            \"url\": \"https://api.github.com/repos/php-fig/container/zipball/b7ce3b176482dbbc1245ebf52b181af44c2cf55f\",\n            \"reference\": \"b7ce3b176482dbbc1245ebf52b181af44c2cf55f\",\n            \"shasum\": \"\"\n        },\n        \"require\": {\n            \"php\": \">=5.3.0\"\n        },\n        \"time\": \"2017-02-14T16:28:37+00:00\",\n        \"type\": \"library\",\n        \"extra\": {\n            \"branch-alias\": {\n                \"dev-master\": \"1.0.x-dev\"\n            }\n        },\n        \"installation-source\": \"dist\",\n        \"autoload\": {\n            \"psr-4\": {\n                \"Psr\\\\Container\\\\\": \"src/\"\n            }\n        },\n        \"notification-url\": \"https://packagist.org/downloads/\",\n        \"license\": [\n            \"MIT\"\n        ],\n        \"authors\": [\n            {\n                \"name\": \"PHP-FIG\",\n                \"homepage\": \"http://www.php-fig.org/\"\n            }\n        ],\n        \"description\": \"Common Container Interface (PHP FIG PSR-11)\",\n        \"homepage\": \"https://github.com/php-fig/container\",\n        \"keywords\": [\n            \"PSR-11\",\n            \"container\",\n            \"container-interface\",\n            \"container-interop\",\n            \"psr\"\n        ]\n    },\n    {\n        \"name\": \"psr/event-dispatcher\",\n        \"version\": \"1.0.0\",\n        \"version_normalized\": \"1.0.0.0\",\n        \"source\": {\n            \"type\": \"git\",\n            \"url\": \"https://github.com/php-fig/event-dispatcher.git\",\n            \"reference\": \"dbefd12671e8a14ec7f180cab83036ed26714bb0\"\n        },\n        \"dist\": {\n            \"type\": \"zip\",\n            \"url\": \"https://api.github.com/repos/php-fig/event-dispatcher/zipball/dbefd12671e8a14ec7f180cab83036ed26714bb0\",\n            \"reference\": \"dbefd12671e8a14ec7f180cab83036ed26714bb0\",\n            \"shasum\": \"\"\n        },\n        \"require\": {\n            \"php\": \">=7.2.0\"\n        },\n        \"time\": \"2019-01-08T18:20:26+00:00\",\n        \"type\": \"library\",\n        \"extra\": {\n            \"branch-alias\": {\n                \"dev-master\": \"1.0.x-dev\"\n            }\n        },\n        \"installation-source\": \"dist\",\n        \"autoload\": {\n            \"psr-4\": {\n                \"Psr\\\\EventDispatcher\\\\\": \"src/\"\n            }\n        },\n        \"notification-url\": \"https://packagist.org/downloads/\",\n        \"license\": [\n            \"MIT\"\n        ],\n        \"authors\": [\n            {\n                \"name\": \"PHP-FIG\",\n                \"homepage\": \"http://www.php-fig.org/\"\n            }\n        ],\n        \"description\": \"Standard interfaces for event handling.\",\n        \"keywords\": [\n            \"events\",\n            \"psr\",\n            \"psr-14\"\n        ]\n    },\n    {\n        \"name\": \"psr/http-client\",\n        \"version\": \"1.0.1\",\n        \"version_normalized\": \"1.0.1.0\",\n        \"source\": {\n            \"type\": \"git\",\n            \"url\": \"https://github.com/php-fig/http-client.git\",\n            \"reference\": \"2dfb5f6c5eff0e91e20e913f8c5452ed95b86621\"\n        },\n        \"dist\": {\n            \"type\": \"zip\",\n            \"url\": \"https://api.github.com/repos/php-fig/http-client/zipball/2dfb5f6c5eff0e91e20e913f8c5452ed95b86621\",\n            \"reference\": \"2dfb5f6c5eff0e91e20e913f8c5452ed95b86621\",\n            \"shasum\": \"\"\n        },\n        \"require\": {\n            \"php\": \"^7.0 || ^8.0\",\n            \"psr/http-message\": \"^1.0\"\n        },\n        \"time\": \"2020-06-29T06:28:15+00:00\",\n        \"type\": \"library\",\n        \"extra\": {\n            \"branch-alias\": {\n                \"dev-master\": \"1.0.x-dev\"\n            }\n        },\n        \"installation-source\": \"dist\",\n        \"autoload\": {\n            \"psr-4\": {\n                \"Psr\\\\Http\\\\Client\\\\\": \"src/\"\n            }\n        },\n        \"notification-url\": \"https://packagist.org/downloads/\",\n        \"license\": [\n            \"MIT\"\n        ],\n        \"authors\": [\n            {\n                \"name\": \"PHP-FIG\",\n                \"homepage\": \"http://www.php-fig.org/\"\n            }\n        ],\n        \"description\": \"Common interface for HTTP clients\",\n        \"homepage\": \"https://github.com/php-fig/http-client\",\n        \"keywords\": [\n            \"http\",\n            \"http-client\",\n            \"psr\",\n            \"psr-18\"\n        ]\n    },\n    {\n        \"name\": \"psr/http-message\",\n        \"version\": \"1.0.1\",\n        \"version_normalized\": \"1.0.1.0\",\n        \"source\": {\n            \"type\": \"git\",\n            \"url\": \"https://github.com/php-fig/http-message.git\",\n            \"reference\": \"f6561bf28d520154e4b0ec72be95418abe6d9363\"\n        },\n        \"dist\": {\n            \"type\": \"zip\",\n            \"url\": \"https://api.github.com/repos/php-fig/http-message/zipball/f6561bf28d520154e4b0ec72be95418abe6d9363\",\n            \"reference\": \"f6561bf28d520154e4b0ec72be95418abe6d9363\",\n            \"shasum\": \"\"\n        },\n        \"require\": {\n            \"php\": \">=5.3.0\"\n        },\n        \"time\": \"2016-08-06T14:39:51+00:00\",\n        \"type\": \"library\",\n        \"extra\": {\n            \"branch-alias\": {\n                \"dev-master\": \"1.0.x-dev\"\n            }\n        },\n        \"installation-source\": \"dist\",\n        \"autoload\": {\n            \"psr-4\": {\n                \"Psr\\\\Http\\\\Message\\\\\": \"src/\"\n            }\n        },\n        \"notification-url\": \"https://packagist.org/downloads/\",\n        \"license\": [\n            \"MIT\"\n        ],\n        \"authors\": [\n            {\n                \"name\": \"PHP-FIG\",\n                \"homepage\": \"http://www.php-fig.org/\"\n            }\n        ],\n        \"description\": \"Common interface for HTTP messages\",\n        \"homepage\": \"https://github.com/php-fig/http-message\",\n        \"keywords\": [\n            \"http\",\n            \"http-message\",\n            \"psr\",\n            \"psr-7\",\n            \"request\",\n            \"response\"\n        ]\n    },\n    {\n        \"name\": \"psr/link\",\n        \"version\": \"1.0.0\",\n        \"version_normalized\": \"1.0.0.0\",\n        \"source\": {\n            \"type\": \"git\",\n            \"url\": \"https://github.com/php-fig/link.git\",\n            \"reference\": \"eea8e8662d5cd3ae4517c9b864493f59fca95562\"\n        },\n        \"dist\": {\n            \"type\": \"zip\",\n            \"url\": \"https://api.github.com/repos/php-fig/link/zipball/eea8e8662d5cd3ae4517c9b864493f59fca95562\",\n            \"reference\": \"eea8e8662d5cd3ae4517c9b864493f59fca95562\",\n            \"shasum\": \"\"\n        },\n        \"require\": {\n            \"php\": \">=5.3.0\"\n        },\n        \"time\": \"2016-10-28T16:06:13+00:00\",\n        \"type\": \"library\",\n        \"extra\": {\n            \"branch-alias\": {\n                \"dev-master\": \"1.0.x-dev\"\n            }\n        },\n        \"installation-source\": \"dist\",\n        \"autoload\": {\n            \"psr-4\": {\n                \"Psr\\\\Link\\\\\": \"src/\"\n            }\n        },\n        \"notification-url\": \"https://packagist.org/downloads/\",\n        \"license\": [\n            \"MIT\"\n        ],\n        \"authors\": [\n            {\n                \"name\": \"PHP-FIG\",\n                \"homepage\": \"http://www.php-fig.org/\"\n            }\n        ],\n        \"description\": \"Common interfaces for HTTP links\",\n        \"keywords\": [\n            \"http\",\n            \"http-link\",\n            \"link\",\n            \"psr\",\n            \"psr-13\",\n            \"rest\"\n        ]\n    },\n    {\n        \"name\": \"psr/log\",\n        \"version\": \"1.1.3\",\n        \"version_normalized\": \"1.1.3.0\",\n        \"source\": {\n            \"type\": \"git\",\n            \"url\": \"https://github.com/php-fig/log.git\",\n            \"reference\": \"0f73288fd15629204f9d42b7055f72dacbe811fc\"\n        },\n        \"dist\": {\n            \"type\": \"zip\",\n            \"url\": \"https://api.github.com/repos/php-fig/log/zipball/0f73288fd15629204f9d42b7055f72dacbe811fc\",\n            \"reference\": \"0f73288fd15629204f9d42b7055f72dacbe811fc\",\n            \"shasum\": \"\"\n        },\n        \"require\": {\n            \"php\": \">=5.3.0\"\n        },\n        \"time\": \"2020-03-23T09:12:05+00:00\",\n        \"type\": \"library\",\n        \"extra\": {\n            \"branch-alias\": {\n                \"dev-master\": \"1.1.x-dev\"\n            }\n        },\n        \"installation-source\": \"dist\",\n        \"autoload\": {\n            \"psr-4\": {\n                \"Psr\\\\Log\\\\\": \"Psr/Log/\"\n            }\n        },\n        \"notification-url\": \"https://packagist.org/downloads/\",\n        \"license\": [\n            \"MIT\"\n        ],\n        \"authors\": [\n            {\n                \"name\": \"PHP-FIG\",\n                \"homepage\": \"http://www.php-fig.org/\"\n            }\n        ],\n        \"description\": \"Common interface for logging libraries\",\n        \"homepage\": \"https://github.com/php-fig/log\",\n        \"keywords\": [\n            \"log\",\n            \"psr\",\n            \"psr-3\"\n        ]\n    },\n    {\n        \"name\": \"ralouphie/getallheaders\",\n        \"version\": \"3.0.3\",\n        \"version_normalized\": \"3.0.3.0\",\n        \"source\": {\n            \"type\": \"git\",\n            \"url\": \"https://github.com/ralouphie/getallheaders.git\",\n            \"reference\": \"120b605dfeb996808c31b6477290a714d356e822\"\n        },\n        \"dist\": {\n            \"type\": \"zip\",\n            \"url\": \"https://api.github.com/repos/ralouphie/getallheaders/zipball/120b605dfeb996808c31b6477290a714d356e822\",\n            \"reference\": \"120b605dfeb996808c31b6477290a714d356e822\",\n            \"shasum\": \"\"\n        },\n        \"require\": {\n            \"php\": \">=5.6\"\n        },\n        \"require-dev\": {\n            \"php-coveralls/php-coveralls\": \"^2.1\",\n            \"phpunit/phpunit\": \"^5 || ^6.5\"\n        },\n        \"time\": \"2019-03-08T08:55:37+00:00\",\n        \"type\": \"library\",\n        \"installation-source\": \"dist\",\n        \"autoload\": {\n            \"files\": [\n                \"src/getallheaders.php\"\n            ]\n        },\n        \"notification-url\": \"https://packagist.org/downloads/\",\n        \"license\": [\n            \"MIT\"\n        ],\n        \"authors\": [\n            {\n                \"name\": \"Ralph Khattar\",\n                \"email\": \"ralph.khattar@gmail.com\"\n            }\n        ],\n        \"description\": \"A polyfill for getallheaders.\"\n    },\n    {\n        \"name\": \"sensio/framework-extra-bundle\",\n        \"version\": \"v5.6.1\",\n        \"version_normalized\": \"5.6.1.0\",\n        \"source\": {\n            \"type\": \"git\",\n            \"url\": \"https://github.com/sensiolabs/SensioFrameworkExtraBundle.git\",\n            \"reference\": \"430d14c01836b77c28092883d195a43ce413ee32\"\n        },\n        \"dist\": {\n            \"type\": \"zip\",\n            \"url\": \"https://api.github.com/repos/sensiolabs/SensioFrameworkExtraBundle/zipball/430d14c01836b77c28092883d195a43ce413ee32\",\n            \"reference\": \"430d14c01836b77c28092883d195a43ce413ee32\",\n            \"shasum\": \"\"\n        },\n        \"require\": {\n            \"doctrine/annotations\": \"^1.0\",\n            \"php\": \">=7.2.5\",\n            \"symfony/config\": \"^4.4|^5.0\",\n            \"symfony/dependency-injection\": \"^4.4|^5.0\",\n            \"symfony/framework-bundle\": \"^4.4|^5.0\",\n            \"symfony/http-kernel\": \"^4.4|^5.0\"\n        },\n        \"conflict\": {\n            \"doctrine/doctrine-cache-bundle\": \"<1.3.1\",\n            \"doctrine/persistence\": \"<1.3\"\n        },\n        \"require-dev\": {\n            \"doctrine/dbal\": \"^2.10|^3.0\",\n            \"doctrine/doctrine-bundle\": \"^1.11|^2.0\",\n            \"doctrine/orm\": \"^2.5\",\n            \"nyholm/psr7\": \"^1.1\",\n            \"symfony/browser-kit\": \"^4.4|^5.0\",\n            \"symfony/doctrine-bridge\": \"^4.4|^5.0\",\n            \"symfony/dom-crawler\": \"^4.4|^5.0\",\n            \"symfony/expression-language\": \"^4.4|^5.0\",\n            \"symfony/finder\": \"^4.4|^5.0\",\n            \"symfony/monolog-bridge\": \"^4.0|^5.0\",\n            \"symfony/monolog-bundle\": \"^3.2\",\n            \"symfony/phpunit-bridge\": \"^4.4.9|^5.0.9\",\n            \"symfony/psr-http-message-bridge\": \"^1.1\",\n            \"symfony/security-bundle\": \"^4.4|^5.0\",\n            \"symfony/twig-bundle\": \"^4.4|^5.0\",\n            \"symfony/yaml\": \"^4.4|^5.0\",\n            \"twig/twig\": \"^1.34|^2.4|^3.0\"\n        },\n        \"time\": \"2020-08-25T19:10:18+00:00\",\n        \"type\": \"symfony-bundle\",\n        \"extra\": {\n            \"branch-alias\": {\n                \"dev-master\": \"5.6.x-dev\"\n            }\n        },\n        \"installation-source\": \"dist\",\n        \"autoload\": {\n            \"psr-4\": {\n                \"Sensio\\\\Bundle\\\\FrameworkExtraBundle\\\\\": \"src/\"\n            },\n            \"exclude-from-classmap\": [\n                \"/tests/\"\n            ]\n        },\n        \"notification-url\": \"https://packagist.org/downloads/\",\n        \"license\": [\n            \"MIT\"\n        ],\n        \"authors\": [\n            {\n                \"name\": \"Fabien Potencier\",\n                \"email\": \"fabien@symfony.com\"\n            }\n        ],\n        \"description\": \"This bundle provides a way to configure your controllers with annotations\",\n        \"keywords\": [\n            \"annotations\",\n            \"controllers\"\n        ]\n    },\n    {\n        \"name\": \"swiftmailer/swiftmailer\",\n        \"version\": \"v6.2.3\",\n        \"version_normalized\": \"6.2.3.0\",\n        \"source\": {\n            \"type\": \"git\",\n            \"url\": \"https://github.com/swiftmailer/swiftmailer.git\",\n            \"reference\": \"149cfdf118b169f7840bbe3ef0d4bc795d1780c9\"\n        },\n        \"dist\": {\n            \"type\": \"zip\",\n            \"url\": \"https://api.github.com/repos/swiftmailer/swiftmailer/zipball/149cfdf118b169f7840bbe3ef0d4bc795d1780c9\",\n            \"reference\": \"149cfdf118b169f7840bbe3ef0d4bc795d1780c9\",\n            \"shasum\": \"\"\n        },\n        \"require\": {\n            \"egulias/email-validator\": \"~2.0\",\n            \"php\": \">=7.0.0\",\n            \"symfony/polyfill-iconv\": \"^1.0\",\n            \"symfony/polyfill-intl-idn\": \"^1.10\",\n            \"symfony/polyfill-mbstring\": \"^1.0\"\n        },\n        \"require-dev\": {\n            \"mockery/mockery\": \"~0.9.1\",\n            \"symfony/phpunit-bridge\": \"^3.4.19|^4.1.8\"\n        },\n        \"suggest\": {\n            \"ext-intl\": \"Needed to support internationalized email addresses\",\n            \"true/punycode\": \"Needed to support internationalized email addresses, if ext-intl is not installed\"\n        },\n        \"time\": \"2019-11-12T09:31:26+00:00\",\n        \"type\": \"library\",\n        \"extra\": {\n            \"branch-alias\": {\n                \"dev-master\": \"6.2-dev\"\n            }\n        },\n        \"installation-source\": \"dist\",\n        \"autoload\": {\n            \"files\": [\n                \"lib/swift_required.php\"\n            ]\n        },\n        \"notification-url\": \"https://packagist.org/downloads/\",\n        \"license\": [\n            \"MIT\"\n        ],\n        \"authors\": [\n            {\n                \"name\": \"Chris Corbyn\"\n            },\n            {\n                \"name\": \"Fabien Potencier\",\n                \"email\": \"fabien@symfony.com\"\n            }\n        ],\n        \"description\": \"Swiftmailer, free feature-rich PHP mailer\",\n        \"homepage\": \"https://swiftmailer.symfony.com\",\n        \"keywords\": [\n            \"email\",\n            \"mail\",\n            \"mailer\"\n        ]\n    },\n    {\n        \"name\": \"symfony/asset\",\n        \"version\": \"v5.1.8\",\n        \"version_normalized\": \"5.1.8.0\",\n        \"source\": {\n            \"type\": \"git\",\n            \"url\": \"https://github.com/symfony/asset.git\",\n            \"reference\": \"19c59713f750642206b21a1edec5c18dea80f979\"\n        },\n        \"dist\": {\n            \"type\": \"zip\",\n            \"url\": \"https://api.github.com/repos/symfony/asset/zipball/19c59713f750642206b21a1edec5c18dea80f979\",\n            \"reference\": \"19c59713f750642206b21a1edec5c18dea80f979\",\n            \"shasum\": \"\"\n        },\n        \"require\": {\n            \"php\": \">=7.2.5\"\n        },\n        \"require-dev\": {\n            \"symfony/http-client\": \"^4.4|^5.0\",\n            \"symfony/http-foundation\": \"^4.4|^5.0\",\n            \"symfony/http-kernel\": \"^4.4|^5.0\"\n        },\n        \"suggest\": {\n            \"symfony/http-foundation\": \"\"\n        },\n        \"time\": \"2020-10-24T12:01:57+00:00\",\n        \"type\": \"library\",\n        \"installation-source\": \"dist\",\n        \"autoload\": {\n            \"psr-4\": {\n                \"Symfony\\\\Component\\\\Asset\\\\\": \"\"\n            },\n            \"exclude-from-classmap\": [\n                \"/Tests/\"\n            ]\n        },\n        \"notification-url\": \"https://packagist.org/downloads/\",\n        \"license\": [\n            \"MIT\"\n        ],\n        \"authors\": [\n            {\n                \"name\": \"Fabien Potencier\",\n                \"email\": \"fabien@symfony.com\"\n            },\n            {\n                \"name\": \"Symfony Community\",\n                \"homepage\": \"https://symfony.com/contributors\"\n            }\n        ],\n        \"description\": \"Symfony Asset Component\",\n        \"homepage\": \"https://symfony.com\",\n        \"funding\": [\n            {\n                \"url\": \"https://symfony.com/sponsor\",\n                \"type\": \"custom\"\n            },\n            {\n                \"url\": \"https://github.com/fabpot\",\n                \"type\": \"github\"\n            },\n            {\n                \"url\": \"https://tidelift.com/funding/github/packagist/symfony/symfony\",\n                \"type\": \"tidelift\"\n            }\n        ]\n    },\n    {\n        \"name\": \"symfony/browser-kit\",\n        \"version\": \"v5.1.8\",\n        \"version_normalized\": \"5.1.8.0\",\n        \"source\": {\n            \"type\": \"git\",\n            \"url\": \"https://github.com/symfony/browser-kit.git\",\n            \"reference\": \"65b7d208280f2700f43ba44a8059a25d7b01347b\"\n        },\n        \"dist\": {\n            \"type\": \"zip\",\n            \"url\": \"https://api.github.com/repos/symfony/browser-kit/zipball/65b7d208280f2700f43ba44a8059a25d7b01347b\",\n            \"reference\": \"65b7d208280f2700f43ba44a8059a25d7b01347b\",\n            \"shasum\": \"\"\n        },\n        \"require\": {\n            \"php\": \">=7.2.5\",\n            \"symfony/dom-crawler\": \"^4.4|^5.0\"\n        },\n        \"require-dev\": {\n            \"symfony/css-selector\": \"^4.4|^5.0\",\n            \"symfony/http-client\": \"^4.4|^5.0\",\n            \"symfony/mime\": \"^4.4|^5.0\",\n            \"symfony/process\": \"^4.4|^5.0\"\n        },\n        \"suggest\": {\n            \"symfony/process\": \"\"\n        },\n        \"time\": \"2020-10-24T12:01:57+00:00\",\n        \"type\": \"library\",\n        \"installation-source\": \"dist\",\n        \"autoload\": {\n            \"psr-4\": {\n                \"Symfony\\\\Component\\\\BrowserKit\\\\\": \"\"\n            },\n            \"exclude-from-classmap\": [\n                \"/Tests/\"\n            ]\n        },\n        \"notification-url\": \"https://packagist.org/downloads/\",\n        \"license\": [\n            \"MIT\"\n        ],\n        \"authors\": [\n            {\n                \"name\": \"Fabien Potencier\",\n                \"email\": \"fabien@symfony.com\"\n            },\n            {\n                \"name\": \"Symfony Community\",\n                \"homepage\": \"https://symfony.com/contributors\"\n            }\n        ],\n        \"description\": \"Symfony BrowserKit Component\",\n        \"homepage\": \"https://symfony.com\",\n        \"funding\": [\n            {\n                \"url\": \"https://symfony.com/sponsor\",\n                \"type\": \"custom\"\n            },\n            {\n                \"url\": \"https://github.com/fabpot\",\n                \"type\": \"github\"\n            },\n            {\n                \"url\": \"https://tidelift.com/funding/github/packagist/symfony/symfony\",\n                \"type\": \"tidelift\"\n            }\n        ]\n    },\n    {\n        \"name\": \"symfony/cache\",\n        \"version\": \"v5.1.8\",\n        \"version_normalized\": \"5.1.8.0\",\n        \"source\": {\n            \"type\": \"git\",\n            \"url\": \"https://github.com/symfony/cache.git\",\n            \"reference\": \"d7bc33e9f9028f49f87057e7944c076d9593f046\"\n        },\n        \"dist\": {\n            \"type\": \"zip\",\n            \"url\": \"https://api.github.com/repos/symfony/cache/zipball/d7bc33e9f9028f49f87057e7944c076d9593f046\",\n            \"reference\": \"d7bc33e9f9028f49f87057e7944c076d9593f046\",\n            \"shasum\": \"\"\n        },\n        \"require\": {\n            \"php\": \">=7.2.5\",\n            \"psr/cache\": \"~1.0\",\n            \"psr/log\": \"~1.0\",\n            \"symfony/cache-contracts\": \"^1.1.7|^2\",\n            \"symfony/polyfill-php80\": \"^1.15\",\n            \"symfony/service-contracts\": \"^1.1|^2\",\n            \"symfony/var-exporter\": \"^4.4|^5.0\"\n        },\n        \"conflict\": {\n            \"doctrine/dbal\": \"<2.5\",\n            \"symfony/dependency-injection\": \"<4.4\",\n            \"symfony/http-kernel\": \"<4.4\",\n            \"symfony/var-dumper\": \"<4.4\"\n        },\n        \"provide\": {\n            \"psr/cache-implementation\": \"1.0\",\n            \"psr/simple-cache-implementation\": \"1.0\",\n            \"symfony/cache-implementation\": \"1.0\"\n        },\n        \"require-dev\": {\n            \"cache/integration-tests\": \"dev-master\",\n            \"doctrine/cache\": \"^1.6\",\n            \"doctrine/dbal\": \"^2.5|^3.0\",\n            \"predis/predis\": \"^1.1\",\n            \"psr/simple-cache\": \"^1.0\",\n            \"symfony/config\": \"^4.4|^5.0\",\n            \"symfony/dependency-injection\": \"^4.4|^5.0\",\n            \"symfony/filesystem\": \"^4.4|^5.0\",\n            \"symfony/var-dumper\": \"^4.4|^5.0\"\n        },\n        \"time\": \"2020-10-25T23:21:56+00:00\",\n        \"type\": \"library\",\n        \"installation-source\": \"dist\",\n        \"autoload\": {\n            \"psr-4\": {\n                \"Symfony\\\\Component\\\\Cache\\\\\": \"\"\n            },\n            \"exclude-from-classmap\": [\n                \"/Tests/\"\n            ]\n        },\n        \"notification-url\": \"https://packagist.org/downloads/\",\n        \"license\": [\n            \"MIT\"\n        ],\n        \"authors\": [\n            {\n                \"name\": \"Nicolas Grekas\",\n                \"email\": \"p@tchwork.com\"\n            },\n            {\n                \"name\": \"Symfony Community\",\n                \"homepage\": \"https://symfony.com/contributors\"\n            }\n        ],\n        \"description\": \"Symfony Cache component with PSR-6, PSR-16, and tags\",\n        \"homepage\": \"https://symfony.com\",\n        \"keywords\": [\n            \"caching\",\n            \"psr6\"\n        ],\n        \"funding\": [\n            {\n                \"url\": \"https://symfony.com/sponsor\",\n                \"type\": \"custom\"\n            },\n            {\n                \"url\": \"https://github.com/fabpot\",\n                \"type\": \"github\"\n            },\n            {\n                \"url\": \"https://tidelift.com/funding/github/packagist/symfony/symfony\",\n                \"type\": \"tidelift\"\n            }\n        ]\n    },\n    {\n        \"name\": \"symfony/cache-contracts\",\n        \"version\": \"v2.2.0\",\n        \"version_normalized\": \"2.2.0.0\",\n        \"source\": {\n            \"type\": \"git\",\n            \"url\": \"https://github.com/symfony/cache-contracts.git\",\n            \"reference\": \"8034ca0b61d4dd967f3698aaa1da2507b631d0cb\"\n        },\n        \"dist\": {\n            \"type\": \"zip\",\n            \"url\": \"https://api.github.com/repos/symfony/cache-contracts/zipball/8034ca0b61d4dd967f3698aaa1da2507b631d0cb\",\n            \"reference\": \"8034ca0b61d4dd967f3698aaa1da2507b631d0cb\",\n            \"shasum\": \"\"\n        },\n        \"require\": {\n            \"php\": \">=7.2.5\",\n            \"psr/cache\": \"^1.0\"\n        },\n        \"suggest\": {\n            \"symfony/cache-implementation\": \"\"\n        },\n        \"time\": \"2020-09-07T11:33:47+00:00\",\n        \"type\": \"library\",\n        \"extra\": {\n            \"branch-alias\": {\n                \"dev-master\": \"2.2-dev\"\n            },\n            \"thanks\": {\n                \"name\": \"symfony/contracts\",\n                \"url\": \"https://github.com/symfony/contracts\"\n            }\n        },\n        \"installation-source\": \"dist\",\n        \"autoload\": {\n            \"psr-4\": {\n                \"Symfony\\\\Contracts\\\\Cache\\\\\": \"\"\n            }\n        },\n        \"notification-url\": \"https://packagist.org/downloads/\",\n        \"license\": [\n            \"MIT\"\n        ],\n        \"authors\": [\n            {\n                \"name\": \"Nicolas Grekas\",\n                \"email\": \"p@tchwork.com\"\n            },\n            {\n                \"name\": \"Symfony Community\",\n                \"homepage\": \"https://symfony.com/contributors\"\n            }\n        ],\n        \"description\": \"Generic abstractions related to caching\",\n        \"homepage\": \"https://symfony.com\",\n        \"keywords\": [\n            \"abstractions\",\n            \"contracts\",\n            \"decoupling\",\n            \"interfaces\",\n            \"interoperability\",\n            \"standards\"\n        ],\n        \"funding\": [\n            {\n                \"url\": \"https://symfony.com/sponsor\",\n                \"type\": \"custom\"\n            },\n            {\n                \"url\": \"https://github.com/fabpot\",\n                \"type\": \"github\"\n            },\n            {\n                \"url\": \"https://tidelift.com/funding/github/packagist/symfony/symfony\",\n                \"type\": \"tidelift\"\n            }\n        ]\n    },\n    {\n        \"name\": \"symfony/config\",\n        \"version\": \"v5.1.8\",\n        \"version_normalized\": \"5.1.8.0\",\n        \"source\": {\n            \"type\": \"git\",\n            \"url\": \"https://github.com/symfony/config.git\",\n            \"reference\": \"11baeefa4c179d6908655a7b6be728f62367c193\"\n        },\n        \"dist\": {\n            \"type\": \"zip\",\n            \"url\": \"https://api.github.com/repos/symfony/config/zipball/11baeefa4c179d6908655a7b6be728f62367c193\",\n            \"reference\": \"11baeefa4c179d6908655a7b6be728f62367c193\",\n            \"shasum\": \"\"\n        },\n        \"require\": {\n            \"php\": \">=7.2.5\",\n            \"symfony/deprecation-contracts\": \"^2.1\",\n            \"symfony/filesystem\": \"^4.4|^5.0\",\n            \"symfony/polyfill-ctype\": \"~1.8\",\n            \"symfony/polyfill-php80\": \"^1.15\"\n        },\n        \"conflict\": {\n            \"symfony/finder\": \"<4.4\"\n        },\n        \"require-dev\": {\n            \"symfony/event-dispatcher\": \"^4.4|^5.0\",\n            \"symfony/finder\": \"^4.4|^5.0\",\n            \"symfony/messenger\": \"^4.4|^5.0\",\n            \"symfony/service-contracts\": \"^1.1|^2\",\n            \"symfony/yaml\": \"^4.4|^5.0\"\n        },\n        \"suggest\": {\n            \"symfony/yaml\": \"To use the yaml reference dumper\"\n        },\n        \"time\": \"2020-10-24T12:01:57+00:00\",\n        \"type\": \"library\",\n        \"installation-source\": \"dist\",\n        \"autoload\": {\n            \"psr-4\": {\n                \"Symfony\\\\Component\\\\Config\\\\\": \"\"\n            },\n            \"exclude-from-classmap\": [\n                \"/Tests/\"\n            ]\n        },\n        \"notification-url\": \"https://packagist.org/downloads/\",\n        \"license\": [\n            \"MIT\"\n        ],\n        \"authors\": [\n            {\n                \"name\": \"Fabien Potencier\",\n                \"email\": \"fabien@symfony.com\"\n            },\n            {\n                \"name\": \"Symfony Community\",\n                \"homepage\": \"https://symfony.com/contributors\"\n            }\n        ],\n        \"description\": \"Symfony Config Component\",\n        \"homepage\": \"https://symfony.com\",\n        \"funding\": [\n            {\n                \"url\": \"https://symfony.com/sponsor\",\n                \"type\": \"custom\"\n            },\n            {\n                \"url\": \"https://github.com/fabpot\",\n                \"type\": \"github\"\n            },\n            {\n                \"url\": \"https://tidelift.com/funding/github/packagist/symfony/symfony\",\n                \"type\": \"tidelift\"\n            }\n        ]\n    },\n    {\n        \"name\": \"symfony/console\",\n        \"version\": \"v5.1.8\",\n        \"version_normalized\": \"5.1.8.0\",\n        \"source\": {\n            \"type\": \"git\",\n            \"url\": \"https://github.com/symfony/console.git\",\n            \"reference\": \"e0b2c29c0fa6a69089209bbe8fcff4df2a313d0e\"\n        },\n        \"dist\": {\n            \"type\": \"zip\",\n            \"url\": \"https://api.github.com/repos/symfony/console/zipball/e0b2c29c0fa6a69089209bbe8fcff4df2a313d0e\",\n            \"reference\": \"e0b2c29c0fa6a69089209bbe8fcff4df2a313d0e\",\n            \"shasum\": \"\"\n        },\n        \"require\": {\n            \"php\": \">=7.2.5\",\n            \"symfony/polyfill-mbstring\": \"~1.0\",\n            \"symfony/polyfill-php73\": \"^1.8\",\n            \"symfony/polyfill-php80\": \"^1.15\",\n            \"symfony/service-contracts\": \"^1.1|^2\",\n            \"symfony/string\": \"^5.1\"\n        },\n        \"conflict\": {\n            \"symfony/dependency-injection\": \"<4.4\",\n            \"symfony/dotenv\": \"<5.1\",\n            \"symfony/event-dispatcher\": \"<4.4\",\n            \"symfony/lock\": \"<4.4\",\n            \"symfony/process\": \"<4.4\"\n        },\n        \"provide\": {\n            \"psr/log-implementation\": \"1.0\"\n        },\n        \"require-dev\": {\n            \"psr/log\": \"~1.0\",\n            \"symfony/config\": \"^4.4|^5.0\",\n            \"symfony/dependency-injection\": \"^4.4|^5.0\",\n            \"symfony/event-dispatcher\": \"^4.4|^5.0\",\n            \"symfony/lock\": \"^4.4|^5.0\",\n            \"symfony/process\": \"^4.4|^5.0\",\n            \"symfony/var-dumper\": \"^4.4|^5.0\"\n        },\n        \"suggest\": {\n            \"psr/log\": \"For using the console logger\",\n            \"symfony/event-dispatcher\": \"\",\n            \"symfony/lock\": \"\",\n            \"symfony/process\": \"\"\n        },\n        \"time\": \"2020-10-24T12:01:57+00:00\",\n        \"type\": \"library\",\n        \"installation-source\": \"dist\",\n        \"autoload\": {\n            \"psr-4\": {\n                \"Symfony\\\\Component\\\\Console\\\\\": \"\"\n            },\n            \"exclude-from-classmap\": [\n                \"/Tests/\"\n            ]\n        },\n        \"notification-url\": \"https://packagist.org/downloads/\",\n        \"license\": [\n            \"MIT\"\n        ],\n        \"authors\": [\n            {\n                \"name\": \"Fabien Potencier\",\n                \"email\": \"fabien@symfony.com\"\n            },\n            {\n                \"name\": \"Symfony Community\",\n                \"homepage\": \"https://symfony.com/contributors\"\n            }\n        ],\n        \"description\": \"Symfony Console Component\",\n        \"homepage\": \"https://symfony.com\",\n        \"funding\": [\n            {\n                \"url\": \"https://symfony.com/sponsor\",\n                \"type\": \"custom\"\n            },\n            {\n                \"url\": \"https://github.com/fabpot\",\n                \"type\": \"github\"\n            },\n            {\n                \"url\": \"https://tidelift.com/funding/github/packagist/symfony/symfony\",\n                \"type\": \"tidelift\"\n            }\n        ]\n    },\n    {\n        \"name\": \"symfony/css-selector\",\n        \"version\": \"v5.1.8\",\n        \"version_normalized\": \"5.1.8.0\",\n        \"source\": {\n            \"type\": \"git\",\n            \"url\": \"https://github.com/symfony/css-selector.git\",\n            \"reference\": \"6cbebda22ffc0d4bb8fea0c1311c2ca54c4c8fa0\"\n        },\n        \"dist\": {\n            \"type\": \"zip\",\n            \"url\": \"https://api.github.com/repos/symfony/css-selector/zipball/6cbebda22ffc0d4bb8fea0c1311c2ca54c4c8fa0\",\n            \"reference\": \"6cbebda22ffc0d4bb8fea0c1311c2ca54c4c8fa0\",\n            \"shasum\": \"\"\n        },\n        \"require\": {\n            \"php\": \">=7.2.5\"\n        },\n        \"time\": \"2020-10-24T12:01:57+00:00\",\n        \"type\": \"library\",\n        \"installation-source\": \"dist\",\n        \"autoload\": {\n            \"psr-4\": {\n                \"Symfony\\\\Component\\\\CssSelector\\\\\": \"\"\n            },\n            \"exclude-from-classmap\": [\n                \"/Tests/\"\n            ]\n        },\n        \"notification-url\": \"https://packagist.org/downloads/\",\n        \"license\": [\n            \"MIT\"\n        ],\n        \"authors\": [\n            {\n                \"name\": \"Fabien Potencier\",\n                \"email\": \"fabien@symfony.com\"\n            },\n            {\n                \"name\": \"Jean-François Simon\",\n                \"email\": \"jeanfrancois.simon@sensiolabs.com\"\n            },\n            {\n                \"name\": \"Symfony Community\",\n                \"homepage\": \"https://symfony.com/contributors\"\n            }\n        ],\n        \"description\": \"Symfony CssSelector Component\",\n        \"homepage\": \"https://symfony.com\",\n        \"funding\": [\n            {\n                \"url\": \"https://symfony.com/sponsor\",\n                \"type\": \"custom\"\n            },\n            {\n                \"url\": \"https://github.com/fabpot\",\n                \"type\": \"github\"\n            },\n            {\n                \"url\": \"https://tidelift.com/funding/github/packagist/symfony/symfony\",\n                \"type\": \"tidelift\"\n            }\n        ]\n    },\n    {\n        \"name\": \"symfony/debug-bundle\",\n        \"version\": \"v5.1.8\",\n        \"version_normalized\": \"5.1.8.0\",\n        \"source\": {\n            \"type\": \"git\",\n            \"url\": \"https://github.com/symfony/debug-bundle.git\",\n            \"reference\": \"183a36bdb251eeeeff640ffbceea3403ac5c8d40\"\n        },\n        \"dist\": {\n            \"type\": \"zip\",\n            \"url\": \"https://api.github.com/repos/symfony/debug-bundle/zipball/183a36bdb251eeeeff640ffbceea3403ac5c8d40\",\n            \"reference\": \"183a36bdb251eeeeff640ffbceea3403ac5c8d40\",\n            \"shasum\": \"\"\n        },\n        \"require\": {\n            \"ext-xml\": \"*\",\n            \"php\": \">=7.2.5\",\n            \"symfony/http-kernel\": \"^4.4|^5.0\",\n            \"symfony/twig-bridge\": \"^4.4|^5.0\",\n            \"symfony/var-dumper\": \"^4.4|^5.0\"\n        },\n        \"conflict\": {\n            \"symfony/config\": \"<4.4\",\n            \"symfony/dependency-injection\": \"<4.4\"\n        },\n        \"require-dev\": {\n            \"symfony/config\": \"^4.4|^5.0\",\n            \"symfony/dependency-injection\": \"^4.4|^5.0\",\n            \"symfony/web-profiler-bundle\": \"^4.4|^5.0\"\n        },\n        \"suggest\": {\n            \"symfony/config\": \"For service container configuration\",\n            \"symfony/dependency-injection\": \"For using as a service from the container\"\n        },\n        \"time\": \"2020-10-24T12:01:57+00:00\",\n        \"type\": \"symfony-bundle\",\n        \"installation-source\": \"dist\",\n        \"autoload\": {\n            \"psr-4\": {\n                \"Symfony\\\\Bundle\\\\DebugBundle\\\\\": \"\"\n            },\n            \"exclude-from-classmap\": [\n                \"/Tests/\"\n            ]\n        },\n        \"notification-url\": \"https://packagist.org/downloads/\",\n        \"license\": [\n            \"MIT\"\n        ],\n        \"authors\": [\n            {\n                \"name\": \"Fabien Potencier\",\n                \"email\": \"fabien@symfony.com\"\n            },\n            {\n                \"name\": \"Symfony Community\",\n                \"homepage\": \"https://symfony.com/contributors\"\n            }\n        ],\n        \"description\": \"Symfony DebugBundle\",\n        \"homepage\": \"https://symfony.com\",\n        \"funding\": [\n            {\n                \"url\": \"https://symfony.com/sponsor\",\n                \"type\": \"custom\"\n            },\n            {\n                \"url\": \"https://github.com/fabpot\",\n                \"type\": \"github\"\n            },\n            {\n                \"url\": \"https://tidelift.com/funding/github/packagist/symfony/symfony\",\n                \"type\": \"tidelift\"\n            }\n        ]\n    },\n    {\n        \"name\": \"symfony/dependency-injection\",\n        \"version\": \"v5.1.8\",\n        \"version_normalized\": \"5.1.8.0\",\n        \"source\": {\n            \"type\": \"git\",\n            \"url\": \"https://github.com/symfony/dependency-injection.git\",\n            \"reference\": \"829ca6bceaf68036a123a13a979f3c89289eae78\"\n        },\n        \"dist\": {\n            \"type\": \"zip\",\n            \"url\": \"https://api.github.com/repos/symfony/dependency-injection/zipball/829ca6bceaf68036a123a13a979f3c89289eae78\",\n            \"reference\": \"829ca6bceaf68036a123a13a979f3c89289eae78\",\n            \"shasum\": \"\"\n        },\n        \"require\": {\n            \"php\": \">=7.2.5\",\n            \"psr/container\": \"^1.0\",\n            \"symfony/deprecation-contracts\": \"^2.1\",\n            \"symfony/polyfill-php80\": \"^1.15\",\n            \"symfony/service-contracts\": \"^1.1.6|^2\"\n        },\n        \"conflict\": {\n            \"symfony/config\": \"<5.1\",\n            \"symfony/finder\": \"<4.4\",\n            \"symfony/proxy-manager-bridge\": \"<4.4\",\n            \"symfony/yaml\": \"<4.4\"\n        },\n        \"provide\": {\n            \"psr/container-implementation\": \"1.0\",\n            \"symfony/service-implementation\": \"1.0\"\n        },\n        \"require-dev\": {\n            \"symfony/config\": \"^5.1\",\n            \"symfony/expression-language\": \"^4.4|^5.0\",\n            \"symfony/yaml\": \"^4.4|^5.0\"\n        },\n        \"suggest\": {\n            \"symfony/config\": \"\",\n            \"symfony/expression-language\": \"For using expressions in service container configuration\",\n            \"symfony/finder\": \"For using double-star glob patterns or when GLOB_BRACE portability is required\",\n            \"symfony/proxy-manager-bridge\": \"Generate service proxies to lazy load them\",\n            \"symfony/yaml\": \"\"\n        },\n        \"time\": \"2020-10-27T10:11:13+00:00\",\n        \"type\": \"library\",\n        \"installation-source\": \"dist\",\n        \"autoload\": {\n            \"psr-4\": {\n                \"Symfony\\\\Component\\\\DependencyInjection\\\\\": \"\"\n            },\n            \"exclude-from-classmap\": [\n                \"/Tests/\"\n            ]\n        },\n        \"notification-url\": \"https://packagist.org/downloads/\",\n        \"license\": [\n            \"MIT\"\n        ],\n        \"authors\": [\n            {\n                \"name\": \"Fabien Potencier\",\n                \"email\": \"fabien@symfony.com\"\n            },\n            {\n                \"name\": \"Symfony Community\",\n                \"homepage\": \"https://symfony.com/contributors\"\n            }\n        ],\n        \"description\": \"Symfony DependencyInjection Component\",\n        \"homepage\": \"https://symfony.com\",\n        \"funding\": [\n            {\n                \"url\": \"https://symfony.com/sponsor\",\n                \"type\": \"custom\"\n            },\n            {\n                \"url\": \"https://github.com/fabpot\",\n                \"type\": \"github\"\n            },\n            {\n                \"url\": \"https://tidelift.com/funding/github/packagist/symfony/symfony\",\n                \"type\": \"tidelift\"\n            }\n        ]\n    },\n    {\n        \"name\": \"symfony/deprecation-contracts\",\n        \"version\": \"v2.2.0\",\n        \"version_normalized\": \"2.2.0.0\",\n        \"source\": {\n            \"type\": \"git\",\n            \"url\": \"https://github.com/symfony/deprecation-contracts.git\",\n            \"reference\": \"5fa56b4074d1ae755beb55617ddafe6f5d78f665\"\n        },\n        \"dist\": {\n            \"type\": \"zip\",\n            \"url\": \"https://api.github.com/repos/symfony/deprecation-contracts/zipball/5fa56b4074d1ae755beb55617ddafe6f5d78f665\",\n            \"reference\": \"5fa56b4074d1ae755beb55617ddafe6f5d78f665\",\n            \"shasum\": \"\"\n        },\n        \"require\": {\n            \"php\": \">=7.1\"\n        },\n        \"time\": \"2020-09-07T11:33:47+00:00\",\n        \"type\": \"library\",\n        \"extra\": {\n            \"branch-alias\": {\n                \"dev-master\": \"2.2-dev\"\n            },\n            \"thanks\": {\n                \"name\": \"symfony/contracts\",\n                \"url\": \"https://github.com/symfony/contracts\"\n            }\n        },\n        \"installation-source\": \"dist\",\n        \"autoload\": {\n            \"files\": [\n                \"function.php\"\n            ]\n        },\n        \"notification-url\": \"https://packagist.org/downloads/\",\n        \"license\": [\n            \"MIT\"\n        ],\n        \"authors\": [\n            {\n                \"name\": \"Nicolas Grekas\",\n                \"email\": \"p@tchwork.com\"\n            },\n            {\n                \"name\": \"Symfony Community\",\n                \"homepage\": \"https://symfony.com/contributors\"\n            }\n        ],\n        \"description\": \"A generic function and convention to trigger deprecation notices\",\n        \"homepage\": \"https://symfony.com\",\n        \"funding\": [\n            {\n                \"url\": \"https://symfony.com/sponsor\",\n                \"type\": \"custom\"\n            },\n            {\n                \"url\": \"https://github.com/fabpot\",\n                \"type\": \"github\"\n            },\n            {\n                \"url\": \"https://tidelift.com/funding/github/packagist/symfony/symfony\",\n                \"type\": \"tidelift\"\n            }\n        ]\n    },\n    {\n        \"name\": \"symfony/doctrine-bridge\",\n        \"version\": \"v5.1.8\",\n        \"version_normalized\": \"5.1.8.0\",\n        \"source\": {\n            \"type\": \"git\",\n            \"url\": \"https://github.com/symfony/doctrine-bridge.git\",\n            \"reference\": \"d01f0ec8b1225bd955d079f007c25191d93867d0\"\n        },\n        \"dist\": {\n            \"type\": \"zip\",\n            \"url\": \"https://api.github.com/repos/symfony/doctrine-bridge/zipball/d01f0ec8b1225bd955d079f007c25191d93867d0\",\n            \"reference\": \"d01f0ec8b1225bd955d079f007c25191d93867d0\",\n            \"shasum\": \"\"\n        },\n        \"require\": {\n            \"doctrine/event-manager\": \"~1.0\",\n            \"doctrine/persistence\": \"^1.3|^2\",\n            \"php\": \">=7.2.5\",\n            \"symfony/polyfill-ctype\": \"~1.8\",\n            \"symfony/polyfill-mbstring\": \"~1.0\",\n            \"symfony/polyfill-php80\": \"^1.15\",\n            \"symfony/service-contracts\": \"^1.1|^2\"\n        },\n        \"conflict\": {\n            \"phpunit/phpunit\": \"<5.4.3\",\n            \"symfony/dependency-injection\": \"<4.4\",\n            \"symfony/form\": \"<5.1\",\n            \"symfony/http-kernel\": \"<5\",\n            \"symfony/messenger\": \"<4.4\",\n            \"symfony/property-info\": \"<5\",\n            \"symfony/security-bundle\": \"<5\",\n            \"symfony/security-core\": \"<5\",\n            \"symfony/validator\": \"<5.0.2\"\n        },\n        \"require-dev\": {\n            \"composer/package-versions-deprecated\": \"^1.8\",\n            \"doctrine/annotations\": \"~1.7\",\n            \"doctrine/cache\": \"~1.6\",\n            \"doctrine/collections\": \"~1.0\",\n            \"doctrine/data-fixtures\": \"^1.1\",\n            \"doctrine/dbal\": \"~2.4|^3.0\",\n            \"doctrine/orm\": \"^2.6.3\",\n            \"doctrine/reflection\": \"~1.0\",\n            \"symfony/cache\": \"^5.1\",\n            \"symfony/config\": \"^4.4|^5.0\",\n            \"symfony/dependency-injection\": \"^4.4|^5.0\",\n            \"symfony/doctrine-messenger\": \"^5.1\",\n            \"symfony/expression-language\": \"^4.4|^5.0\",\n            \"symfony/form\": \"^5.1.3\",\n            \"symfony/http-kernel\": \"^5.0\",\n            \"symfony/messenger\": \"^4.4|^5.0\",\n            \"symfony/property-access\": \"^4.4|^5.0\",\n            \"symfony/property-info\": \"^5.0\",\n            \"symfony/proxy-manager-bridge\": \"^4.4|^5.0\",\n            \"symfony/security-core\": \"^5.0\",\n            \"symfony/stopwatch\": \"^4.4|^5.0\",\n            \"symfony/translation\": \"^4.4|^5.0\",\n            \"symfony/validator\": \"^5.0.2\",\n            \"symfony/var-dumper\": \"^4.4|^5.0\"\n        },\n        \"suggest\": {\n            \"doctrine/data-fixtures\": \"\",\n            \"doctrine/dbal\": \"\",\n            \"doctrine/orm\": \"\",\n            \"symfony/form\": \"\",\n            \"symfony/property-info\": \"\",\n            \"symfony/validator\": \"\"\n        },\n        \"time\": \"2020-10-24T12:01:57+00:00\",\n        \"type\": \"symfony-bridge\",\n        \"installation-source\": \"dist\",\n        \"autoload\": {\n            \"psr-4\": {\n                \"Symfony\\\\Bridge\\\\Doctrine\\\\\": \"\"\n            },\n            \"exclude-from-classmap\": [\n                \"/Tests/\"\n            ]\n        },\n        \"notification-url\": \"https://packagist.org/downloads/\",\n        \"license\": [\n            \"MIT\"\n        ],\n        \"authors\": [\n            {\n                \"name\": \"Fabien Potencier\",\n                \"email\": \"fabien@symfony.com\"\n            },\n            {\n                \"name\": \"Symfony Community\",\n                \"homepage\": \"https://symfony.com/contributors\"\n            }\n        ],\n        \"description\": \"Symfony Doctrine Bridge\",\n        \"homepage\": \"https://symfony.com\",\n        \"funding\": [\n            {\n                \"url\": \"https://symfony.com/sponsor\",\n                \"type\": \"custom\"\n            },\n            {\n                \"url\": \"https://github.com/fabpot\",\n                \"type\": \"github\"\n            },\n            {\n                \"url\": \"https://tidelift.com/funding/github/packagist/symfony/symfony\",\n                \"type\": \"tidelift\"\n            }\n        ]\n    },\n    {\n        \"name\": \"symfony/dom-crawler\",\n        \"version\": \"v5.1.8\",\n        \"version_normalized\": \"5.1.8.0\",\n        \"source\": {\n            \"type\": \"git\",\n            \"url\": \"https://github.com/symfony/dom-crawler.git\",\n            \"reference\": \"0969122fe144dd8ab2e8c98c7e03eedc621b368c\"\n        },\n        \"dist\": {\n            \"type\": \"zip\",\n            \"url\": \"https://api.github.com/repos/symfony/dom-crawler/zipball/0969122fe144dd8ab2e8c98c7e03eedc621b368c\",\n            \"reference\": \"0969122fe144dd8ab2e8c98c7e03eedc621b368c\",\n            \"shasum\": \"\"\n        },\n        \"require\": {\n            \"php\": \">=7.2.5\",\n            \"symfony/polyfill-ctype\": \"~1.8\",\n            \"symfony/polyfill-mbstring\": \"~1.0\",\n            \"symfony/polyfill-php80\": \"^1.15\"\n        },\n        \"conflict\": {\n            \"masterminds/html5\": \"<2.6\"\n        },\n        \"require-dev\": {\n            \"masterminds/html5\": \"^2.6\",\n            \"symfony/css-selector\": \"^4.4|^5.0\"\n        },\n        \"suggest\": {\n            \"symfony/css-selector\": \"\"\n        },\n        \"time\": \"2020-10-24T12:01:57+00:00\",\n        \"type\": \"library\",\n        \"installation-source\": \"dist\",\n        \"autoload\": {\n            \"psr-4\": {\n                \"Symfony\\\\Component\\\\DomCrawler\\\\\": \"\"\n            },\n            \"exclude-from-classmap\": [\n                \"/Tests/\"\n            ]\n        },\n        \"notification-url\": \"https://packagist.org/downloads/\",\n        \"license\": [\n            \"MIT\"\n        ],\n        \"authors\": [\n            {\n                \"name\": \"Fabien Potencier\",\n                \"email\": \"fabien@symfony.com\"\n            },\n            {\n                \"name\": \"Symfony Community\",\n                \"homepage\": \"https://symfony.com/contributors\"\n            }\n        ],\n        \"description\": \"Symfony DomCrawler Component\",\n        \"homepage\": \"https://symfony.com\",\n        \"funding\": [\n            {\n                \"url\": \"https://symfony.com/sponsor\",\n                \"type\": \"custom\"\n            },\n            {\n                \"url\": \"https://github.com/fabpot\",\n                \"type\": \"github\"\n            },\n            {\n                \"url\": \"https://tidelift.com/funding/github/packagist/symfony/symfony\",\n                \"type\": \"tidelift\"\n            }\n        ]\n    },\n    {\n        \"name\": \"symfony/dotenv\",\n        \"version\": \"v5.1.8\",\n        \"version_normalized\": \"5.1.8.0\",\n        \"source\": {\n            \"type\": \"git\",\n            \"url\": \"https://github.com/symfony/dotenv.git\",\n            \"reference\": \"29ac2a3e538da61780a769827c716738ce7accbb\"\n        },\n        \"dist\": {\n            \"type\": \"zip\",\n            \"url\": \"https://api.github.com/repos/symfony/dotenv/zipball/29ac2a3e538da61780a769827c716738ce7accbb\",\n            \"reference\": \"29ac2a3e538da61780a769827c716738ce7accbb\",\n            \"shasum\": \"\"\n        },\n        \"require\": {\n            \"php\": \">=7.2.5\",\n            \"symfony/deprecation-contracts\": \"^2.1\"\n        },\n        \"require-dev\": {\n            \"symfony/process\": \"^4.4|^5.0\"\n        },\n        \"time\": \"2020-10-24T12:01:57+00:00\",\n        \"type\": \"library\",\n        \"installation-source\": \"dist\",\n        \"autoload\": {\n            \"psr-4\": {\n                \"Symfony\\\\Component\\\\Dotenv\\\\\": \"\"\n            },\n            \"exclude-from-classmap\": [\n                \"/Tests/\"\n            ]\n        },\n        \"notification-url\": \"https://packagist.org/downloads/\",\n        \"license\": [\n            \"MIT\"\n        ],\n        \"authors\": [\n            {\n                \"name\": \"Fabien Potencier\",\n                \"email\": \"fabien@symfony.com\"\n            },\n            {\n                \"name\": \"Symfony Community\",\n                \"homepage\": \"https://symfony.com/contributors\"\n            }\n        ],\n        \"description\": \"Registers environment variables from a .env file\",\n        \"homepage\": \"https://symfony.com\",\n        \"keywords\": [\n            \"dotenv\",\n            \"env\",\n            \"environment\"\n        ],\n        \"funding\": [\n            {\n                \"url\": \"https://symfony.com/sponsor\",\n                \"type\": \"custom\"\n            },\n            {\n                \"url\": \"https://github.com/fabpot\",\n                \"type\": \"github\"\n            },\n            {\n                \"url\": \"https://tidelift.com/funding/github/packagist/symfony/symfony\",\n                \"type\": \"tidelift\"\n            }\n        ]\n    },\n    {\n        \"name\": \"symfony/error-handler\",\n        \"version\": \"v5.1.8\",\n        \"version_normalized\": \"5.1.8.0\",\n        \"source\": {\n            \"type\": \"git\",\n            \"url\": \"https://github.com/symfony/error-handler.git\",\n            \"reference\": \"a154f2b12fd1ec708559ba73ed58bd1304e55718\"\n        },\n        \"dist\": {\n            \"type\": \"zip\",\n            \"url\": \"https://api.github.com/repos/symfony/error-handler/zipball/a154f2b12fd1ec708559ba73ed58bd1304e55718\",\n            \"reference\": \"a154f2b12fd1ec708559ba73ed58bd1304e55718\",\n            \"shasum\": \"\"\n        },\n        \"require\": {\n            \"php\": \">=7.2.5\",\n            \"psr/log\": \"^1.0\",\n            \"symfony/polyfill-php80\": \"^1.15\",\n            \"symfony/var-dumper\": \"^4.4|^5.0\"\n        },\n        \"require-dev\": {\n            \"symfony/deprecation-contracts\": \"^2.1\",\n            \"symfony/http-kernel\": \"^4.4|^5.0\",\n            \"symfony/serializer\": \"^4.4|^5.0\"\n        },\n        \"time\": \"2020-10-24T12:01:57+00:00\",\n        \"type\": \"library\",\n        \"installation-source\": \"dist\",\n        \"autoload\": {\n            \"psr-4\": {\n                \"Symfony\\\\Component\\\\ErrorHandler\\\\\": \"\"\n            },\n            \"exclude-from-classmap\": [\n                \"/Tests/\"\n            ]\n        },\n        \"notification-url\": \"https://packagist.org/downloads/\",\n        \"license\": [\n            \"MIT\"\n        ],\n        \"authors\": [\n            {\n                \"name\": \"Fabien Potencier\",\n                \"email\": \"fabien@symfony.com\"\n            },\n            {\n                \"name\": \"Symfony Community\",\n                \"homepage\": \"https://symfony.com/contributors\"\n            }\n        ],\n        \"description\": \"Symfony ErrorHandler Component\",\n        \"homepage\": \"https://symfony.com\",\n        \"funding\": [\n            {\n                \"url\": \"https://symfony.com/sponsor\",\n                \"type\": \"custom\"\n            },\n            {\n                \"url\": \"https://github.com/fabpot\",\n                \"type\": \"github\"\n            },\n            {\n                \"url\": \"https://tidelift.com/funding/github/packagist/symfony/symfony\",\n                \"type\": \"tidelift\"\n            }\n        ]\n    },\n    {\n        \"name\": \"symfony/event-dispatcher\",\n        \"version\": \"v5.1.8\",\n        \"version_normalized\": \"5.1.8.0\",\n        \"source\": {\n            \"type\": \"git\",\n            \"url\": \"https://github.com/symfony/event-dispatcher.git\",\n            \"reference\": \"26f4edae48c913fc183a3da0553fe63bdfbd361a\"\n        },\n        \"dist\": {\n            \"type\": \"zip\",\n            \"url\": \"https://api.github.com/repos/symfony/event-dispatcher/zipball/26f4edae48c913fc183a3da0553fe63bdfbd361a\",\n            \"reference\": \"26f4edae48c913fc183a3da0553fe63bdfbd361a\",\n            \"shasum\": \"\"\n        },\n        \"require\": {\n            \"php\": \">=7.2.5\",\n            \"symfony/deprecation-contracts\": \"^2.1\",\n            \"symfony/event-dispatcher-contracts\": \"^2\",\n            \"symfony/polyfill-php80\": \"^1.15\"\n        },\n        \"conflict\": {\n            \"symfony/dependency-injection\": \"<4.4\"\n        },\n        \"provide\": {\n            \"psr/event-dispatcher-implementation\": \"1.0\",\n            \"symfony/event-dispatcher-implementation\": \"2.0\"\n        },\n        \"require-dev\": {\n            \"psr/log\": \"~1.0\",\n            \"symfony/config\": \"^4.4|^5.0\",\n            \"symfony/dependency-injection\": \"^4.4|^5.0\",\n            \"symfony/error-handler\": \"^4.4|^5.0\",\n            \"symfony/expression-language\": \"^4.4|^5.0\",\n            \"symfony/http-foundation\": \"^4.4|^5.0\",\n            \"symfony/service-contracts\": \"^1.1|^2\",\n            \"symfony/stopwatch\": \"^4.4|^5.0\"\n        },\n        \"suggest\": {\n            \"symfony/dependency-injection\": \"\",\n            \"symfony/http-kernel\": \"\"\n        },\n        \"time\": \"2020-10-24T12:01:57+00:00\",\n        \"type\": \"library\",\n        \"installation-source\": \"dist\",\n        \"autoload\": {\n            \"psr-4\": {\n                \"Symfony\\\\Component\\\\EventDispatcher\\\\\": \"\"\n            },\n            \"exclude-from-classmap\": [\n                \"/Tests/\"\n            ]\n        },\n        \"notification-url\": \"https://packagist.org/downloads/\",\n        \"license\": [\n            \"MIT\"\n        ],\n        \"authors\": [\n            {\n                \"name\": \"Fabien Potencier\",\n                \"email\": \"fabien@symfony.com\"\n            },\n            {\n                \"name\": \"Symfony Community\",\n                \"homepage\": \"https://symfony.com/contributors\"\n            }\n        ],\n        \"description\": \"Symfony EventDispatcher Component\",\n        \"homepage\": \"https://symfony.com\",\n        \"funding\": [\n            {\n                \"url\": \"https://symfony.com/sponsor\",\n                \"type\": \"custom\"\n            },\n            {\n                \"url\": \"https://github.com/fabpot\",\n                \"type\": \"github\"\n            },\n            {\n                \"url\": \"https://tidelift.com/funding/github/packagist/symfony/symfony\",\n                \"type\": \"tidelift\"\n            }\n        ]\n    },\n    {\n        \"name\": \"symfony/event-dispatcher-contracts\",\n        \"version\": \"v2.2.0\",\n        \"version_normalized\": \"2.2.0.0\",\n        \"source\": {\n            \"type\": \"git\",\n            \"url\": \"https://github.com/symfony/event-dispatcher-contracts.git\",\n            \"reference\": \"0ba7d54483095a198fa51781bc608d17e84dffa2\"\n        },\n        \"dist\": {\n            \"type\": \"zip\",\n            \"url\": \"https://api.github.com/repos/symfony/event-dispatcher-contracts/zipball/0ba7d54483095a198fa51781bc608d17e84dffa2\",\n            \"reference\": \"0ba7d54483095a198fa51781bc608d17e84dffa2\",\n            \"shasum\": \"\"\n        },\n        \"require\": {\n            \"php\": \">=7.2.5\",\n            \"psr/event-dispatcher\": \"^1\"\n        },\n        \"suggest\": {\n            \"symfony/event-dispatcher-implementation\": \"\"\n        },\n        \"time\": \"2020-09-07T11:33:47+00:00\",\n        \"type\": \"library\",\n        \"extra\": {\n            \"branch-alias\": {\n                \"dev-master\": \"2.2-dev\"\n            },\n            \"thanks\": {\n                \"name\": \"symfony/contracts\",\n                \"url\": \"https://github.com/symfony/contracts\"\n            }\n        },\n        \"installation-source\": \"dist\",\n        \"autoload\": {\n            \"psr-4\": {\n                \"Symfony\\\\Contracts\\\\EventDispatcher\\\\\": \"\"\n            }\n        },\n        \"notification-url\": \"https://packagist.org/downloads/\",\n        \"license\": [\n            \"MIT\"\n        ],\n        \"authors\": [\n            {\n                \"name\": \"Nicolas Grekas\",\n                \"email\": \"p@tchwork.com\"\n            },\n            {\n                \"name\": \"Symfony Community\",\n                \"homepage\": \"https://symfony.com/contributors\"\n            }\n        ],\n        \"description\": \"Generic abstractions related to dispatching event\",\n        \"homepage\": \"https://symfony.com\",\n        \"keywords\": [\n            \"abstractions\",\n            \"contracts\",\n            \"decoupling\",\n            \"interfaces\",\n            \"interoperability\",\n            \"standards\"\n        ],\n        \"funding\": [\n            {\n                \"url\": \"https://symfony.com/sponsor\",\n                \"type\": \"custom\"\n            },\n            {\n                \"url\": \"https://github.com/fabpot\",\n                \"type\": \"github\"\n            },\n            {\n                \"url\": \"https://tidelift.com/funding/github/packagist/symfony/symfony\",\n                \"type\": \"tidelift\"\n            }\n        ]\n    },\n    {\n        \"name\": \"symfony/expression-language\",\n        \"version\": \"v5.1.8\",\n        \"version_normalized\": \"5.1.8.0\",\n        \"source\": {\n            \"type\": \"git\",\n            \"url\": \"https://github.com/symfony/expression-language.git\",\n            \"reference\": \"2c3f5e7cf4495d9033cc2d212da6ccde0d22b067\"\n        },\n        \"dist\": {\n            \"type\": \"zip\",\n            \"url\": \"https://api.github.com/repos/symfony/expression-language/zipball/2c3f5e7cf4495d9033cc2d212da6ccde0d22b067\",\n            \"reference\": \"2c3f5e7cf4495d9033cc2d212da6ccde0d22b067\",\n            \"shasum\": \"\"\n        },\n        \"require\": {\n            \"php\": \">=7.2.5\",\n            \"symfony/cache\": \"^4.4|^5.0\",\n            \"symfony/polyfill-php80\": \"^1.15\",\n            \"symfony/service-contracts\": \"^1.1|^2\"\n        },\n        \"time\": \"2020-10-24T12:01:57+00:00\",\n        \"type\": \"library\",\n        \"installation-source\": \"dist\",\n        \"autoload\": {\n            \"psr-4\": {\n                \"Symfony\\\\Component\\\\ExpressionLanguage\\\\\": \"\"\n            },\n            \"exclude-from-classmap\": [\n                \"/Tests/\"\n            ]\n        },\n        \"notification-url\": \"https://packagist.org/downloads/\",\n        \"license\": [\n            \"MIT\"\n        ],\n        \"authors\": [\n            {\n                \"name\": \"Fabien Potencier\",\n                \"email\": \"fabien@symfony.com\"\n            },\n            {\n                \"name\": \"Symfony Community\",\n                \"homepage\": \"https://symfony.com/contributors\"\n            }\n        ],\n        \"description\": \"Symfony ExpressionLanguage Component\",\n        \"homepage\": \"https://symfony.com\",\n        \"funding\": [\n            {\n                \"url\": \"https://symfony.com/sponsor\",\n                \"type\": \"custom\"\n            },\n            {\n                \"url\": \"https://github.com/fabpot\",\n                \"type\": \"github\"\n            },\n            {\n                \"url\": \"https://tidelift.com/funding/github/packagist/symfony/symfony\",\n                \"type\": \"tidelift\"\n            }\n        ]\n    },\n    {\n        \"name\": \"symfony/filesystem\",\n        \"version\": \"v5.1.8\",\n        \"version_normalized\": \"5.1.8.0\",\n        \"source\": {\n            \"type\": \"git\",\n            \"url\": \"https://github.com/symfony/filesystem.git\",\n            \"reference\": \"df08650ea7aee2d925380069c131a66124d79177\"\n        },\n        \"dist\": {\n            \"type\": \"zip\",\n            \"url\": \"https://api.github.com/repos/symfony/filesystem/zipball/df08650ea7aee2d925380069c131a66124d79177\",\n            \"reference\": \"df08650ea7aee2d925380069c131a66124d79177\",\n            \"shasum\": \"\"\n        },\n        \"require\": {\n            \"php\": \">=7.2.5\",\n            \"symfony/polyfill-ctype\": \"~1.8\"\n        },\n        \"time\": \"2020-10-24T12:01:57+00:00\",\n        \"type\": \"library\",\n        \"installation-source\": \"dist\",\n        \"autoload\": {\n            \"psr-4\": {\n                \"Symfony\\\\Component\\\\Filesystem\\\\\": \"\"\n            },\n            \"exclude-from-classmap\": [\n                \"/Tests/\"\n            ]\n        },\n        \"notification-url\": \"https://packagist.org/downloads/\",\n        \"license\": [\n            \"MIT\"\n        ],\n        \"authors\": [\n            {\n                \"name\": \"Fabien Potencier\",\n                \"email\": \"fabien@symfony.com\"\n            },\n            {\n                \"name\": \"Symfony Community\",\n                \"homepage\": \"https://symfony.com/contributors\"\n            }\n        ],\n        \"description\": \"Symfony Filesystem Component\",\n        \"homepage\": \"https://symfony.com\",\n        \"funding\": [\n            {\n                \"url\": \"https://symfony.com/sponsor\",\n                \"type\": \"custom\"\n            },\n            {\n                \"url\": \"https://github.com/fabpot\",\n                \"type\": \"github\"\n            },\n            {\n                \"url\": \"https://tidelift.com/funding/github/packagist/symfony/symfony\",\n                \"type\": \"tidelift\"\n            }\n        ]\n    },\n    {\n        \"name\": \"symfony/finder\",\n        \"version\": \"v5.1.8\",\n        \"version_normalized\": \"5.1.8.0\",\n        \"source\": {\n            \"type\": \"git\",\n            \"url\": \"https://github.com/symfony/finder.git\",\n            \"reference\": \"e70eb5a69c2ff61ea135a13d2266e8914a67b3a0\"\n        },\n        \"dist\": {\n            \"type\": \"zip\",\n            \"url\": \"https://api.github.com/repos/symfony/finder/zipball/e70eb5a69c2ff61ea135a13d2266e8914a67b3a0\",\n            \"reference\": \"e70eb5a69c2ff61ea135a13d2266e8914a67b3a0\",\n            \"shasum\": \"\"\n        },\n        \"require\": {\n            \"php\": \">=7.2.5\"\n        },\n        \"time\": \"2020-10-24T12:01:57+00:00\",\n        \"type\": \"library\",\n        \"installation-source\": \"dist\",\n        \"autoload\": {\n            \"psr-4\": {\n                \"Symfony\\\\Component\\\\Finder\\\\\": \"\"\n            },\n            \"exclude-from-classmap\": [\n                \"/Tests/\"\n            ]\n        },\n        \"notification-url\": \"https://packagist.org/downloads/\",\n        \"license\": [\n            \"MIT\"\n        ],\n        \"authors\": [\n            {\n                \"name\": \"Fabien Potencier\",\n                \"email\": \"fabien@symfony.com\"\n            },\n            {\n                \"name\": \"Symfony Community\",\n                \"homepage\": \"https://symfony.com/contributors\"\n            }\n        ],\n        \"description\": \"Symfony Finder Component\",\n        \"homepage\": \"https://symfony.com\",\n        \"funding\": [\n            {\n                \"url\": \"https://symfony.com/sponsor\",\n                \"type\": \"custom\"\n            },\n            {\n                \"url\": \"https://github.com/fabpot\",\n                \"type\": \"github\"\n            },\n            {\n                \"url\": \"https://tidelift.com/funding/github/packagist/symfony/symfony\",\n                \"type\": \"tidelift\"\n            }\n        ]\n    },\n    {\n        \"name\": \"symfony/flex\",\n        \"version\": \"v1.10.0\",\n        \"version_normalized\": \"1.10.0.0\",\n        \"source\": {\n            \"type\": \"git\",\n            \"url\": \"https://github.com/symfony/flex.git\",\n            \"reference\": \"e38520236bdc911c2f219634b485bc328746e980\"\n        },\n        \"dist\": {\n            \"type\": \"zip\",\n            \"url\": \"https://api.github.com/repos/symfony/flex/zipball/e38520236bdc911c2f219634b485bc328746e980\",\n            \"reference\": \"e38520236bdc911c2f219634b485bc328746e980\",\n            \"shasum\": \"\"\n        },\n        \"require\": {\n            \"composer-plugin-api\": \"^1.0|^2.0\",\n            \"php\": \">=7.1\"\n        },\n        \"require-dev\": {\n            \"composer/composer\": \"^1.0.2|^2.0\",\n            \"symfony/dotenv\": \"^4.4|^5.0\",\n            \"symfony/phpunit-bridge\": \"^4.4|^5.0\",\n            \"symfony/process\": \"^3.4|^4.4|^5.0\"\n        },\n        \"time\": \"2020-11-05T10:56:45+00:00\",\n        \"type\": \"composer-plugin\",\n        \"extra\": {\n            \"branch-alias\": {\n                \"dev-main\": \"1.9-dev\"\n            },\n            \"class\": \"Symfony\\\\Flex\\\\Flex\"\n        },\n        \"installation-source\": \"dist\",\n        \"autoload\": {\n            \"psr-4\": {\n                \"Symfony\\\\Flex\\\\\": \"src\"\n            }\n        },\n        \"notification-url\": \"https://packagist.org/downloads/\",\n        \"license\": [\n            \"MIT\"\n        ],\n        \"authors\": [\n            {\n                \"name\": \"Fabien Potencier\",\n                \"email\": \"fabien.potencier@gmail.com\"\n            }\n        ],\n        \"description\": \"Composer plugin for Symfony\",\n        \"funding\": [\n            {\n                \"url\": \"https://symfony.com/sponsor\",\n                \"type\": \"custom\"\n            },\n            {\n                \"url\": \"https://github.com/fabpot\",\n                \"type\": \"github\"\n            },\n            {\n                \"url\": \"https://tidelift.com/funding/github/packagist/symfony/symfony\",\n                \"type\": \"tidelift\"\n            }\n        ]\n    },\n    {\n        \"name\": \"symfony/form\",\n        \"version\": \"v5.1.8\",\n        \"version_normalized\": \"5.1.8.0\",\n        \"source\": {\n            \"type\": \"git\",\n            \"url\": \"https://github.com/symfony/form.git\",\n            \"reference\": \"3f61496220b9f8672ede9b9acfb87a06c0c752f2\"\n        },\n        \"dist\": {\n            \"type\": \"zip\",\n            \"url\": \"https://api.github.com/repos/symfony/form/zipball/3f61496220b9f8672ede9b9acfb87a06c0c752f2\",\n            \"reference\": \"3f61496220b9f8672ede9b9acfb87a06c0c752f2\",\n            \"shasum\": \"\"\n        },\n        \"require\": {\n            \"php\": \">=7.2.5\",\n            \"symfony/deprecation-contracts\": \"^2.1\",\n            \"symfony/event-dispatcher\": \"^4.4|^5.0\",\n            \"symfony/intl\": \"^4.4|^5.0\",\n            \"symfony/options-resolver\": \"^5.1\",\n            \"symfony/polyfill-ctype\": \"~1.8\",\n            \"symfony/polyfill-mbstring\": \"~1.0\",\n            \"symfony/polyfill-php80\": \"^1.15\",\n            \"symfony/property-access\": \"^5.0.8\",\n            \"symfony/service-contracts\": \"^1.1|^2\"\n        },\n        \"conflict\": {\n            \"phpunit/phpunit\": \"<5.4.3\",\n            \"symfony/console\": \"<4.4\",\n            \"symfony/dependency-injection\": \"<4.4\",\n            \"symfony/doctrine-bridge\": \"<4.4\",\n            \"symfony/error-handler\": \"<4.4.5\",\n            \"symfony/framework-bundle\": \"<4.4\",\n            \"symfony/http-kernel\": \"<4.4\",\n            \"symfony/intl\": \"<4.4\",\n            \"symfony/translation\": \"<4.4\",\n            \"symfony/translation-contracts\": \"<1.1.7\",\n            \"symfony/twig-bridge\": \"<4.4\"\n        },\n        \"require-dev\": {\n            \"doctrine/collections\": \"~1.0\",\n            \"symfony/config\": \"^4.4|^5.0\",\n            \"symfony/console\": \"^4.4|^5.0\",\n            \"symfony/dependency-injection\": \"^4.4|^5.0\",\n            \"symfony/expression-language\": \"^4.4|^5.0\",\n            \"symfony/http-foundation\": \"^4.4|^5.0\",\n            \"symfony/http-kernel\": \"^4.4|^5.0\",\n            \"symfony/security-csrf\": \"^4.4|^5.0\",\n            \"symfony/translation\": \"^4.4|^5.0\",\n            \"symfony/validator\": \"^4.4.12|^5.1.6\",\n            \"symfony/var-dumper\": \"^4.4|^5.0\"\n        },\n        \"suggest\": {\n            \"symfony/security-csrf\": \"For protecting forms against CSRF attacks.\",\n            \"symfony/twig-bridge\": \"For templating with Twig.\",\n            \"symfony/validator\": \"For form validation.\"\n        },\n        \"time\": \"2020-10-28T05:25:38+00:00\",\n        \"type\": \"library\",\n        \"installation-source\": \"dist\",\n        \"autoload\": {\n            \"psr-4\": {\n                \"Symfony\\\\Component\\\\Form\\\\\": \"\"\n            },\n            \"exclude-from-classmap\": [\n                \"/Tests/\"\n            ]\n        },\n        \"notification-url\": \"https://packagist.org/downloads/\",\n        \"license\": [\n            \"MIT\"\n        ],\n        \"authors\": [\n            {\n                \"name\": \"Fabien Potencier\",\n                \"email\": \"fabien@symfony.com\"\n            },\n            {\n                \"name\": \"Symfony Community\",\n                \"homepage\": \"https://symfony.com/contributors\"\n            }\n        ],\n        \"description\": \"Symfony Form Component\",\n        \"homepage\": \"https://symfony.com\",\n        \"funding\": [\n            {\n                \"url\": \"https://symfony.com/sponsor\",\n                \"type\": \"custom\"\n            },\n            {\n                \"url\": \"https://github.com/fabpot\",\n                \"type\": \"github\"\n            },\n            {\n                \"url\": \"https://tidelift.com/funding/github/packagist/symfony/symfony\",\n                \"type\": \"tidelift\"\n            }\n        ]\n    },\n    {\n        \"name\": \"symfony/framework-bundle\",\n        \"version\": \"v5.1.8\",\n        \"version_normalized\": \"5.1.8.0\",\n        \"source\": {\n            \"type\": \"git\",\n            \"url\": \"https://github.com/symfony/framework-bundle.git\",\n            \"reference\": \"b5f961afc6cd1923c49cac0993c65bf5eee27d86\"\n        },\n        \"dist\": {\n            \"type\": \"zip\",\n            \"url\": \"https://api.github.com/repos/symfony/framework-bundle/zipball/b5f961afc6cd1923c49cac0993c65bf5eee27d86\",\n            \"reference\": \"b5f961afc6cd1923c49cac0993c65bf5eee27d86\",\n            \"shasum\": \"\"\n        },\n        \"require\": {\n            \"ext-xml\": \"*\",\n            \"php\": \">=7.2.5\",\n            \"symfony/cache\": \"^4.4|^5.0\",\n            \"symfony/config\": \"^5.0\",\n            \"symfony/dependency-injection\": \"^5.1\",\n            \"symfony/error-handler\": \"^4.4.1|^5.0.1\",\n            \"symfony/event-dispatcher\": \"^5.1\",\n            \"symfony/filesystem\": \"^4.4|^5.0\",\n            \"symfony/finder\": \"^4.4|^5.0\",\n            \"symfony/http-foundation\": \"^4.4|^5.0\",\n            \"symfony/http-kernel\": \"^5.0\",\n            \"symfony/polyfill-mbstring\": \"~1.0\",\n            \"symfony/polyfill-php80\": \"^1.15\",\n            \"symfony/routing\": \"^5.1\"\n        },\n        \"conflict\": {\n            \"doctrine/persistence\": \"<1.3\",\n            \"phpdocumentor/reflection-docblock\": \"<3.0\",\n            \"phpdocumentor/type-resolver\": \"<0.2.1\",\n            \"phpunit/phpunit\": \"<5.4.3\",\n            \"symfony/asset\": \"<5.1\",\n            \"symfony/browser-kit\": \"<4.4\",\n            \"symfony/console\": \"<4.4\",\n            \"symfony/dom-crawler\": \"<4.4\",\n            \"symfony/dotenv\": \"<5.1\",\n            \"symfony/form\": \"<4.4\",\n            \"symfony/http-client\": \"<4.4\",\n            \"symfony/lock\": \"<4.4\",\n            \"symfony/mailer\": \"<4.4\",\n            \"symfony/messenger\": \"<4.4\",\n            \"symfony/mime\": \"<4.4\",\n            \"symfony/property-info\": \"<4.4\",\n            \"symfony/serializer\": \"<4.4\",\n            \"symfony/stopwatch\": \"<4.4\",\n            \"symfony/translation\": \"<5.0\",\n            \"symfony/twig-bridge\": \"<4.4\",\n            \"symfony/twig-bundle\": \"<4.4\",\n            \"symfony/validator\": \"<4.4\",\n            \"symfony/web-profiler-bundle\": \"<4.4\",\n            \"symfony/workflow\": \"<4.4\"\n        },\n        \"require-dev\": {\n            \"doctrine/annotations\": \"~1.7\",\n            \"doctrine/cache\": \"~1.0\",\n            \"paragonie/sodium_compat\": \"^1.8\",\n            \"phpdocumentor/reflection-docblock\": \"^3.0|^4.0\",\n            \"symfony/asset\": \"^5.1\",\n            \"symfony/browser-kit\": \"^4.4|^5.0\",\n            \"symfony/console\": \"^4.4|^5.0\",\n            \"symfony/css-selector\": \"^4.4|^5.0\",\n            \"symfony/dom-crawler\": \"^4.4|^5.0\",\n            \"symfony/dotenv\": \"^5.1\",\n            \"symfony/expression-language\": \"^4.4|^5.0\",\n            \"symfony/form\": \"^4.4|^5.0\",\n            \"symfony/http-client\": \"^4.4|^5.0\",\n            \"symfony/lock\": \"^4.4|^5.0\",\n            \"symfony/mailer\": \"^4.4|^5.0\",\n            \"symfony/messenger\": \"^4.4|^5.0\",\n            \"symfony/mime\": \"^4.4|^5.0\",\n            \"symfony/polyfill-intl-icu\": \"~1.0\",\n            \"symfony/process\": \"^4.4|^5.0\",\n            \"symfony/property-info\": \"^4.4|^5.0\",\n            \"symfony/security-bundle\": \"^5.1\",\n            \"symfony/security-csrf\": \"^4.4|^5.0\",\n            \"symfony/security-http\": \"^4.4|^5.0\",\n            \"symfony/serializer\": \"^4.4|^5.0\",\n            \"symfony/stopwatch\": \"^4.4|^5.0\",\n            \"symfony/string\": \"^5.0\",\n            \"symfony/translation\": \"^5.0\",\n            \"symfony/twig-bundle\": \"^4.4|^5.0\",\n            \"symfony/validator\": \"^4.4|^5.0\",\n            \"symfony/web-link\": \"^4.4|^5.0\",\n            \"symfony/workflow\": \"^4.4|^5.0\",\n            \"symfony/yaml\": \"^4.4|^5.0\",\n            \"twig/twig\": \"^2.10|^3.0\"\n        },\n        \"suggest\": {\n            \"ext-apcu\": \"For best performance of the system caches\",\n            \"symfony/console\": \"For using the console commands\",\n            \"symfony/form\": \"For using forms\",\n            \"symfony/property-info\": \"For using the property_info service\",\n            \"symfony/serializer\": \"For using the serializer service\",\n            \"symfony/validator\": \"For using validation\",\n            \"symfony/web-link\": \"For using web links, features such as preloading, prefetching or prerendering\",\n            \"symfony/yaml\": \"For using the debug:config and lint:yaml commands\"\n        },\n        \"time\": \"2020-10-24T12:01:57+00:00\",\n        \"type\": \"symfony-bundle\",\n        \"installation-source\": \"dist\",\n        \"autoload\": {\n            \"psr-4\": {\n                \"Symfony\\\\Bundle\\\\FrameworkBundle\\\\\": \"\"\n            },\n            \"exclude-from-classmap\": [\n                \"/Tests/\"\n            ]\n        },\n        \"notification-url\": \"https://packagist.org/downloads/\",\n        \"license\": [\n            \"MIT\"\n        ],\n        \"authors\": [\n            {\n                \"name\": \"Fabien Potencier\",\n                \"email\": \"fabien@symfony.com\"\n            },\n            {\n                \"name\": \"Symfony Community\",\n                \"homepage\": \"https://symfony.com/contributors\"\n            }\n        ],\n        \"description\": \"Symfony FrameworkBundle\",\n        \"homepage\": \"https://symfony.com\",\n        \"funding\": [\n            {\n                \"url\": \"https://symfony.com/sponsor\",\n                \"type\": \"custom\"\n            },\n            {\n                \"url\": \"https://github.com/fabpot\",\n                \"type\": \"github\"\n            },\n            {\n                \"url\": \"https://tidelift.com/funding/github/packagist/symfony/symfony\",\n                \"type\": \"tidelift\"\n            }\n        ]\n    },\n    {\n        \"name\": \"symfony/google-mailer\",\n        \"version\": \"v5.1.8\",\n        \"version_normalized\": \"5.1.8.0\",\n        \"source\": {\n            \"type\": \"git\",\n            \"url\": \"https://github.com/symfony/google-mailer.git\",\n            \"reference\": \"9f459cbd57dd33a70fd8aa475575641ea4ae3369\"\n        },\n        \"dist\": {\n            \"type\": \"zip\",\n            \"url\": \"https://api.github.com/repos/symfony/google-mailer/zipball/9f459cbd57dd33a70fd8aa475575641ea4ae3369\",\n            \"reference\": \"9f459cbd57dd33a70fd8aa475575641ea4ae3369\",\n            \"shasum\": \"\"\n        },\n        \"require\": {\n            \"php\": \">=7.2.5\",\n            \"symfony/mailer\": \"^4.4|^5.0\"\n        },\n        \"require-dev\": {\n            \"symfony/http-client\": \"^4.4|^5.0\"\n        },\n        \"time\": \"2020-10-24T12:01:57+00:00\",\n        \"type\": \"symfony-bridge\",\n        \"installation-source\": \"dist\",\n        \"autoload\": {\n            \"psr-4\": {\n                \"Symfony\\\\Component\\\\Mailer\\\\Bridge\\\\Google\\\\\": \"\"\n            },\n            \"exclude-from-classmap\": [\n                \"/Tests/\"\n            ]\n        },\n        \"notification-url\": \"https://packagist.org/downloads/\",\n        \"license\": [\n            \"MIT\"\n        ],\n        \"authors\": [\n            {\n                \"name\": \"Fabien Potencier\",\n                \"email\": \"fabien@symfony.com\"\n            },\n            {\n                \"name\": \"Symfony Community\",\n                \"homepage\": \"https://symfony.com/contributors\"\n            }\n        ],\n        \"description\": \"Symfony Google Mailer Bridge\",\n        \"homepage\": \"https://symfony.com\",\n        \"funding\": [\n            {\n                \"url\": \"https://symfony.com/sponsor\",\n                \"type\": \"custom\"\n            },\n            {\n                \"url\": \"https://github.com/fabpot\",\n                \"type\": \"github\"\n            },\n            {\n                \"url\": \"https://tidelift.com/funding/github/packagist/symfony/symfony\",\n                \"type\": \"tidelift\"\n            }\n        ]\n    },\n    {\n        \"name\": \"symfony/http-client\",\n        \"version\": \"v5.1.8\",\n        \"version_normalized\": \"5.1.8.0\",\n        \"source\": {\n            \"type\": \"git\",\n            \"url\": \"https://github.com/symfony/http-client.git\",\n            \"reference\": \"97a6a1f9f5bb3a6094833107b58a72bc9a9165cc\"\n        },\n        \"dist\": {\n            \"type\": \"zip\",\n            \"url\": \"https://api.github.com/repos/symfony/http-client/zipball/97a6a1f9f5bb3a6094833107b58a72bc9a9165cc\",\n            \"reference\": \"97a6a1f9f5bb3a6094833107b58a72bc9a9165cc\",\n            \"shasum\": \"\"\n        },\n        \"require\": {\n            \"php\": \">=7.2.5\",\n            \"psr/log\": \"^1.0\",\n            \"symfony/http-client-contracts\": \"^2.2\",\n            \"symfony/polyfill-php73\": \"^1.11\",\n            \"symfony/polyfill-php80\": \"^1.15\",\n            \"symfony/service-contracts\": \"^1.0|^2\"\n        },\n        \"provide\": {\n            \"php-http/async-client-implementation\": \"*\",\n            \"php-http/client-implementation\": \"*\",\n            \"psr/http-client-implementation\": \"1.0\",\n            \"symfony/http-client-implementation\": \"1.1\"\n        },\n        \"require-dev\": {\n            \"amphp/http-client\": \"^4.2.1\",\n            \"amphp/http-tunnel\": \"^1.0\",\n            \"amphp/socket\": \"^1.1\",\n            \"guzzlehttp/promises\": \"^1.3.1\",\n            \"nyholm/psr7\": \"^1.0\",\n            \"php-http/httplug\": \"^1.0|^2.0\",\n            \"psr/http-client\": \"^1.0\",\n            \"symfony/dependency-injection\": \"^4.4|^5.0\",\n            \"symfony/http-kernel\": \"^4.4.13|^5.1.5\",\n            \"symfony/process\": \"^4.4|^5.0\"\n        },\n        \"time\": \"2020-10-24T12:01:57+00:00\",\n        \"type\": \"library\",\n        \"installation-source\": \"dist\",\n        \"autoload\": {\n            \"psr-4\": {\n                \"Symfony\\\\Component\\\\HttpClient\\\\\": \"\"\n            },\n            \"exclude-from-classmap\": [\n                \"/Tests/\"\n            ]\n        },\n        \"notification-url\": \"https://packagist.org/downloads/\",\n        \"license\": [\n            \"MIT\"\n        ],\n        \"authors\": [\n            {\n                \"name\": \"Nicolas Grekas\",\n                \"email\": \"p@tchwork.com\"\n            },\n            {\n                \"name\": \"Symfony Community\",\n                \"homepage\": \"https://symfony.com/contributors\"\n            }\n        ],\n        \"description\": \"Symfony HttpClient component\",\n        \"homepage\": \"https://symfony.com\",\n        \"funding\": [\n            {\n                \"url\": \"https://symfony.com/sponsor\",\n                \"type\": \"custom\"\n            },\n            {\n                \"url\": \"https://github.com/fabpot\",\n                \"type\": \"github\"\n            },\n            {\n                \"url\": \"https://tidelift.com/funding/github/packagist/symfony/symfony\",\n                \"type\": \"tidelift\"\n            }\n        ]\n    },\n    {\n        \"name\": \"symfony/http-client-contracts\",\n        \"version\": \"v2.3.1\",\n        \"version_normalized\": \"2.3.1.0\",\n        \"source\": {\n            \"type\": \"git\",\n            \"url\": \"https://github.com/symfony/http-client-contracts.git\",\n            \"reference\": \"41db680a15018f9c1d4b23516059633ce280ca33\"\n        },\n        \"dist\": {\n            \"type\": \"zip\",\n            \"url\": \"https://api.github.com/repos/symfony/http-client-contracts/zipball/41db680a15018f9c1d4b23516059633ce280ca33\",\n            \"reference\": \"41db680a15018f9c1d4b23516059633ce280ca33\",\n            \"shasum\": \"\"\n        },\n        \"require\": {\n            \"php\": \">=7.2.5\"\n        },\n        \"suggest\": {\n            \"symfony/http-client-implementation\": \"\"\n        },\n        \"time\": \"2020-10-14T17:08:19+00:00\",\n        \"type\": \"library\",\n        \"extra\": {\n            \"branch-version\": \"2.3\",\n            \"branch-alias\": {\n                \"dev-main\": \"2.3-dev\"\n            },\n            \"thanks\": {\n                \"name\": \"symfony/contracts\",\n                \"url\": \"https://github.com/symfony/contracts\"\n            }\n        },\n        \"installation-source\": \"dist\",\n        \"autoload\": {\n            \"psr-4\": {\n                \"Symfony\\\\Contracts\\\\HttpClient\\\\\": \"\"\n            }\n        },\n        \"notification-url\": \"https://packagist.org/downloads/\",\n        \"license\": [\n            \"MIT\"\n        ],\n        \"authors\": [\n            {\n                \"name\": \"Nicolas Grekas\",\n                \"email\": \"p@tchwork.com\"\n            },\n            {\n                \"name\": \"Symfony Community\",\n                \"homepage\": \"https://symfony.com/contributors\"\n            }\n        ],\n        \"description\": \"Generic abstractions related to HTTP clients\",\n        \"homepage\": \"https://symfony.com\",\n        \"keywords\": [\n            \"abstractions\",\n            \"contracts\",\n            \"decoupling\",\n            \"interfaces\",\n            \"interoperability\",\n            \"standards\"\n        ],\n        \"funding\": [\n            {\n                \"url\": \"https://symfony.com/sponsor\",\n                \"type\": \"custom\"\n            },\n            {\n                \"url\": \"https://github.com/fabpot\",\n                \"type\": \"github\"\n            },\n            {\n                \"url\": \"https://tidelift.com/funding/github/packagist/symfony/symfony\",\n                \"type\": \"tidelift\"\n            }\n        ]\n    },\n    {\n        \"name\": \"symfony/http-foundation\",\n        \"version\": \"v5.1.8\",\n        \"version_normalized\": \"5.1.8.0\",\n        \"source\": {\n            \"type\": \"git\",\n            \"url\": \"https://github.com/symfony/http-foundation.git\",\n            \"reference\": \"a2860ec970404b0233ab1e59e0568d3277d32b6f\"\n        },\n        \"dist\": {\n            \"type\": \"zip\",\n            \"url\": \"https://api.github.com/repos/symfony/http-foundation/zipball/a2860ec970404b0233ab1e59e0568d3277d32b6f\",\n            \"reference\": \"a2860ec970404b0233ab1e59e0568d3277d32b6f\",\n            \"shasum\": \"\"\n        },\n        \"require\": {\n            \"php\": \">=7.2.5\",\n            \"symfony/deprecation-contracts\": \"^2.1\",\n            \"symfony/polyfill-mbstring\": \"~1.1\",\n            \"symfony/polyfill-php80\": \"^1.15\"\n        },\n        \"require-dev\": {\n            \"predis/predis\": \"~1.0\",\n            \"symfony/cache\": \"^4.4|^5.0\",\n            \"symfony/expression-language\": \"^4.4|^5.0\",\n            \"symfony/mime\": \"^4.4|^5.0\"\n        },\n        \"suggest\": {\n            \"symfony/mime\": \"To use the file extension guesser\"\n        },\n        \"time\": \"2020-10-24T12:01:57+00:00\",\n        \"type\": \"library\",\n        \"installation-source\": \"dist\",\n        \"autoload\": {\n            \"psr-4\": {\n                \"Symfony\\\\Component\\\\HttpFoundation\\\\\": \"\"\n            },\n            \"exclude-from-classmap\": [\n                \"/Tests/\"\n            ]\n        },\n        \"notification-url\": \"https://packagist.org/downloads/\",\n        \"license\": [\n            \"MIT\"\n        ],\n        \"authors\": [\n            {\n                \"name\": \"Fabien Potencier\",\n                \"email\": \"fabien@symfony.com\"\n            },\n            {\n                \"name\": \"Symfony Community\",\n                \"homepage\": \"https://symfony.com/contributors\"\n            }\n        ],\n        \"description\": \"Symfony HttpFoundation Component\",\n        \"homepage\": \"https://symfony.com\",\n        \"funding\": [\n            {\n                \"url\": \"https://symfony.com/sponsor\",\n                \"type\": \"custom\"\n            },\n            {\n                \"url\": \"https://github.com/fabpot\",\n                \"type\": \"github\"\n            },\n            {\n                \"url\": \"https://tidelift.com/funding/github/packagist/symfony/symfony\",\n                \"type\": \"tidelift\"\n            }\n        ]\n    },\n    {\n        \"name\": \"symfony/http-kernel\",\n        \"version\": \"v5.1.8\",\n        \"version_normalized\": \"5.1.8.0\",\n        \"source\": {\n            \"type\": \"git\",\n            \"url\": \"https://github.com/symfony/http-kernel.git\",\n            \"reference\": \"a13b3c4d994a4fd051f4c6800c5e33c9508091dd\"\n        },\n        \"dist\": {\n            \"type\": \"zip\",\n            \"url\": \"https://api.github.com/repos/symfony/http-kernel/zipball/a13b3c4d994a4fd051f4c6800c5e33c9508091dd\",\n            \"reference\": \"a13b3c4d994a4fd051f4c6800c5e33c9508091dd\",\n            \"shasum\": \"\"\n        },\n        \"require\": {\n            \"php\": \">=7.2.5\",\n            \"psr/log\": \"~1.0\",\n            \"symfony/deprecation-contracts\": \"^2.1\",\n            \"symfony/error-handler\": \"^4.4|^5.0\",\n            \"symfony/event-dispatcher\": \"^5.0\",\n            \"symfony/http-client-contracts\": \"^1.1|^2\",\n            \"symfony/http-foundation\": \"^4.4|^5.0\",\n            \"symfony/polyfill-ctype\": \"^1.8\",\n            \"symfony/polyfill-php73\": \"^1.9\",\n            \"symfony/polyfill-php80\": \"^1.15\"\n        },\n        \"conflict\": {\n            \"symfony/browser-kit\": \"<4.4\",\n            \"symfony/cache\": \"<5.0\",\n            \"symfony/config\": \"<5.0\",\n            \"symfony/console\": \"<4.4\",\n            \"symfony/dependency-injection\": \"<4.4\",\n            \"symfony/doctrine-bridge\": \"<5.0\",\n            \"symfony/form\": \"<5.0\",\n            \"symfony/http-client\": \"<5.0\",\n            \"symfony/mailer\": \"<5.0\",\n            \"symfony/messenger\": \"<5.0\",\n            \"symfony/translation\": \"<5.0\",\n            \"symfony/twig-bridge\": \"<5.0\",\n            \"symfony/validator\": \"<5.0\",\n            \"twig/twig\": \"<2.4\"\n        },\n        \"provide\": {\n            \"psr/log-implementation\": \"1.0\"\n        },\n        \"require-dev\": {\n            \"psr/cache\": \"~1.0\",\n            \"symfony/browser-kit\": \"^4.4|^5.0\",\n            \"symfony/config\": \"^5.0\",\n            \"symfony/console\": \"^4.4|^5.0\",\n            \"symfony/css-selector\": \"^4.4|^5.0\",\n            \"symfony/dependency-injection\": \"^4.4|^5.0\",\n            \"symfony/dom-crawler\": \"^4.4|^5.0\",\n            \"symfony/expression-language\": \"^4.4|^5.0\",\n            \"symfony/finder\": \"^4.4|^5.0\",\n            \"symfony/process\": \"^4.4|^5.0\",\n            \"symfony/routing\": \"^4.4|^5.0\",\n            \"symfony/stopwatch\": \"^4.4|^5.0\",\n            \"symfony/translation\": \"^4.4|^5.0\",\n            \"symfony/translation-contracts\": \"^1.1|^2\",\n            \"twig/twig\": \"^2.4|^3.0\"\n        },\n        \"suggest\": {\n            \"symfony/browser-kit\": \"\",\n            \"symfony/config\": \"\",\n            \"symfony/console\": \"\",\n            \"symfony/dependency-injection\": \"\"\n        },\n        \"time\": \"2020-10-28T05:55:23+00:00\",\n        \"type\": \"library\",\n        \"installation-source\": \"dist\",\n        \"autoload\": {\n            \"psr-4\": {\n                \"Symfony\\\\Component\\\\HttpKernel\\\\\": \"\"\n            },\n            \"exclude-from-classmap\": [\n                \"/Tests/\"\n            ]\n        },\n        \"notification-url\": \"https://packagist.org/downloads/\",\n        \"license\": [\n            \"MIT\"\n        ],\n        \"authors\": [\n            {\n                \"name\": \"Fabien Potencier\",\n                \"email\": \"fabien@symfony.com\"\n            },\n            {\n                \"name\": \"Symfony Community\",\n                \"homepage\": \"https://symfony.com/contributors\"\n            }\n        ],\n        \"description\": \"Symfony HttpKernel Component\",\n        \"homepage\": \"https://symfony.com\",\n        \"funding\": [\n            {\n                \"url\": \"https://symfony.com/sponsor\",\n                \"type\": \"custom\"\n            },\n            {\n                \"url\": \"https://github.com/fabpot\",\n                \"type\": \"github\"\n            },\n            {\n                \"url\": \"https://tidelift.com/funding/github/packagist/symfony/symfony\",\n                \"type\": \"tidelift\"\n            }\n        ]\n    },\n    {\n        \"name\": \"symfony/intl\",\n        \"version\": \"v5.1.8\",\n        \"version_normalized\": \"5.1.8.0\",\n        \"source\": {\n            \"type\": \"git\",\n            \"url\": \"https://github.com/symfony/intl.git\",\n            \"reference\": \"e353c6c37afa1ff90739b3941f60ff9fa650eec3\"\n        },\n        \"dist\": {\n            \"type\": \"zip\",\n            \"url\": \"https://api.github.com/repos/symfony/intl/zipball/e353c6c37afa1ff90739b3941f60ff9fa650eec3\",\n            \"reference\": \"e353c6c37afa1ff90739b3941f60ff9fa650eec3\",\n            \"shasum\": \"\"\n        },\n        \"require\": {\n            \"php\": \">=7.2.5\",\n            \"symfony/polyfill-intl-icu\": \"~1.0\",\n            \"symfony/polyfill-php80\": \"^1.15\"\n        },\n        \"require-dev\": {\n            \"symfony/filesystem\": \"^4.4|^5.0\"\n        },\n        \"suggest\": {\n            \"ext-intl\": \"to use the component with locales other than \\\"en\\\"\"\n        },\n        \"time\": \"2020-10-24T12:01:57+00:00\",\n        \"type\": \"library\",\n        \"installation-source\": \"dist\",\n        \"autoload\": {\n            \"psr-4\": {\n                \"Symfony\\\\Component\\\\Intl\\\\\": \"\"\n            },\n            \"classmap\": [\n                \"Resources/stubs\"\n            ],\n            \"exclude-from-classmap\": [\n                \"/Tests/\"\n            ]\n        },\n        \"notification-url\": \"https://packagist.org/downloads/\",\n        \"license\": [\n            \"MIT\"\n        ],\n        \"authors\": [\n            {\n                \"name\": \"Bernhard Schussek\",\n                \"email\": \"bschussek@gmail.com\"\n            },\n            {\n                \"name\": \"Eriksen Costa\",\n                \"email\": \"eriksen.costa@infranology.com.br\"\n            },\n            {\n                \"name\": \"Igor Wiedler\",\n                \"email\": \"igor@wiedler.ch\"\n            },\n            {\n                \"name\": \"Symfony Community\",\n                \"homepage\": \"https://symfony.com/contributors\"\n            }\n        ],\n        \"description\": \"A PHP replacement layer for the C intl extension that includes additional data from the ICU library.\",\n        \"homepage\": \"https://symfony.com\",\n        \"keywords\": [\n            \"i18n\",\n            \"icu\",\n            \"internationalization\",\n            \"intl\",\n            \"l10n\",\n            \"localization\"\n        ],\n        \"funding\": [\n            {\n                \"url\": \"https://symfony.com/sponsor\",\n                \"type\": \"custom\"\n            },\n            {\n                \"url\": \"https://github.com/fabpot\",\n                \"type\": \"github\"\n            },\n            {\n                \"url\": \"https://tidelift.com/funding/github/packagist/symfony/symfony\",\n                \"type\": \"tidelift\"\n            }\n        ]\n    },\n    {\n        \"name\": \"symfony/mailer\",\n        \"version\": \"v5.1.8\",\n        \"version_normalized\": \"5.1.8.0\",\n        \"source\": {\n            \"type\": \"git\",\n            \"url\": \"https://github.com/symfony/mailer.git\",\n            \"reference\": \"fa5cc9f894a5d082e7e46bfdd44f5dd83529f0ba\"\n        },\n        \"dist\": {\n            \"type\": \"zip\",\n            \"url\": \"https://api.github.com/repos/symfony/mailer/zipball/fa5cc9f894a5d082e7e46bfdd44f5dd83529f0ba\",\n            \"reference\": \"fa5cc9f894a5d082e7e46bfdd44f5dd83529f0ba\",\n            \"shasum\": \"\"\n        },\n        \"require\": {\n            \"egulias/email-validator\": \"^2.1.10\",\n            \"php\": \">=7.2.5\",\n            \"psr/log\": \"~1.0\",\n            \"symfony/event-dispatcher\": \"^4.4|^5.0\",\n            \"symfony/mime\": \"^4.4|^5.0\",\n            \"symfony/polyfill-php80\": \"^1.15\",\n            \"symfony/service-contracts\": \"^1.1|^2\"\n        },\n        \"conflict\": {\n            \"symfony/http-kernel\": \"<4.4\"\n        },\n        \"require-dev\": {\n            \"symfony/amazon-mailer\": \"^4.4|^5.0\",\n            \"symfony/google-mailer\": \"^4.4|^5.0\",\n            \"symfony/http-client-contracts\": \"^1.1|^2\",\n            \"symfony/mailchimp-mailer\": \"^4.4|^5.0\",\n            \"symfony/mailgun-mailer\": \"^4.4|^5.0\",\n            \"symfony/messenger\": \"^4.4|^5.0\",\n            \"symfony/postmark-mailer\": \"^4.4|^5.0\",\n            \"symfony/sendgrid-mailer\": \"^4.4|^5.0\"\n        },\n        \"time\": \"2020-10-24T12:01:57+00:00\",\n        \"type\": \"library\",\n        \"installation-source\": \"dist\",\n        \"autoload\": {\n            \"psr-4\": {\n                \"Symfony\\\\Component\\\\Mailer\\\\\": \"\"\n            },\n            \"exclude-from-classmap\": [\n                \"/Tests/\"\n            ]\n        },\n        \"notification-url\": \"https://packagist.org/downloads/\",\n        \"license\": [\n            \"MIT\"\n        ],\n        \"authors\": [\n            {\n                \"name\": \"Fabien Potencier\",\n                \"email\": \"fabien@symfony.com\"\n            },\n            {\n                \"name\": \"Symfony Community\",\n                \"homepage\": \"https://symfony.com/contributors\"\n            }\n        ],\n        \"description\": \"Symfony Mailer Component\",\n        \"homepage\": \"https://symfony.com\",\n        \"funding\": [\n            {\n                \"url\": \"https://symfony.com/sponsor\",\n                \"type\": \"custom\"\n            },\n            {\n                \"url\": \"https://github.com/fabpot\",\n                \"type\": \"github\"\n            },\n            {\n                \"url\": \"https://tidelift.com/funding/github/packagist/symfony/symfony\",\n                \"type\": \"tidelift\"\n            }\n        ]\n    },\n    {\n        \"name\": \"symfony/maker-bundle\",\n        \"version\": \"v1.23.0\",\n        \"version_normalized\": \"1.23.0.0\",\n        \"source\": {\n            \"type\": \"git\",\n            \"url\": \"https://github.com/symfony/maker-bundle.git\",\n            \"reference\": \"ffaee624a20a462ec2da82942d3c9d8fc8dd1421\"\n        },\n        \"dist\": {\n            \"type\": \"zip\",\n            \"url\": \"https://api.github.com/repos/symfony/maker-bundle/zipball/ffaee624a20a462ec2da82942d3c9d8fc8dd1421\",\n            \"reference\": \"ffaee624a20a462ec2da82942d3c9d8fc8dd1421\",\n            \"shasum\": \"\"\n        },\n        \"require\": {\n            \"doctrine/inflector\": \"^1.2\",\n            \"nikic/php-parser\": \"^4.0\",\n            \"php\": \">=7.1.3\",\n            \"symfony/config\": \"^3.4|^4.0|^5.0\",\n            \"symfony/console\": \"^3.4|^4.0|^5.0\",\n            \"symfony/dependency-injection\": \"^3.4|^4.0|^5.0\",\n            \"symfony/filesystem\": \"^3.4|^4.0|^5.0\",\n            \"symfony/finder\": \"^3.4|^4.0|^5.0\",\n            \"symfony/framework-bundle\": \"^3.4|^4.0|^5.0\",\n            \"symfony/http-kernel\": \"^3.4|^4.0|^5.0\"\n        },\n        \"require-dev\": {\n            \"composer/semver\": \"^3.0@dev\",\n            \"doctrine/doctrine-bundle\": \"^1.8|^2.0\",\n            \"doctrine/orm\": \"^2.3\",\n            \"friendsofphp/php-cs-fixer\": \"^2.8\",\n            \"friendsoftwig/twigcs\": \"^3.1.2\",\n            \"symfony/http-client\": \"^4.3|^5.0\",\n            \"symfony/phpunit-bridge\": \"^4.3|^5.0\",\n            \"symfony/process\": \"^3.4|^4.0|^5.0\",\n            \"symfony/security-core\": \"^3.4|^4.0|^5.0\",\n            \"symfony/yaml\": \"^3.4|^4.0|^5.0\"\n        },\n        \"time\": \"2020-10-28T15:35:16+00:00\",\n        \"type\": \"symfony-bundle\",\n        \"extra\": {\n            \"branch-alias\": {\n                \"dev-master\": \"1.0-dev\"\n            }\n        },\n        \"installation-source\": \"dist\",\n        \"autoload\": {\n            \"psr-4\": {\n                \"Symfony\\\\Bundle\\\\MakerBundle\\\\\": \"src/\"\n            }\n        },\n        \"notification-url\": \"https://packagist.org/downloads/\",\n        \"license\": [\n            \"MIT\"\n        ],\n        \"authors\": [\n            {\n                \"name\": \"Symfony Community\",\n                \"homepage\": \"https://symfony.com/contributors\"\n            }\n        ],\n        \"description\": \"Symfony Maker helps you create empty commands, controllers, form classes, tests and more so you can forget about writing boilerplate code.\",\n        \"homepage\": \"https://symfony.com/doc/current/bundles/SymfonyMakerBundle/index.html\",\n        \"keywords\": [\n            \"code generator\",\n            \"generator\",\n            \"scaffold\",\n            \"scaffolding\"\n        ],\n        \"funding\": [\n            {\n                \"url\": \"https://symfony.com/sponsor\",\n                \"type\": \"custom\"\n            },\n            {\n                \"url\": \"https://github.com/fabpot\",\n                \"type\": \"github\"\n            },\n            {\n                \"url\": \"https://tidelift.com/funding/github/packagist/symfony/symfony\",\n                \"type\": \"tidelift\"\n            }\n        ]\n    },\n    {\n        \"name\": \"symfony/mime\",\n        \"version\": \"v5.1.8\",\n        \"version_normalized\": \"5.1.8.0\",\n        \"source\": {\n            \"type\": \"git\",\n            \"url\": \"https://github.com/symfony/mime.git\",\n            \"reference\": \"f5485a92c24d4bcfc2f3fc648744fb398482ff1b\"\n        },\n        \"dist\": {\n            \"type\": \"zip\",\n            \"url\": \"https://api.github.com/repos/symfony/mime/zipball/f5485a92c24d4bcfc2f3fc648744fb398482ff1b\",\n            \"reference\": \"f5485a92c24d4bcfc2f3fc648744fb398482ff1b\",\n            \"shasum\": \"\"\n        },\n        \"require\": {\n            \"php\": \">=7.2.5\",\n            \"symfony/polyfill-intl-idn\": \"^1.10\",\n            \"symfony/polyfill-mbstring\": \"^1.0\",\n            \"symfony/polyfill-php80\": \"^1.15\"\n        },\n        \"conflict\": {\n            \"symfony/mailer\": \"<4.4\"\n        },\n        \"require-dev\": {\n            \"egulias/email-validator\": \"^2.1.10\",\n            \"symfony/dependency-injection\": \"^4.4|^5.0\"\n        },\n        \"time\": \"2020-10-24T12:01:57+00:00\",\n        \"type\": \"library\",\n        \"installation-source\": \"dist\",\n        \"autoload\": {\n            \"psr-4\": {\n                \"Symfony\\\\Component\\\\Mime\\\\\": \"\"\n            },\n            \"exclude-from-classmap\": [\n                \"/Tests/\"\n            ]\n        },\n        \"notification-url\": \"https://packagist.org/downloads/\",\n        \"license\": [\n            \"MIT\"\n        ],\n        \"authors\": [\n            {\n                \"name\": \"Fabien Potencier\",\n                \"email\": \"fabien@symfony.com\"\n            },\n            {\n                \"name\": \"Symfony Community\",\n                \"homepage\": \"https://symfony.com/contributors\"\n            }\n        ],\n        \"description\": \"A library to manipulate MIME messages\",\n        \"homepage\": \"https://symfony.com\",\n        \"keywords\": [\n            \"mime\",\n            \"mime-type\"\n        ],\n        \"funding\": [\n            {\n                \"url\": \"https://symfony.com/sponsor\",\n                \"type\": \"custom\"\n            },\n            {\n                \"url\": \"https://github.com/fabpot\",\n                \"type\": \"github\"\n            },\n            {\n                \"url\": \"https://tidelift.com/funding/github/packagist/symfony/symfony\",\n                \"type\": \"tidelift\"\n            }\n        ]\n    },\n    {\n        \"name\": \"symfony/monolog-bridge\",\n        \"version\": \"v5.1.8\",\n        \"version_normalized\": \"5.1.8.0\",\n        \"source\": {\n            \"type\": \"git\",\n            \"url\": \"https://github.com/symfony/monolog-bridge.git\",\n            \"reference\": \"0c507eddb704a3154b53f066cc0b587c4586c868\"\n        },\n        \"dist\": {\n            \"type\": \"zip\",\n            \"url\": \"https://api.github.com/repos/symfony/monolog-bridge/zipball/0c507eddb704a3154b53f066cc0b587c4586c868\",\n            \"reference\": \"0c507eddb704a3154b53f066cc0b587c4586c868\",\n            \"shasum\": \"\"\n        },\n        \"require\": {\n            \"monolog/monolog\": \"^1.25.1|^2\",\n            \"php\": \">=7.2.5\",\n            \"symfony/http-kernel\": \"^4.4|^5.0\",\n            \"symfony/service-contracts\": \"^1.1|^2\"\n        },\n        \"conflict\": {\n            \"symfony/console\": \"<4.4\",\n            \"symfony/http-foundation\": \"<4.4\"\n        },\n        \"require-dev\": {\n            \"symfony/console\": \"^4.4|^5.0\",\n            \"symfony/http-client\": \"^4.4|^5.0\",\n            \"symfony/mailer\": \"^4.4|^5.0\",\n            \"symfony/mime\": \"^4.4|^5.0\",\n            \"symfony/security-core\": \"^4.4|^5.0\",\n            \"symfony/var-dumper\": \"^4.4|^5.0\"\n        },\n        \"suggest\": {\n            \"symfony/console\": \"For the possibility to show log messages in console commands depending on verbosity settings.\",\n            \"symfony/http-kernel\": \"For using the debugging handlers together with the response life cycle of the HTTP kernel.\",\n            \"symfony/var-dumper\": \"For using the debugging handlers like the console handler or the log server handler.\"\n        },\n        \"time\": \"2020-10-24T12:01:57+00:00\",\n        \"type\": \"symfony-bridge\",\n        \"installation-source\": \"dist\",\n        \"autoload\": {\n            \"psr-4\": {\n                \"Symfony\\\\Bridge\\\\Monolog\\\\\": \"\"\n            },\n            \"exclude-from-classmap\": [\n                \"/Tests/\"\n            ]\n        },\n        \"notification-url\": \"https://packagist.org/downloads/\",\n        \"license\": [\n            \"MIT\"\n        ],\n        \"authors\": [\n            {\n                \"name\": \"Fabien Potencier\",\n                \"email\": \"fabien@symfony.com\"\n            },\n            {\n                \"name\": \"Symfony Community\",\n                \"homepage\": \"https://symfony.com/contributors\"\n            }\n        ],\n        \"description\": \"Symfony Monolog Bridge\",\n        \"homepage\": \"https://symfony.com\",\n        \"funding\": [\n            {\n                \"url\": \"https://symfony.com/sponsor\",\n                \"type\": \"custom\"\n            },\n            {\n                \"url\": \"https://github.com/fabpot\",\n                \"type\": \"github\"\n            },\n            {\n                \"url\": \"https://tidelift.com/funding/github/packagist/symfony/symfony\",\n                \"type\": \"tidelift\"\n            }\n        ]\n    },\n    {\n        \"name\": \"symfony/monolog-bundle\",\n        \"version\": \"v3.6.0\",\n        \"version_normalized\": \"3.6.0.0\",\n        \"source\": {\n            \"type\": \"git\",\n            \"url\": \"https://github.com/symfony/monolog-bundle.git\",\n            \"reference\": \"e495f5c7e4e672ffef4357d4a4d85f010802f940\"\n        },\n        \"dist\": {\n            \"type\": \"zip\",\n            \"url\": \"https://api.github.com/repos/symfony/monolog-bundle/zipball/e495f5c7e4e672ffef4357d4a4d85f010802f940\",\n            \"reference\": \"e495f5c7e4e672ffef4357d4a4d85f010802f940\",\n            \"shasum\": \"\"\n        },\n        \"require\": {\n            \"monolog/monolog\": \"~1.22 || ~2.0\",\n            \"php\": \">=5.6\",\n            \"symfony/config\": \"~3.4 || ~4.0 || ^5.0\",\n            \"symfony/dependency-injection\": \"~3.4.10 || ^4.0.10 || ^5.0\",\n            \"symfony/http-kernel\": \"~3.4 || ~4.0 || ^5.0\",\n            \"symfony/monolog-bridge\": \"~3.4 || ~4.0 || ^5.0\"\n        },\n        \"require-dev\": {\n            \"symfony/console\": \"~3.4 || ~4.0 || ^5.0\",\n            \"symfony/phpunit-bridge\": \"^4.4 || ^5.0\",\n            \"symfony/yaml\": \"~3.4 || ~4.0 || ^5.0\"\n        },\n        \"time\": \"2020-10-06T15:12:11+00:00\",\n        \"type\": \"symfony-bundle\",\n        \"extra\": {\n            \"branch-alias\": {\n                \"dev-master\": \"3.x-dev\"\n            }\n        },\n        \"installation-source\": \"dist\",\n        \"autoload\": {\n            \"psr-4\": {\n                \"Symfony\\\\Bundle\\\\MonologBundle\\\\\": \"\"\n            },\n            \"exclude-from-classmap\": [\n                \"/Tests/\"\n            ]\n        },\n        \"notification-url\": \"https://packagist.org/downloads/\",\n        \"license\": [\n            \"MIT\"\n        ],\n        \"authors\": [\n            {\n                \"name\": \"Fabien Potencier\",\n                \"email\": \"fabien@symfony.com\"\n            },\n            {\n                \"name\": \"Symfony Community\",\n                \"homepage\": \"http://symfony.com/contributors\"\n            }\n        ],\n        \"description\": \"Symfony MonologBundle\",\n        \"homepage\": \"http://symfony.com\",\n        \"keywords\": [\n            \"log\",\n            \"logging\"\n        ],\n        \"funding\": [\n            {\n                \"url\": \"https://symfony.com/sponsor\",\n                \"type\": \"custom\"\n            },\n            {\n                \"url\": \"https://github.com/fabpot\",\n                \"type\": \"github\"\n            },\n            {\n                \"url\": \"https://tidelift.com/funding/github/packagist/symfony/symfony\",\n                \"type\": \"tidelift\"\n            }\n        ]\n    },\n    {\n        \"name\": \"symfony/notifier\",\n        \"version\": \"v5.1.8\",\n        \"version_normalized\": \"5.1.8.0\",\n        \"source\": {\n            \"type\": \"git\",\n            \"url\": \"https://github.com/symfony/notifier.git\",\n            \"reference\": \"7beeb0122548109126aa74f97b7d03c0f95e594d\"\n        },\n        \"dist\": {\n            \"type\": \"zip\",\n            \"url\": \"https://api.github.com/repos/symfony/notifier/zipball/7beeb0122548109126aa74f97b7d03c0f95e594d\",\n            \"reference\": \"7beeb0122548109126aa74f97b7d03c0f95e594d\",\n            \"shasum\": \"\"\n        },\n        \"require\": {\n            \"php\": \">=7.2.5\",\n            \"symfony/polyfill-php80\": \"^1.15\"\n        },\n        \"conflict\": {\n            \"symfony/http-kernel\": \"<4.4\"\n        },\n        \"time\": \"2020-10-24T12:03:25+00:00\",\n        \"type\": \"library\",\n        \"installation-source\": \"dist\",\n        \"autoload\": {\n            \"psr-4\": {\n                \"Symfony\\\\Component\\\\Notifier\\\\\": \"\"\n            },\n            \"exclude-from-classmap\": [\n                \"/Tests/\"\n            ]\n        },\n        \"notification-url\": \"https://packagist.org/downloads/\",\n        \"license\": [\n            \"MIT\"\n        ],\n        \"authors\": [\n            {\n                \"name\": \"Fabien Potencier\",\n                \"email\": \"fabien@symfony.com\"\n            },\n            {\n                \"name\": \"Symfony Community\",\n                \"homepage\": \"https://symfony.com/contributors\"\n            }\n        ],\n        \"description\": \"A library to notify messages\",\n        \"homepage\": \"https://symfony.com\",\n        \"keywords\": [\n            \"notification\",\n            \"notifier\"\n        ],\n        \"funding\": [\n            {\n                \"url\": \"https://symfony.com/sponsor\",\n                \"type\": \"custom\"\n            },\n            {\n                \"url\": \"https://github.com/fabpot\",\n                \"type\": \"github\"\n            },\n            {\n                \"url\": \"https://tidelift.com/funding/github/packagist/symfony/symfony\",\n                \"type\": \"tidelift\"\n            }\n        ]\n    },\n    {\n        \"name\": \"symfony/options-resolver\",\n        \"version\": \"v5.1.8\",\n        \"version_normalized\": \"5.1.8.0\",\n        \"source\": {\n            \"type\": \"git\",\n            \"url\": \"https://github.com/symfony/options-resolver.git\",\n            \"reference\": \"c6a02905e4ffc7a1498e8ee019db2b477cd1cc02\"\n        },\n        \"dist\": {\n            \"type\": \"zip\",\n            \"url\": \"https://api.github.com/repos/symfony/options-resolver/zipball/c6a02905e4ffc7a1498e8ee019db2b477cd1cc02\",\n            \"reference\": \"c6a02905e4ffc7a1498e8ee019db2b477cd1cc02\",\n            \"shasum\": \"\"\n        },\n        \"require\": {\n            \"php\": \">=7.2.5\",\n            \"symfony/deprecation-contracts\": \"^2.1\",\n            \"symfony/polyfill-php80\": \"^1.15\"\n        },\n        \"time\": \"2020-10-24T12:01:57+00:00\",\n        \"type\": \"library\",\n        \"installation-source\": \"dist\",\n        \"autoload\": {\n            \"psr-4\": {\n                \"Symfony\\\\Component\\\\OptionsResolver\\\\\": \"\"\n            },\n            \"exclude-from-classmap\": [\n                \"/Tests/\"\n            ]\n        },\n        \"notification-url\": \"https://packagist.org/downloads/\",\n        \"license\": [\n            \"MIT\"\n        ],\n        \"authors\": [\n            {\n                \"name\": \"Fabien Potencier\",\n                \"email\": \"fabien@symfony.com\"\n            },\n            {\n                \"name\": \"Symfony Community\",\n                \"homepage\": \"https://symfony.com/contributors\"\n            }\n        ],\n        \"description\": \"Symfony OptionsResolver Component\",\n        \"homepage\": \"https://symfony.com\",\n        \"keywords\": [\n            \"config\",\n            \"configuration\",\n            \"options\"\n        ],\n        \"funding\": [\n            {\n                \"url\": \"https://symfony.com/sponsor\",\n                \"type\": \"custom\"\n            },\n            {\n                \"url\": \"https://github.com/fabpot\",\n                \"type\": \"github\"\n            },\n            {\n                \"url\": \"https://tidelift.com/funding/github/packagist/symfony/symfony\",\n                \"type\": \"tidelift\"\n            }\n        ]\n    },\n    {\n        \"name\": \"symfony/phpunit-bridge\",\n        \"version\": \"v5.1.8\",\n        \"version_normalized\": \"5.1.8.0\",\n        \"source\": {\n            \"type\": \"git\",\n            \"url\": \"https://github.com/symfony/phpunit-bridge.git\",\n            \"reference\": \"61744927348cd391ac12f7c6b70544991275845c\"\n        },\n        \"dist\": {\n            \"type\": \"zip\",\n            \"url\": \"https://api.github.com/repos/symfony/phpunit-bridge/zipball/61744927348cd391ac12f7c6b70544991275845c\",\n            \"reference\": \"61744927348cd391ac12f7c6b70544991275845c\",\n            \"shasum\": \"\"\n        },\n        \"require\": {\n            \"php\": \">=5.5.9\"\n        },\n        \"conflict\": {\n            \"phpunit/phpunit\": \"<4.8.35|<5.4.3,>=5.0|<6.4,>=6.0|9.1.2\"\n        },\n        \"require-dev\": {\n            \"symfony/deprecation-contracts\": \"^2.1\"\n        },\n        \"suggest\": {\n            \"symfony/error-handler\": \"For tracking deprecated interfaces usages at runtime with DebugClassLoader\"\n        },\n        \"time\": \"2020-10-24T15:53:55+00:00\",\n        \"bin\": [\n            \"bin/simple-phpunit\"\n        ],\n        \"type\": \"symfony-bridge\",\n        \"extra\": {\n            \"thanks\": {\n                \"name\": \"phpunit/phpunit\",\n                \"url\": \"https://github.com/sebastianbergmann/phpunit\"\n            }\n        },\n        \"installation-source\": \"dist\",\n        \"autoload\": {\n            \"files\": [\n                \"bootstrap.php\"\n            ],\n            \"psr-4\": {\n                \"Symfony\\\\Bridge\\\\PhpUnit\\\\\": \"\"\n            },\n            \"exclude-from-classmap\": [\n                \"/Tests/\"\n            ]\n        },\n        \"notification-url\": \"https://packagist.org/downloads/\",\n        \"license\": [\n            \"MIT\"\n        ],\n        \"authors\": [\n            {\n                \"name\": \"Nicolas Grekas\",\n                \"email\": \"p@tchwork.com\"\n            },\n            {\n                \"name\": \"Symfony Community\",\n                \"homepage\": \"https://symfony.com/contributors\"\n            }\n        ],\n        \"description\": \"Symfony PHPUnit Bridge\",\n        \"homepage\": \"https://symfony.com\",\n        \"funding\": [\n            {\n                \"url\": \"https://symfony.com/sponsor\",\n                \"type\": \"custom\"\n            },\n            {\n                \"url\": \"https://github.com/fabpot\",\n                \"type\": \"github\"\n            },\n            {\n                \"url\": \"https://tidelift.com/funding/github/packagist/symfony/symfony\",\n                \"type\": \"tidelift\"\n            }\n        ]\n    },\n    {\n        \"name\": \"symfony/polyfill-intl-grapheme\",\n        \"version\": \"v1.20.0\",\n        \"version_normalized\": \"1.20.0.0\",\n        \"source\": {\n            \"type\": \"git\",\n            \"url\": \"https://github.com/symfony/polyfill-intl-grapheme.git\",\n            \"reference\": \"c7cf3f858ec7d70b89559d6e6eb1f7c2517d479c\"\n        },\n        \"dist\": {\n            \"type\": \"zip\",\n            \"url\": \"https://api.github.com/repos/symfony/polyfill-intl-grapheme/zipball/c7cf3f858ec7d70b89559d6e6eb1f7c2517d479c\",\n            \"reference\": \"c7cf3f858ec7d70b89559d6e6eb1f7c2517d479c\",\n            \"shasum\": \"\"\n        },\n        \"require\": {\n            \"php\": \">=7.1\"\n        },\n        \"suggest\": {\n            \"ext-intl\": \"For best performance\"\n        },\n        \"time\": \"2020-10-23T14:02:19+00:00\",\n        \"type\": \"library\",\n        \"extra\": {\n            \"branch-alias\": {\n                \"dev-main\": \"1.20-dev\"\n            },\n            \"thanks\": {\n                \"name\": \"symfony/polyfill\",\n                \"url\": \"https://github.com/symfony/polyfill\"\n            }\n        },\n        \"installation-source\": \"dist\",\n        \"autoload\": {\n            \"psr-4\": {\n                \"Symfony\\\\Polyfill\\\\Intl\\\\Grapheme\\\\\": \"\"\n            },\n            \"files\": [\n                \"bootstrap.php\"\n            ]\n        },\n        \"notification-url\": \"https://packagist.org/downloads/\",\n        \"license\": [\n            \"MIT\"\n        ],\n        \"authors\": [\n            {\n                \"name\": \"Nicolas Grekas\",\n                \"email\": \"p@tchwork.com\"\n            },\n            {\n                \"name\": \"Symfony Community\",\n                \"homepage\": \"https://symfony.com/contributors\"\n            }\n        ],\n        \"description\": \"Symfony polyfill for intl's grapheme_* functions\",\n        \"homepage\": \"https://symfony.com\",\n        \"keywords\": [\n            \"compatibility\",\n            \"grapheme\",\n            \"intl\",\n            \"polyfill\",\n            \"portable\",\n            \"shim\"\n        ],\n        \"funding\": [\n            {\n                \"url\": \"https://symfony.com/sponsor\",\n                \"type\": \"custom\"\n            },\n            {\n                \"url\": \"https://github.com/fabpot\",\n                \"type\": \"github\"\n            },\n            {\n                \"url\": \"https://tidelift.com/funding/github/packagist/symfony/symfony\",\n                \"type\": \"tidelift\"\n            }\n        ]\n    },\n    {\n        \"name\": \"symfony/polyfill-intl-icu\",\n        \"version\": \"v1.20.0\",\n        \"version_normalized\": \"1.20.0.0\",\n        \"source\": {\n            \"type\": \"git\",\n            \"url\": \"https://github.com/symfony/polyfill-intl-icu.git\",\n            \"reference\": \"c44d5bf6a75eed79555c6bf37505c6d39559353e\"\n        },\n        \"dist\": {\n            \"type\": \"zip\",\n            \"url\": \"https://api.github.com/repos/symfony/polyfill-intl-icu/zipball/c44d5bf6a75eed79555c6bf37505c6d39559353e\",\n            \"reference\": \"c44d5bf6a75eed79555c6bf37505c6d39559353e\",\n            \"shasum\": \"\"\n        },\n        \"require\": {\n            \"php\": \">=7.1\",\n            \"symfony/intl\": \"~2.3|~3.0|~4.0|~5.0\"\n        },\n        \"suggest\": {\n            \"ext-intl\": \"For best performance\"\n        },\n        \"time\": \"2020-10-23T14:02:19+00:00\",\n        \"type\": \"library\",\n        \"extra\": {\n            \"branch-alias\": {\n                \"dev-main\": \"1.20-dev\"\n            },\n            \"thanks\": {\n                \"name\": \"symfony/polyfill\",\n                \"url\": \"https://github.com/symfony/polyfill\"\n            }\n        },\n        \"installation-source\": \"dist\",\n        \"autoload\": {\n            \"files\": [\n                \"bootstrap.php\"\n            ]\n        },\n        \"notification-url\": \"https://packagist.org/downloads/\",\n        \"license\": [\n            \"MIT\"\n        ],\n        \"authors\": [\n            {\n                \"name\": \"Nicolas Grekas\",\n                \"email\": \"p@tchwork.com\"\n            },\n            {\n                \"name\": \"Symfony Community\",\n                \"homepage\": \"https://symfony.com/contributors\"\n            }\n        ],\n        \"description\": \"Symfony polyfill for intl's ICU-related data and classes\",\n        \"homepage\": \"https://symfony.com\",\n        \"keywords\": [\n            \"compatibility\",\n            \"icu\",\n            \"intl\",\n            \"polyfill\",\n            \"portable\",\n            \"shim\"\n        ],\n        \"funding\": [\n            {\n                \"url\": \"https://symfony.com/sponsor\",\n                \"type\": \"custom\"\n            },\n            {\n                \"url\": \"https://github.com/fabpot\",\n                \"type\": \"github\"\n            },\n            {\n                \"url\": \"https://tidelift.com/funding/github/packagist/symfony/symfony\",\n                \"type\": \"tidelift\"\n            }\n        ]\n    },\n    {\n        \"name\": \"symfony/polyfill-intl-idn\",\n        \"version\": \"v1.20.0\",\n        \"version_normalized\": \"1.20.0.0\",\n        \"source\": {\n            \"type\": \"git\",\n            \"url\": \"https://github.com/symfony/polyfill-intl-idn.git\",\n            \"reference\": \"3b75acd829741c768bc8b1f84eb33265e7cc5117\"\n        },\n        \"dist\": {\n            \"type\": \"zip\",\n            \"url\": \"https://api.github.com/repos/symfony/polyfill-intl-idn/zipball/3b75acd829741c768bc8b1f84eb33265e7cc5117\",\n            \"reference\": \"3b75acd829741c768bc8b1f84eb33265e7cc5117\",\n            \"shasum\": \"\"\n        },\n        \"require\": {\n            \"php\": \">=7.1\",\n            \"symfony/polyfill-intl-normalizer\": \"^1.10\",\n            \"symfony/polyfill-php72\": \"^1.10\"\n        },\n        \"suggest\": {\n            \"ext-intl\": \"For best performance\"\n        },\n        \"time\": \"2020-10-23T14:02:19+00:00\",\n        \"type\": \"library\",\n        \"extra\": {\n            \"branch-alias\": {\n                \"dev-main\": \"1.20-dev\"\n            },\n            \"thanks\": {\n                \"name\": \"symfony/polyfill\",\n                \"url\": \"https://github.com/symfony/polyfill\"\n            }\n        },\n        \"installation-source\": \"dist\",\n        \"autoload\": {\n            \"psr-4\": {\n                \"Symfony\\\\Polyfill\\\\Intl\\\\Idn\\\\\": \"\"\n            },\n            \"files\": [\n                \"bootstrap.php\"\n            ]\n        },\n        \"notification-url\": \"https://packagist.org/downloads/\",\n        \"license\": [\n            \"MIT\"\n        ],\n        \"authors\": [\n            {\n                \"name\": \"Laurent Bassin\",\n                \"email\": \"laurent@bassin.info\"\n            },\n            {\n                \"name\": \"Trevor Rowbotham\",\n                \"email\": \"trevor.rowbotham@pm.me\"\n            },\n            {\n                \"name\": \"Symfony Community\",\n                \"homepage\": \"https://symfony.com/contributors\"\n            }\n        ],\n        \"description\": \"Symfony polyfill for intl's idn_to_ascii and idn_to_utf8 functions\",\n        \"homepage\": \"https://symfony.com\",\n        \"keywords\": [\n            \"compatibility\",\n            \"idn\",\n            \"intl\",\n            \"polyfill\",\n            \"portable\",\n            \"shim\"\n        ],\n        \"funding\": [\n            {\n                \"url\": \"https://symfony.com/sponsor\",\n                \"type\": \"custom\"\n            },\n            {\n                \"url\": \"https://github.com/fabpot\",\n                \"type\": \"github\"\n            },\n            {\n                \"url\": \"https://tidelift.com/funding/github/packagist/symfony/symfony\",\n                \"type\": \"tidelift\"\n            }\n        ]\n    },\n    {\n        \"name\": \"symfony/polyfill-intl-normalizer\",\n        \"version\": \"v1.20.0\",\n        \"version_normalized\": \"1.20.0.0\",\n        \"source\": {\n            \"type\": \"git\",\n            \"url\": \"https://github.com/symfony/polyfill-intl-normalizer.git\",\n            \"reference\": \"727d1096295d807c309fb01a851577302394c897\"\n        },\n        \"dist\": {\n            \"type\": \"zip\",\n            \"url\": \"https://api.github.com/repos/symfony/polyfill-intl-normalizer/zipball/727d1096295d807c309fb01a851577302394c897\",\n            \"reference\": \"727d1096295d807c309fb01a851577302394c897\",\n            \"shasum\": \"\"\n        },\n        \"require\": {\n            \"php\": \">=7.1\"\n        },\n        \"suggest\": {\n            \"ext-intl\": \"For best performance\"\n        },\n        \"time\": \"2020-10-23T14:02:19+00:00\",\n        \"type\": \"library\",\n        \"extra\": {\n            \"branch-alias\": {\n                \"dev-main\": \"1.20-dev\"\n            },\n            \"thanks\": {\n                \"name\": \"symfony/polyfill\",\n                \"url\": \"https://github.com/symfony/polyfill\"\n            }\n        },\n        \"installation-source\": \"dist\",\n        \"autoload\": {\n            \"psr-4\": {\n                \"Symfony\\\\Polyfill\\\\Intl\\\\Normalizer\\\\\": \"\"\n            },\n            \"files\": [\n                \"bootstrap.php\"\n            ],\n            \"classmap\": [\n                \"Resources/stubs\"\n            ]\n        },\n        \"notification-url\": \"https://packagist.org/downloads/\",\n        \"license\": [\n            \"MIT\"\n        ],\n        \"authors\": [\n            {\n                \"name\": \"Nicolas Grekas\",\n                \"email\": \"p@tchwork.com\"\n            },\n            {\n                \"name\": \"Symfony Community\",\n                \"homepage\": \"https://symfony.com/contributors\"\n            }\n        ],\n        \"description\": \"Symfony polyfill for intl's Normalizer class and related functions\",\n        \"homepage\": \"https://symfony.com\",\n        \"keywords\": [\n            \"compatibility\",\n            \"intl\",\n            \"normalizer\",\n            \"polyfill\",\n            \"portable\",\n            \"shim\"\n        ],\n        \"funding\": [\n            {\n                \"url\": \"https://symfony.com/sponsor\",\n                \"type\": \"custom\"\n            },\n            {\n                \"url\": \"https://github.com/fabpot\",\n                \"type\": \"github\"\n            },\n            {\n                \"url\": \"https://tidelift.com/funding/github/packagist/symfony/symfony\",\n                \"type\": \"tidelift\"\n            }\n        ]\n    },\n    {\n        \"name\": \"symfony/polyfill-mbstring\",\n        \"version\": \"v1.20.0\",\n        \"version_normalized\": \"1.20.0.0\",\n        \"source\": {\n            \"type\": \"git\",\n            \"url\": \"https://github.com/symfony/polyfill-mbstring.git\",\n            \"reference\": \"39d483bdf39be819deabf04ec872eb0b2410b531\"\n        },\n        \"dist\": {\n            \"type\": \"zip\",\n            \"url\": \"https://api.github.com/repos/symfony/polyfill-mbstring/zipball/39d483bdf39be819deabf04ec872eb0b2410b531\",\n            \"reference\": \"39d483bdf39be819deabf04ec872eb0b2410b531\",\n            \"shasum\": \"\"\n        },\n        \"require\": {\n            \"php\": \">=7.1\"\n        },\n        \"suggest\": {\n            \"ext-mbstring\": \"For best performance\"\n        },\n        \"time\": \"2020-10-23T14:02:19+00:00\",\n        \"type\": \"library\",\n        \"extra\": {\n            \"branch-alias\": {\n                \"dev-main\": \"1.20-dev\"\n            },\n            \"thanks\": {\n                \"name\": \"symfony/polyfill\",\n                \"url\": \"https://github.com/symfony/polyfill\"\n            }\n        },\n        \"installation-source\": \"dist\",\n        \"autoload\": {\n            \"psr-4\": {\n                \"Symfony\\\\Polyfill\\\\Mbstring\\\\\": \"\"\n            },\n            \"files\": [\n                \"bootstrap.php\"\n            ]\n        },\n        \"notification-url\": \"https://packagist.org/downloads/\",\n        \"license\": [\n            \"MIT\"\n        ],\n        \"authors\": [\n            {\n                \"name\": \"Nicolas Grekas\",\n                \"email\": \"p@tchwork.com\"\n            },\n            {\n                \"name\": \"Symfony Community\",\n                \"homepage\": \"https://symfony.com/contributors\"\n            }\n        ],\n        \"description\": \"Symfony polyfill for the Mbstring extension\",\n        \"homepage\": \"https://symfony.com\",\n        \"keywords\": [\n            \"compatibility\",\n            \"mbstring\",\n            \"polyfill\",\n            \"portable\",\n            \"shim\"\n        ],\n        \"funding\": [\n            {\n                \"url\": \"https://symfony.com/sponsor\",\n                \"type\": \"custom\"\n            },\n            {\n                \"url\": \"https://github.com/fabpot\",\n                \"type\": \"github\"\n            },\n            {\n                \"url\": \"https://tidelift.com/funding/github/packagist/symfony/symfony\",\n                \"type\": \"tidelift\"\n            }\n        ]\n    },\n    {\n        \"name\": \"symfony/polyfill-php73\",\n        \"version\": \"v1.20.0\",\n        \"version_normalized\": \"1.20.0.0\",\n        \"source\": {\n            \"type\": \"git\",\n            \"url\": \"https://github.com/symfony/polyfill-php73.git\",\n            \"reference\": \"8ff431c517be11c78c48a39a66d37431e26a6bed\"\n        },\n        \"dist\": {\n            \"type\": \"zip\",\n            \"url\": \"https://api.github.com/repos/symfony/polyfill-php73/zipball/8ff431c517be11c78c48a39a66d37431e26a6bed\",\n            \"reference\": \"8ff431c517be11c78c48a39a66d37431e26a6bed\",\n            \"shasum\": \"\"\n        },\n        \"require\": {\n            \"php\": \">=7.1\"\n        },\n        \"time\": \"2020-10-23T14:02:19+00:00\",\n        \"type\": \"library\",\n        \"extra\": {\n            \"branch-alias\": {\n                \"dev-main\": \"1.20-dev\"\n            },\n            \"thanks\": {\n                \"name\": \"symfony/polyfill\",\n                \"url\": \"https://github.com/symfony/polyfill\"\n            }\n        },\n        \"installation-source\": \"dist\",\n        \"autoload\": {\n            \"psr-4\": {\n                \"Symfony\\\\Polyfill\\\\Php73\\\\\": \"\"\n            },\n            \"files\": [\n                \"bootstrap.php\"\n            ],\n            \"classmap\": [\n                \"Resources/stubs\"\n            ]\n        },\n        \"notification-url\": \"https://packagist.org/downloads/\",\n        \"license\": [\n            \"MIT\"\n        ],\n        \"authors\": [\n            {\n                \"name\": \"Nicolas Grekas\",\n                \"email\": \"p@tchwork.com\"\n            },\n            {\n                \"name\": \"Symfony Community\",\n                \"homepage\": \"https://symfony.com/contributors\"\n            }\n        ],\n        \"description\": \"Symfony polyfill backporting some PHP 7.3+ features to lower PHP versions\",\n        \"homepage\": \"https://symfony.com\",\n        \"keywords\": [\n            \"compatibility\",\n            \"polyfill\",\n            \"portable\",\n            \"shim\"\n        ],\n        \"funding\": [\n            {\n                \"url\": \"https://symfony.com/sponsor\",\n                \"type\": \"custom\"\n            },\n            {\n                \"url\": \"https://github.com/fabpot\",\n                \"type\": \"github\"\n            },\n            {\n                \"url\": \"https://tidelift.com/funding/github/packagist/symfony/symfony\",\n                \"type\": \"tidelift\"\n            }\n        ]\n    },\n    {\n        \"name\": \"symfony/polyfill-php80\",\n        \"version\": \"v1.20.0\",\n        \"version_normalized\": \"1.20.0.0\",\n        \"source\": {\n            \"type\": \"git\",\n            \"url\": \"https://github.com/symfony/polyfill-php80.git\",\n            \"reference\": \"e70aa8b064c5b72d3df2abd5ab1e90464ad009de\"\n        },\n        \"dist\": {\n            \"type\": \"zip\",\n            \"url\": \"https://api.github.com/repos/symfony/polyfill-php80/zipball/e70aa8b064c5b72d3df2abd5ab1e90464ad009de\",\n            \"reference\": \"e70aa8b064c5b72d3df2abd5ab1e90464ad009de\",\n            \"shasum\": \"\"\n        },\n        \"require\": {\n            \"php\": \">=7.1\"\n        },\n        \"time\": \"2020-10-23T14:02:19+00:00\",\n        \"type\": \"library\",\n        \"extra\": {\n            \"branch-alias\": {\n                \"dev-main\": \"1.20-dev\"\n            },\n            \"thanks\": {\n                \"name\": \"symfony/polyfill\",\n                \"url\": \"https://github.com/symfony/polyfill\"\n            }\n        },\n        \"installation-source\": \"dist\",\n        \"autoload\": {\n            \"psr-4\": {\n                \"Symfony\\\\Polyfill\\\\Php80\\\\\": \"\"\n            },\n            \"files\": [\n                \"bootstrap.php\"\n            ],\n            \"classmap\": [\n                \"Resources/stubs\"\n            ]\n        },\n        \"notification-url\": \"https://packagist.org/downloads/\",\n        \"license\": [\n            \"MIT\"\n        ],\n        \"authors\": [\n            {\n                \"name\": \"Ion Bazan\",\n                \"email\": \"ion.bazan@gmail.com\"\n            },\n            {\n                \"name\": \"Nicolas Grekas\",\n                \"email\": \"p@tchwork.com\"\n            },\n            {\n                \"name\": \"Symfony Community\",\n                \"homepage\": \"https://symfony.com/contributors\"\n            }\n        ],\n        \"description\": \"Symfony polyfill backporting some PHP 8.0+ features to lower PHP versions\",\n        \"homepage\": \"https://symfony.com\",\n        \"keywords\": [\n            \"compatibility\",\n            \"polyfill\",\n            \"portable\",\n            \"shim\"\n        ],\n        \"funding\": [\n            {\n                \"url\": \"https://symfony.com/sponsor\",\n                \"type\": \"custom\"\n            },\n            {\n                \"url\": \"https://github.com/fabpot\",\n                \"type\": \"github\"\n            },\n            {\n                \"url\": \"https://tidelift.com/funding/github/packagist/symfony/symfony\",\n                \"type\": \"tidelift\"\n            }\n        ]\n    },\n    {\n        \"name\": \"symfony/process\",\n        \"version\": \"v5.1.8\",\n        \"version_normalized\": \"5.1.8.0\",\n        \"source\": {\n            \"type\": \"git\",\n            \"url\": \"https://github.com/symfony/process.git\",\n            \"reference\": \"f00872c3f6804150d6a0f73b4151daab96248101\"\n        },\n        \"dist\": {\n            \"type\": \"zip\",\n            \"url\": \"https://api.github.com/repos/symfony/process/zipball/f00872c3f6804150d6a0f73b4151daab96248101\",\n            \"reference\": \"f00872c3f6804150d6a0f73b4151daab96248101\",\n            \"shasum\": \"\"\n        },\n        \"require\": {\n            \"php\": \">=7.2.5\",\n            \"symfony/polyfill-php80\": \"^1.15\"\n        },\n        \"time\": \"2020-10-24T12:01:57+00:00\",\n        \"type\": \"library\",\n        \"installation-source\": \"dist\",\n        \"autoload\": {\n            \"psr-4\": {\n                \"Symfony\\\\Component\\\\Process\\\\\": \"\"\n            },\n            \"exclude-from-classmap\": [\n                \"/Tests/\"\n            ]\n        },\n        \"notification-url\": \"https://packagist.org/downloads/\",\n        \"license\": [\n            \"MIT\"\n        ],\n        \"authors\": [\n            {\n                \"name\": \"Fabien Potencier\",\n                \"email\": \"fabien@symfony.com\"\n            },\n            {\n                \"name\": \"Symfony Community\",\n                \"homepage\": \"https://symfony.com/contributors\"\n            }\n        ],\n        \"description\": \"Symfony Process Component\",\n        \"homepage\": \"https://symfony.com\",\n        \"funding\": [\n            {\n                \"url\": \"https://symfony.com/sponsor\",\n                \"type\": \"custom\"\n            },\n            {\n                \"url\": \"https://github.com/fabpot\",\n                \"type\": \"github\"\n            },\n            {\n                \"url\": \"https://tidelift.com/funding/github/packagist/symfony/symfony\",\n                \"type\": \"tidelift\"\n            }\n        ]\n    },\n    {\n        \"name\": \"symfony/property-access\",\n        \"version\": \"v5.1.8\",\n        \"version_normalized\": \"5.1.8.0\",\n        \"source\": {\n            \"type\": \"git\",\n            \"url\": \"https://github.com/symfony/property-access.git\",\n            \"reference\": \"5d77df9a88600797d02c7937c153965ba3537933\"\n        },\n        \"dist\": {\n            \"type\": \"zip\",\n            \"url\": \"https://api.github.com/repos/symfony/property-access/zipball/5d77df9a88600797d02c7937c153965ba3537933\",\n            \"reference\": \"5d77df9a88600797d02c7937c153965ba3537933\",\n            \"shasum\": \"\"\n        },\n        \"require\": {\n            \"php\": \">=7.2.5\",\n            \"symfony/polyfill-php80\": \"^1.15\",\n            \"symfony/property-info\": \"^5.1.1\"\n        },\n        \"require-dev\": {\n            \"symfony/cache\": \"^4.4|^5.0\"\n        },\n        \"suggest\": {\n            \"psr/cache-implementation\": \"To cache access methods.\"\n        },\n        \"time\": \"2020-10-24T12:01:57+00:00\",\n        \"type\": \"library\",\n        \"installation-source\": \"dist\",\n        \"autoload\": {\n            \"psr-4\": {\n                \"Symfony\\\\Component\\\\PropertyAccess\\\\\": \"\"\n            },\n            \"exclude-from-classmap\": [\n                \"/Tests/\"\n            ]\n        },\n        \"notification-url\": \"https://packagist.org/downloads/\",\n        \"license\": [\n            \"MIT\"\n        ],\n        \"authors\": [\n            {\n                \"name\": \"Fabien Potencier\",\n                \"email\": \"fabien@symfony.com\"\n            },\n            {\n                \"name\": \"Symfony Community\",\n                \"homepage\": \"https://symfony.com/contributors\"\n            }\n        ],\n        \"description\": \"Symfony PropertyAccess Component\",\n        \"homepage\": \"https://symfony.com\",\n        \"keywords\": [\n            \"access\",\n            \"array\",\n            \"extraction\",\n            \"index\",\n            \"injection\",\n            \"object\",\n            \"property\",\n            \"property path\",\n            \"reflection\"\n        ],\n        \"funding\": [\n            {\n                \"url\": \"https://symfony.com/sponsor\",\n                \"type\": \"custom\"\n            },\n            {\n                \"url\": \"https://github.com/fabpot\",\n                \"type\": \"github\"\n            },\n            {\n                \"url\": \"https://tidelift.com/funding/github/packagist/symfony/symfony\",\n                \"type\": \"tidelift\"\n            }\n        ]\n    },\n    {\n        \"name\": \"symfony/property-info\",\n        \"version\": \"v5.1.8\",\n        \"version_normalized\": \"5.1.8.0\",\n        \"source\": {\n            \"type\": \"git\",\n            \"url\": \"https://github.com/symfony/property-info.git\",\n            \"reference\": \"fc15c51f829887b62a94a917ba793f51e80ea3e1\"\n        },\n        \"dist\": {\n            \"type\": \"zip\",\n            \"url\": \"https://api.github.com/repos/symfony/property-info/zipball/fc15c51f829887b62a94a917ba793f51e80ea3e1\",\n            \"reference\": \"fc15c51f829887b62a94a917ba793f51e80ea3e1\",\n            \"shasum\": \"\"\n        },\n        \"require\": {\n            \"php\": \">=7.2.5\",\n            \"symfony/polyfill-php80\": \"^1.15\",\n            \"symfony/string\": \"^5.1\"\n        },\n        \"conflict\": {\n            \"phpdocumentor/reflection-docblock\": \"<3.2.2\",\n            \"phpdocumentor/type-resolver\": \"<0.3.0\",\n            \"symfony/dependency-injection\": \"<4.4\"\n        },\n        \"require-dev\": {\n            \"doctrine/annotations\": \"~1.7\",\n            \"phpdocumentor/reflection-docblock\": \"^3.0|^4.0|^5.0\",\n            \"symfony/cache\": \"^4.4|^5.0\",\n            \"symfony/dependency-injection\": \"^4.4|^5.0\",\n            \"symfony/serializer\": \"^4.4|^5.0\"\n        },\n        \"suggest\": {\n            \"phpdocumentor/reflection-docblock\": \"To use the PHPDoc\",\n            \"psr/cache-implementation\": \"To cache results\",\n            \"symfony/doctrine-bridge\": \"To use Doctrine metadata\",\n            \"symfony/serializer\": \"To use Serializer metadata\"\n        },\n        \"time\": \"2020-10-24T12:01:57+00:00\",\n        \"type\": \"library\",\n        \"installation-source\": \"dist\",\n        \"autoload\": {\n            \"psr-4\": {\n                \"Symfony\\\\Component\\\\PropertyInfo\\\\\": \"\"\n            },\n            \"exclude-from-classmap\": [\n                \"/Tests/\"\n            ]\n        },\n        \"notification-url\": \"https://packagist.org/downloads/\",\n        \"license\": [\n            \"MIT\"\n        ],\n        \"authors\": [\n            {\n                \"name\": \"Kévin Dunglas\",\n                \"email\": \"dunglas@gmail.com\"\n            },\n            {\n                \"name\": \"Symfony Community\",\n                \"homepage\": \"https://symfony.com/contributors\"\n            }\n        ],\n        \"description\": \"Symfony Property Info Component\",\n        \"homepage\": \"https://symfony.com\",\n        \"keywords\": [\n            \"doctrine\",\n            \"phpdoc\",\n            \"property\",\n            \"symfony\",\n            \"type\",\n            \"validator\"\n        ],\n        \"funding\": [\n            {\n                \"url\": \"https://symfony.com/sponsor\",\n                \"type\": \"custom\"\n            },\n            {\n                \"url\": \"https://github.com/fabpot\",\n                \"type\": \"github\"\n            },\n            {\n                \"url\": \"https://tidelift.com/funding/github/packagist/symfony/symfony\",\n                \"type\": \"tidelift\"\n            }\n        ]\n    },\n    {\n        \"name\": \"symfony/routing\",\n        \"version\": \"v5.1.8\",\n        \"version_normalized\": \"5.1.8.0\",\n        \"source\": {\n            \"type\": \"git\",\n            \"url\": \"https://github.com/symfony/routing.git\",\n            \"reference\": \"d6ceee2a37b61b41079005207bf37746d1bfe71f\"\n        },\n        \"dist\": {\n            \"type\": \"zip\",\n            \"url\": \"https://api.github.com/repos/symfony/routing/zipball/d6ceee2a37b61b41079005207bf37746d1bfe71f\",\n            \"reference\": \"d6ceee2a37b61b41079005207bf37746d1bfe71f\",\n            \"shasum\": \"\"\n        },\n        \"require\": {\n            \"php\": \">=7.2.5\",\n            \"symfony/deprecation-contracts\": \"^2.1\",\n            \"symfony/polyfill-php80\": \"^1.15\"\n        },\n        \"conflict\": {\n            \"symfony/config\": \"<5.0\",\n            \"symfony/dependency-injection\": \"<4.4\",\n            \"symfony/yaml\": \"<4.4\"\n        },\n        \"require-dev\": {\n            \"doctrine/annotations\": \"~1.2\",\n            \"psr/log\": \"~1.0\",\n            \"symfony/config\": \"^5.0\",\n            \"symfony/dependency-injection\": \"^4.4|^5.0\",\n            \"symfony/expression-language\": \"^4.4|^5.0\",\n            \"symfony/http-foundation\": \"^4.4|^5.0\",\n            \"symfony/yaml\": \"^4.4|^5.0\"\n        },\n        \"suggest\": {\n            \"doctrine/annotations\": \"For using the annotation loader\",\n            \"symfony/config\": \"For using the all-in-one router or any loader\",\n            \"symfony/expression-language\": \"For using expression matching\",\n            \"symfony/http-foundation\": \"For using a Symfony Request object\",\n            \"symfony/yaml\": \"For using the YAML loader\"\n        },\n        \"time\": \"2020-10-24T12:01:57+00:00\",\n        \"type\": \"library\",\n        \"installation-source\": \"dist\",\n        \"autoload\": {\n            \"psr-4\": {\n                \"Symfony\\\\Component\\\\Routing\\\\\": \"\"\n            },\n            \"exclude-from-classmap\": [\n                \"/Tests/\"\n            ]\n        },\n        \"notification-url\": \"https://packagist.org/downloads/\",\n        \"license\": [\n            \"MIT\"\n        ],\n        \"authors\": [\n            {\n                \"name\": \"Fabien Potencier\",\n                \"email\": \"fabien@symfony.com\"\n            },\n            {\n                \"name\": \"Symfony Community\",\n                \"homepage\": \"https://symfony.com/contributors\"\n            }\n        ],\n        \"description\": \"Symfony Routing Component\",\n        \"homepage\": \"https://symfony.com\",\n        \"keywords\": [\n            \"router\",\n            \"routing\",\n            \"uri\",\n            \"url\"\n        ],\n        \"funding\": [\n            {\n                \"url\": \"https://symfony.com/sponsor\",\n                \"type\": \"custom\"\n            },\n            {\n                \"url\": \"https://github.com/fabpot\",\n                \"type\": \"github\"\n            },\n            {\n                \"url\": \"https://tidelift.com/funding/github/packagist/symfony/symfony\",\n                \"type\": \"tidelift\"\n            }\n        ]\n    },\n    {\n        \"name\": \"symfony/security-bundle\",\n        \"version\": \"v5.1.8\",\n        \"version_normalized\": \"5.1.8.0\",\n        \"source\": {\n            \"type\": \"git\",\n            \"url\": \"https://github.com/symfony/security-bundle.git\",\n            \"reference\": \"8921cdb1057f615b8340a352195f4a684c876893\"\n        },\n        \"dist\": {\n            \"type\": \"zip\",\n            \"url\": \"https://api.github.com/repos/symfony/security-bundle/zipball/8921cdb1057f615b8340a352195f4a684c876893\",\n            \"reference\": \"8921cdb1057f615b8340a352195f4a684c876893\",\n            \"shasum\": \"\"\n        },\n        \"require\": {\n            \"ext-xml\": \"*\",\n            \"php\": \">=7.2.5\",\n            \"symfony/config\": \"^4.4|^5.0\",\n            \"symfony/dependency-injection\": \"^5.1\",\n            \"symfony/event-dispatcher\": \"^5.1\",\n            \"symfony/http-kernel\": \"^5.0\",\n            \"symfony/polyfill-php80\": \"^1.15\",\n            \"symfony/security-core\": \"^5.1\",\n            \"symfony/security-csrf\": \"^4.4|^5.0\",\n            \"symfony/security-guard\": \"^5.1\",\n            \"symfony/security-http\": \"^5.1,>=5.1.2\"\n        },\n        \"conflict\": {\n            \"symfony/browser-kit\": \"<4.4\",\n            \"symfony/console\": \"<4.4\",\n            \"symfony/framework-bundle\": \"<4.4\",\n            \"symfony/ldap\": \"<4.4\",\n            \"symfony/twig-bundle\": \"<4.4\"\n        },\n        \"require-dev\": {\n            \"doctrine/doctrine-bundle\": \"^2.0\",\n            \"symfony/asset\": \"^4.4|^5.0\",\n            \"symfony/browser-kit\": \"^4.4|^5.0\",\n            \"symfony/console\": \"^4.4|^5.0\",\n            \"symfony/css-selector\": \"^4.4|^5.0\",\n            \"symfony/dom-crawler\": \"^4.4|^5.0\",\n            \"symfony/expression-language\": \"^4.4|^5.0\",\n            \"symfony/form\": \"^4.4|^5.0\",\n            \"symfony/framework-bundle\": \"^4.4|^5.0\",\n            \"symfony/process\": \"^4.4|^5.0\",\n            \"symfony/serializer\": \"^4.4|^5.0\",\n            \"symfony/translation\": \"^4.4|^5.0\",\n            \"symfony/twig-bridge\": \"^4.4|^5.0\",\n            \"symfony/twig-bundle\": \"^4.4|^5.0\",\n            \"symfony/validator\": \"^4.4|^5.0\",\n            \"symfony/yaml\": \"^4.4|^5.0\",\n            \"twig/twig\": \"^2.10|^3.0\"\n        },\n        \"time\": \"2020-10-24T12:01:57+00:00\",\n        \"type\": \"symfony-bundle\",\n        \"installation-source\": \"dist\",\n        \"autoload\": {\n            \"psr-4\": {\n                \"Symfony\\\\Bundle\\\\SecurityBundle\\\\\": \"\"\n            },\n            \"exclude-from-classmap\": [\n                \"/Tests/\"\n            ]\n        },\n        \"notification-url\": \"https://packagist.org/downloads/\",\n        \"license\": [\n            \"MIT\"\n        ],\n        \"authors\": [\n            {\n                \"name\": \"Fabien Potencier\",\n                \"email\": \"fabien@symfony.com\"\n            },\n            {\n                \"name\": \"Symfony Community\",\n                \"homepage\": \"https://symfony.com/contributors\"\n            }\n        ],\n        \"description\": \"Symfony SecurityBundle\",\n        \"homepage\": \"https://symfony.com\",\n        \"funding\": [\n            {\n                \"url\": \"https://symfony.com/sponsor\",\n                \"type\": \"custom\"\n            },\n            {\n                \"url\": \"https://github.com/fabpot\",\n                \"type\": \"github\"\n            },\n            {\n                \"url\": \"https://tidelift.com/funding/github/packagist/symfony/symfony\",\n                \"type\": \"tidelift\"\n            }\n        ]\n    },\n    {\n        \"name\": \"symfony/security-core\",\n        \"version\": \"v5.1.8\",\n        \"version_normalized\": \"5.1.8.0\",\n        \"source\": {\n            \"type\": \"git\",\n            \"url\": \"https://github.com/symfony/security-core.git\",\n            \"reference\": \"13f97112f3a7f7877460777602d4d1e7a21a5f39\"\n        },\n        \"dist\": {\n            \"type\": \"zip\",\n            \"url\": \"https://api.github.com/repos/symfony/security-core/zipball/13f97112f3a7f7877460777602d4d1e7a21a5f39\",\n            \"reference\": \"13f97112f3a7f7877460777602d4d1e7a21a5f39\",\n            \"shasum\": \"\"\n        },\n        \"require\": {\n            \"php\": \">=7.2.5\",\n            \"symfony/deprecation-contracts\": \"^2.1\",\n            \"symfony/event-dispatcher-contracts\": \"^1.1|^2\",\n            \"symfony/polyfill-php80\": \"^1.15\",\n            \"symfony/service-contracts\": \"^1.1.6|^2\"\n        },\n        \"conflict\": {\n            \"symfony/event-dispatcher\": \"<4.4\",\n            \"symfony/ldap\": \"<4.4\",\n            \"symfony/security-guard\": \"<4.4\"\n        },\n        \"require-dev\": {\n            \"psr/container\": \"^1.0\",\n            \"psr/log\": \"~1.0\",\n            \"symfony/event-dispatcher\": \"^4.4|^5.0\",\n            \"symfony/expression-language\": \"^4.4|^5.0\",\n            \"symfony/http-foundation\": \"^4.4|^5.0\",\n            \"symfony/ldap\": \"^4.4|^5.0\",\n            \"symfony/validator\": \"^4.4|^5.0\"\n        },\n        \"suggest\": {\n            \"psr/container-implementation\": \"To instantiate the Security class\",\n            \"symfony/event-dispatcher\": \"\",\n            \"symfony/expression-language\": \"For using the expression voter\",\n            \"symfony/http-foundation\": \"\",\n            \"symfony/ldap\": \"For using LDAP integration\",\n            \"symfony/validator\": \"For using the user password constraint\"\n        },\n        \"time\": \"2020-10-28T05:25:38+00:00\",\n        \"type\": \"library\",\n        \"installation-source\": \"dist\",\n        \"autoload\": {\n            \"psr-4\": {\n                \"Symfony\\\\Component\\\\Security\\\\Core\\\\\": \"\"\n            },\n            \"exclude-from-classmap\": [\n                \"/Tests/\"\n            ]\n        },\n        \"notification-url\": \"https://packagist.org/downloads/\",\n        \"license\": [\n            \"MIT\"\n        ],\n        \"authors\": [\n            {\n                \"name\": \"Fabien Potencier\",\n                \"email\": \"fabien@symfony.com\"\n            },\n            {\n                \"name\": \"Symfony Community\",\n                \"homepage\": \"https://symfony.com/contributors\"\n            }\n        ],\n        \"description\": \"Symfony Security Component - Core Library\",\n        \"homepage\": \"https://symfony.com\",\n        \"funding\": [\n            {\n                \"url\": \"https://symfony.com/sponsor\",\n                \"type\": \"custom\"\n            },\n            {\n                \"url\": \"https://github.com/fabpot\",\n                \"type\": \"github\"\n            },\n            {\n                \"url\": \"https://tidelift.com/funding/github/packagist/symfony/symfony\",\n                \"type\": \"tidelift\"\n            }\n        ]\n    },\n    {\n        \"name\": \"symfony/security-csrf\",\n        \"version\": \"v5.1.8\",\n        \"version_normalized\": \"5.1.8.0\",\n        \"source\": {\n            \"type\": \"git\",\n            \"url\": \"https://github.com/symfony/security-csrf.git\",\n            \"reference\": \"6d8ea23a4f0b88a13c254d007f3d814ed882f42a\"\n        },\n        \"dist\": {\n            \"type\": \"zip\",\n            \"url\": \"https://api.github.com/repos/symfony/security-csrf/zipball/6d8ea23a4f0b88a13c254d007f3d814ed882f42a\",\n            \"reference\": \"6d8ea23a4f0b88a13c254d007f3d814ed882f42a\",\n            \"shasum\": \"\"\n        },\n        \"require\": {\n            \"php\": \">=7.2.5\",\n            \"symfony/security-core\": \"^4.4|^5.0\"\n        },\n        \"conflict\": {\n            \"symfony/http-foundation\": \"<4.4\"\n        },\n        \"require-dev\": {\n            \"symfony/http-foundation\": \"^4.4|^5.0\"\n        },\n        \"suggest\": {\n            \"symfony/http-foundation\": \"For using the class SessionTokenStorage.\"\n        },\n        \"time\": \"2020-10-24T12:01:57+00:00\",\n        \"type\": \"library\",\n        \"installation-source\": \"dist\",\n        \"autoload\": {\n            \"psr-4\": {\n                \"Symfony\\\\Component\\\\Security\\\\Csrf\\\\\": \"\"\n            },\n            \"exclude-from-classmap\": [\n                \"/Tests/\"\n            ]\n        },\n        \"notification-url\": \"https://packagist.org/downloads/\",\n        \"license\": [\n            \"MIT\"\n        ],\n        \"authors\": [\n            {\n                \"name\": \"Fabien Potencier\",\n                \"email\": \"fabien@symfony.com\"\n            },\n            {\n                \"name\": \"Symfony Community\",\n                \"homepage\": \"https://symfony.com/contributors\"\n            }\n        ],\n        \"description\": \"Symfony Security Component - CSRF Library\",\n        \"homepage\": \"https://symfony.com\",\n        \"funding\": [\n            {\n                \"url\": \"https://symfony.com/sponsor\",\n                \"type\": \"custom\"\n            },\n            {\n                \"url\": \"https://github.com/fabpot\",\n                \"type\": \"github\"\n            },\n            {\n                \"url\": \"https://tidelift.com/funding/github/packagist/symfony/symfony\",\n                \"type\": \"tidelift\"\n            }\n        ]\n    },\n    {\n        \"name\": \"symfony/security-guard\",\n        \"version\": \"v5.1.8\",\n        \"version_normalized\": \"5.1.8.0\",\n        \"source\": {\n            \"type\": \"git\",\n            \"url\": \"https://github.com/symfony/security-guard.git\",\n            \"reference\": \"076e2af7e61723ff50b281806b4d0f5e4df4e6b3\"\n        },\n        \"dist\": {\n            \"type\": \"zip\",\n            \"url\": \"https://api.github.com/repos/symfony/security-guard/zipball/076e2af7e61723ff50b281806b4d0f5e4df4e6b3\",\n            \"reference\": \"076e2af7e61723ff50b281806b4d0f5e4df4e6b3\",\n            \"shasum\": \"\"\n        },\n        \"require\": {\n            \"php\": \">=7.2.5\",\n            \"symfony/polyfill-php80\": \"^1.15\",\n            \"symfony/security-core\": \"^5.0\",\n            \"symfony/security-http\": \"^4.4.1|^5.0.1\"\n        },\n        \"require-dev\": {\n            \"psr/log\": \"~1.0\"\n        },\n        \"time\": \"2020-10-24T12:01:57+00:00\",\n        \"type\": \"library\",\n        \"installation-source\": \"dist\",\n        \"autoload\": {\n            \"psr-4\": {\n                \"Symfony\\\\Component\\\\Security\\\\Guard\\\\\": \"\"\n            },\n            \"exclude-from-classmap\": [\n                \"/Tests/\"\n            ]\n        },\n        \"notification-url\": \"https://packagist.org/downloads/\",\n        \"license\": [\n            \"MIT\"\n        ],\n        \"authors\": [\n            {\n                \"name\": \"Fabien Potencier\",\n                \"email\": \"fabien@symfony.com\"\n            },\n            {\n                \"name\": \"Symfony Community\",\n                \"homepage\": \"https://symfony.com/contributors\"\n            }\n        ],\n        \"description\": \"Symfony Security Component - Guard\",\n        \"homepage\": \"https://symfony.com\",\n        \"funding\": [\n            {\n                \"url\": \"https://symfony.com/sponsor\",\n                \"type\": \"custom\"\n            },\n            {\n                \"url\": \"https://github.com/fabpot\",\n                \"type\": \"github\"\n            },\n            {\n                \"url\": \"https://tidelift.com/funding/github/packagist/symfony/symfony\",\n                \"type\": \"tidelift\"\n            }\n        ]\n    },\n    {\n        \"name\": \"symfony/security-http\",\n        \"version\": \"v5.1.8\",\n        \"version_normalized\": \"5.1.8.0\",\n        \"source\": {\n            \"type\": \"git\",\n            \"url\": \"https://github.com/symfony/security-http.git\",\n            \"reference\": \"01fc5b3a641ea851624555793c19e6cec11b596f\"\n        },\n        \"dist\": {\n            \"type\": \"zip\",\n            \"url\": \"https://api.github.com/repos/symfony/security-http/zipball/01fc5b3a641ea851624555793c19e6cec11b596f\",\n            \"reference\": \"01fc5b3a641ea851624555793c19e6cec11b596f\",\n            \"shasum\": \"\"\n        },\n        \"require\": {\n            \"php\": \">=7.2.5\",\n            \"symfony/deprecation-contracts\": \"^2.1\",\n            \"symfony/http-foundation\": \"^4.4.7|^5.0.7\",\n            \"symfony/http-kernel\": \"^4.4|^5.0\",\n            \"symfony/polyfill-php80\": \"^1.15\",\n            \"symfony/property-access\": \"^4.4|^5.0\",\n            \"symfony/security-core\": \"^5.1\"\n        },\n        \"conflict\": {\n            \"symfony/event-dispatcher\": \"<4.3\",\n            \"symfony/security-csrf\": \"<4.4\"\n        },\n        \"require-dev\": {\n            \"psr/log\": \"~1.0\",\n            \"symfony/routing\": \"^4.4|^5.0\",\n            \"symfony/security-csrf\": \"^4.4|^5.0\"\n        },\n        \"suggest\": {\n            \"symfony/routing\": \"For using the HttpUtils class to create sub-requests, redirect the user, and match URLs\",\n            \"symfony/security-csrf\": \"For using tokens to protect authentication/logout attempts\"\n        },\n        \"time\": \"2020-10-25T22:13:28+00:00\",\n        \"type\": \"library\",\n        \"installation-source\": \"dist\",\n        \"autoload\": {\n            \"psr-4\": {\n                \"Symfony\\\\Component\\\\Security\\\\Http\\\\\": \"\"\n            },\n            \"exclude-from-classmap\": [\n                \"/Tests/\"\n            ]\n        },\n        \"notification-url\": \"https://packagist.org/downloads/\",\n        \"license\": [\n            \"MIT\"\n        ],\n        \"authors\": [\n            {\n                \"name\": \"Fabien Potencier\",\n                \"email\": \"fabien@symfony.com\"\n            },\n            {\n                \"name\": \"Symfony Community\",\n                \"homepage\": \"https://symfony.com/contributors\"\n            }\n        ],\n        \"description\": \"Symfony Security Component - HTTP Integration\",\n        \"homepage\": \"https://symfony.com\",\n        \"funding\": [\n            {\n                \"url\": \"https://symfony.com/sponsor\",\n                \"type\": \"custom\"\n            },\n            {\n                \"url\": \"https://github.com/fabpot\",\n                \"type\": \"github\"\n            },\n            {\n                \"url\": \"https://tidelift.com/funding/github/packagist/symfony/symfony\",\n                \"type\": \"tidelift\"\n            }\n        ]\n    },\n    {\n        \"name\": \"symfony/serializer\",\n        \"version\": \"v5.1.8\",\n        \"version_normalized\": \"5.1.8.0\",\n        \"source\": {\n            \"type\": \"git\",\n            \"url\": \"https://github.com/symfony/serializer.git\",\n            \"reference\": \"20d3c6c58c41344a427488c0d2902bfbfbe17ddb\"\n        },\n        \"dist\": {\n            \"type\": \"zip\",\n            \"url\": \"https://api.github.com/repos/symfony/serializer/zipball/20d3c6c58c41344a427488c0d2902bfbfbe17ddb\",\n            \"reference\": \"20d3c6c58c41344a427488c0d2902bfbfbe17ddb\",\n            \"shasum\": \"\"\n        },\n        \"require\": {\n            \"php\": \">=7.2.5\",\n            \"symfony/polyfill-ctype\": \"~1.8\",\n            \"symfony/polyfill-php80\": \"^1.15\"\n        },\n        \"conflict\": {\n            \"phpdocumentor/type-resolver\": \"<0.2.1\",\n            \"symfony/dependency-injection\": \"<4.4\",\n            \"symfony/property-access\": \"<4.4\",\n            \"symfony/property-info\": \"<4.4\",\n            \"symfony/yaml\": \"<4.4\"\n        },\n        \"require-dev\": {\n            \"doctrine/annotations\": \"~1.0\",\n            \"doctrine/cache\": \"~1.0\",\n            \"phpdocumentor/reflection-docblock\": \"^3.2|^4.0\",\n            \"symfony/cache\": \"^4.4|^5.0\",\n            \"symfony/config\": \"^4.4|^5.0\",\n            \"symfony/dependency-injection\": \"^4.4|^5.0\",\n            \"symfony/error-handler\": \"^4.4|^5.0\",\n            \"symfony/http-foundation\": \"^4.4|^5.0\",\n            \"symfony/mime\": \"^4.4|^5.0\",\n            \"symfony/property-access\": \"^4.4|^5.0\",\n            \"symfony/property-info\": \"^4.4|^5.0\",\n            \"symfony/validator\": \"^4.4|^5.0\",\n            \"symfony/yaml\": \"^4.4|^5.0\"\n        },\n        \"suggest\": {\n            \"doctrine/annotations\": \"For using the annotation mapping. You will also need doctrine/cache.\",\n            \"doctrine/cache\": \"For using the default cached annotation reader and metadata cache.\",\n            \"psr/cache-implementation\": \"For using the metadata cache.\",\n            \"symfony/config\": \"For using the XML mapping loader.\",\n            \"symfony/mime\": \"For using a MIME type guesser within the DataUriNormalizer.\",\n            \"symfony/property-access\": \"For using the ObjectNormalizer.\",\n            \"symfony/property-info\": \"To deserialize relations.\",\n            \"symfony/yaml\": \"For using the default YAML mapping loader.\"\n        },\n        \"time\": \"2020-10-24T12:01:57+00:00\",\n        \"type\": \"library\",\n        \"installation-source\": \"dist\",\n        \"autoload\": {\n            \"psr-4\": {\n                \"Symfony\\\\Component\\\\Serializer\\\\\": \"\"\n            },\n            \"exclude-from-classmap\": [\n                \"/Tests/\"\n            ]\n        },\n        \"notification-url\": \"https://packagist.org/downloads/\",\n        \"license\": [\n            \"MIT\"\n        ],\n        \"authors\": [\n            {\n                \"name\": \"Fabien Potencier\",\n                \"email\": \"fabien@symfony.com\"\n            },\n            {\n                \"name\": \"Symfony Community\",\n                \"homepage\": \"https://symfony.com/contributors\"\n            }\n        ],\n        \"description\": \"Symfony Serializer Component\",\n        \"homepage\": \"https://symfony.com\",\n        \"funding\": [\n            {\n                \"url\": \"https://symfony.com/sponsor\",\n                \"type\": \"custom\"\n            },\n            {\n                \"url\": \"https://github.com/fabpot\",\n                \"type\": \"github\"\n            },\n            {\n                \"url\": \"https://tidelift.com/funding/github/packagist/symfony/symfony\",\n                \"type\": \"tidelift\"\n            }\n        ]\n    },\n    {\n        \"name\": \"symfony/service-contracts\",\n        \"version\": \"v2.2.0\",\n        \"version_normalized\": \"2.2.0.0\",\n        \"source\": {\n            \"type\": \"git\",\n            \"url\": \"https://github.com/symfony/service-contracts.git\",\n            \"reference\": \"d15da7ba4957ffb8f1747218be9e1a121fd298a1\"\n        },\n        \"dist\": {\n            \"type\": \"zip\",\n            \"url\": \"https://api.github.com/repos/symfony/service-contracts/zipball/d15da7ba4957ffb8f1747218be9e1a121fd298a1\",\n            \"reference\": \"d15da7ba4957ffb8f1747218be9e1a121fd298a1\",\n            \"shasum\": \"\"\n        },\n        \"require\": {\n            \"php\": \">=7.2.5\",\n            \"psr/container\": \"^1.0\"\n        },\n        \"suggest\": {\n            \"symfony/service-implementation\": \"\"\n        },\n        \"time\": \"2020-09-07T11:33:47+00:00\",\n        \"type\": \"library\",\n        \"extra\": {\n            \"branch-alias\": {\n                \"dev-master\": \"2.2-dev\"\n            },\n            \"thanks\": {\n                \"name\": \"symfony/contracts\",\n                \"url\": \"https://github.com/symfony/contracts\"\n            }\n        },\n        \"installation-source\": \"dist\",\n        \"autoload\": {\n            \"psr-4\": {\n                \"Symfony\\\\Contracts\\\\Service\\\\\": \"\"\n            }\n        },\n        \"notification-url\": \"https://packagist.org/downloads/\",\n        \"license\": [\n            \"MIT\"\n        ],\n        \"authors\": [\n            {\n                \"name\": \"Nicolas Grekas\",\n                \"email\": \"p@tchwork.com\"\n            },\n            {\n                \"name\": \"Symfony Community\",\n                \"homepage\": \"https://symfony.com/contributors\"\n            }\n        ],\n        \"description\": \"Generic abstractions related to writing services\",\n        \"homepage\": \"https://symfony.com\",\n        \"keywords\": [\n            \"abstractions\",\n            \"contracts\",\n            \"decoupling\",\n            \"interfaces\",\n            \"interoperability\",\n            \"standards\"\n        ],\n        \"funding\": [\n            {\n                \"url\": \"https://symfony.com/sponsor\",\n                \"type\": \"custom\"\n            },\n            {\n                \"url\": \"https://github.com/fabpot\",\n                \"type\": \"github\"\n            },\n            {\n                \"url\": \"https://tidelift.com/funding/github/packagist/symfony/symfony\",\n                \"type\": \"tidelift\"\n            }\n        ]\n    },\n    {\n        \"name\": \"symfony/stopwatch\",\n        \"version\": \"v5.1.8\",\n        \"version_normalized\": \"5.1.8.0\",\n        \"source\": {\n            \"type\": \"git\",\n            \"url\": \"https://github.com/symfony/stopwatch.git\",\n            \"reference\": \"3d9f57c89011f0266e6b1d469e5c0110513859d5\"\n        },\n        \"dist\": {\n            \"type\": \"zip\",\n            \"url\": \"https://api.github.com/repos/symfony/stopwatch/zipball/3d9f57c89011f0266e6b1d469e5c0110513859d5\",\n            \"reference\": \"3d9f57c89011f0266e6b1d469e5c0110513859d5\",\n            \"shasum\": \"\"\n        },\n        \"require\": {\n            \"php\": \">=7.2.5\",\n            \"symfony/service-contracts\": \"^1.0|^2\"\n        },\n        \"time\": \"2020-10-24T12:01:57+00:00\",\n        \"type\": \"library\",\n        \"installation-source\": \"dist\",\n        \"autoload\": {\n            \"psr-4\": {\n                \"Symfony\\\\Component\\\\Stopwatch\\\\\": \"\"\n            },\n            \"exclude-from-classmap\": [\n                \"/Tests/\"\n            ]\n        },\n        \"notification-url\": \"https://packagist.org/downloads/\",\n        \"license\": [\n            \"MIT\"\n        ],\n        \"authors\": [\n            {\n                \"name\": \"Fabien Potencier\",\n                \"email\": \"fabien@symfony.com\"\n            },\n            {\n                \"name\": \"Symfony Community\",\n                \"homepage\": \"https://symfony.com/contributors\"\n            }\n        ],\n        \"description\": \"Symfony Stopwatch Component\",\n        \"homepage\": \"https://symfony.com\",\n        \"funding\": [\n            {\n                \"url\": \"https://symfony.com/sponsor\",\n                \"type\": \"custom\"\n            },\n            {\n                \"url\": \"https://github.com/fabpot\",\n                \"type\": \"github\"\n            },\n            {\n                \"url\": \"https://tidelift.com/funding/github/packagist/symfony/symfony\",\n                \"type\": \"tidelift\"\n            }\n        ]\n    },\n    {\n        \"name\": \"symfony/string\",\n        \"version\": \"v5.1.8\",\n        \"version_normalized\": \"5.1.8.0\",\n        \"source\": {\n            \"type\": \"git\",\n            \"url\": \"https://github.com/symfony/string.git\",\n            \"reference\": \"a97573e960303db71be0dd8fda9be3bca5e0feea\"\n        },\n        \"dist\": {\n            \"type\": \"zip\",\n            \"url\": \"https://api.github.com/repos/symfony/string/zipball/a97573e960303db71be0dd8fda9be3bca5e0feea\",\n            \"reference\": \"a97573e960303db71be0dd8fda9be3bca5e0feea\",\n            \"shasum\": \"\"\n        },\n        \"require\": {\n            \"php\": \">=7.2.5\",\n            \"symfony/polyfill-ctype\": \"~1.8\",\n            \"symfony/polyfill-intl-grapheme\": \"~1.0\",\n            \"symfony/polyfill-intl-normalizer\": \"~1.0\",\n            \"symfony/polyfill-mbstring\": \"~1.0\",\n            \"symfony/polyfill-php80\": \"~1.15\"\n        },\n        \"require-dev\": {\n            \"symfony/error-handler\": \"^4.4|^5.0\",\n            \"symfony/http-client\": \"^4.4|^5.0\",\n            \"symfony/translation-contracts\": \"^1.1|^2\",\n            \"symfony/var-exporter\": \"^4.4|^5.0\"\n        },\n        \"time\": \"2020-10-24T12:01:57+00:00\",\n        \"type\": \"library\",\n        \"installation-source\": \"dist\",\n        \"autoload\": {\n            \"psr-4\": {\n                \"Symfony\\\\Component\\\\String\\\\\": \"\"\n            },\n            \"files\": [\n                \"Resources/functions.php\"\n            ],\n            \"exclude-from-classmap\": [\n                \"/Tests/\"\n            ]\n        },\n        \"notification-url\": \"https://packagist.org/downloads/\",\n        \"license\": [\n            \"MIT\"\n        ],\n        \"authors\": [\n            {\n                \"name\": \"Nicolas Grekas\",\n                \"email\": \"p@tchwork.com\"\n            },\n            {\n                \"name\": \"Symfony Community\",\n                \"homepage\": \"https://symfony.com/contributors\"\n            }\n        ],\n        \"description\": \"Symfony String component\",\n        \"homepage\": \"https://symfony.com\",\n        \"keywords\": [\n            \"grapheme\",\n            \"i18n\",\n            \"string\",\n            \"unicode\",\n            \"utf-8\",\n            \"utf8\"\n        ],\n        \"funding\": [\n            {\n                \"url\": \"https://symfony.com/sponsor\",\n                \"type\": \"custom\"\n            },\n            {\n                \"url\": \"https://github.com/fabpot\",\n                \"type\": \"github\"\n            },\n            {\n                \"url\": \"https://tidelift.com/funding/github/packagist/symfony/symfony\",\n                \"type\": \"tidelift\"\n            }\n        ]\n    },\n    {\n        \"name\": \"symfony/swiftmailer-bundle\",\n        \"version\": \"v3.5.1\",\n        \"version_normalized\": \"3.5.1.0\",\n        \"source\": {\n            \"type\": \"git\",\n            \"url\": \"https://github.com/symfony/swiftmailer-bundle.git\",\n            \"reference\": \"933be6a3196fb354615290f53ff7ff61e0bdde58\"\n        },\n        \"dist\": {\n            \"type\": \"zip\",\n            \"url\": \"https://api.github.com/repos/symfony/swiftmailer-bundle/zipball/933be6a3196fb354615290f53ff7ff61e0bdde58\",\n            \"reference\": \"933be6a3196fb354615290f53ff7ff61e0bdde58\",\n            \"shasum\": \"\"\n        },\n        \"require\": {\n            \"php\": \">=7.1\",\n            \"swiftmailer/swiftmailer\": \"^6.1.3\",\n            \"symfony/config\": \"^4.4|^5.0\",\n            \"symfony/dependency-injection\": \"^4.4|^5.0\",\n            \"symfony/http-kernel\": \"^4.4|^5.0\"\n        },\n        \"conflict\": {\n            \"twig/twig\": \"<1.41|<2.10\"\n        },\n        \"require-dev\": {\n            \"symfony/console\": \"^4.4|^5.0\",\n            \"symfony/framework-bundle\": \"^4.4|^5.0\",\n            \"symfony/phpunit-bridge\": \"^4.4|^5.0\",\n            \"symfony/yaml\": \"^4.4|^5.0\"\n        },\n        \"time\": \"2020-10-06T05:51:35+00:00\",\n        \"type\": \"symfony-bundle\",\n        \"extra\": {\n            \"branch-alias\": {\n                \"dev-master\": \"3.5-dev\"\n            }\n        },\n        \"installation-source\": \"dist\",\n        \"autoload\": {\n            \"psr-4\": {\n                \"Symfony\\\\Bundle\\\\SwiftmailerBundle\\\\\": \"\"\n            },\n            \"exclude-from-classmap\": [\n                \"/Tests/\"\n            ]\n        },\n        \"notification-url\": \"https://packagist.org/downloads/\",\n        \"license\": [\n            \"MIT\"\n        ],\n        \"authors\": [\n            {\n                \"name\": \"Fabien Potencier\",\n                \"email\": \"fabien@symfony.com\"\n            },\n            {\n                \"name\": \"Symfony Community\",\n                \"homepage\": \"http://symfony.com/contributors\"\n            }\n        ],\n        \"description\": \"Symfony SwiftmailerBundle\",\n        \"homepage\": \"http://symfony.com\",\n        \"funding\": [\n            {\n                \"url\": \"https://symfony.com/sponsor\",\n                \"type\": \"custom\"\n            },\n            {\n                \"url\": \"https://github.com/fabpot\",\n                \"type\": \"github\"\n            },\n            {\n                \"url\": \"https://tidelift.com/funding/github/packagist/symfony/symfony\",\n                \"type\": \"tidelift\"\n            }\n        ]\n    },\n    {\n        \"name\": \"symfony/translation\",\n        \"version\": \"v5.1.8\",\n        \"version_normalized\": \"5.1.8.0\",\n        \"source\": {\n            \"type\": \"git\",\n            \"url\": \"https://github.com/symfony/translation.git\",\n            \"reference\": \"27980838fd261e04379fa91e94e81e662fe5a1b6\"\n        },\n        \"dist\": {\n            \"type\": \"zip\",\n            \"url\": \"https://api.github.com/repos/symfony/translation/zipball/27980838fd261e04379fa91e94e81e662fe5a1b6\",\n            \"reference\": \"27980838fd261e04379fa91e94e81e662fe5a1b6\",\n            \"shasum\": \"\"\n        },\n        \"require\": {\n            \"php\": \">=7.2.5\",\n            \"symfony/polyfill-mbstring\": \"~1.0\",\n            \"symfony/polyfill-php80\": \"^1.15\",\n            \"symfony/translation-contracts\": \"^2\"\n        },\n        \"conflict\": {\n            \"symfony/config\": \"<4.4\",\n            \"symfony/dependency-injection\": \"<5.0\",\n            \"symfony/http-kernel\": \"<5.0\",\n            \"symfony/twig-bundle\": \"<5.0\",\n            \"symfony/yaml\": \"<4.4\"\n        },\n        \"provide\": {\n            \"symfony/translation-implementation\": \"2.0\"\n        },\n        \"require-dev\": {\n            \"psr/log\": \"~1.0\",\n            \"symfony/config\": \"^4.4|^5.0\",\n            \"symfony/console\": \"^4.4|^5.0\",\n            \"symfony/dependency-injection\": \"^5.0\",\n            \"symfony/finder\": \"^4.4|^5.0\",\n            \"symfony/http-kernel\": \"^5.0\",\n            \"symfony/intl\": \"^4.4|^5.0\",\n            \"symfony/service-contracts\": \"^1.1.2|^2\",\n            \"symfony/yaml\": \"^4.4|^5.0\"\n        },\n        \"suggest\": {\n            \"psr/log-implementation\": \"To use logging capability in translator\",\n            \"symfony/config\": \"\",\n            \"symfony/yaml\": \"\"\n        },\n        \"time\": \"2020-10-24T12:01:57+00:00\",\n        \"type\": \"library\",\n        \"installation-source\": \"dist\",\n        \"autoload\": {\n            \"psr-4\": {\n                \"Symfony\\\\Component\\\\Translation\\\\\": \"\"\n            },\n            \"exclude-from-classmap\": [\n                \"/Tests/\"\n            ]\n        },\n        \"notification-url\": \"https://packagist.org/downloads/\",\n        \"license\": [\n            \"MIT\"\n        ],\n        \"authors\": [\n            {\n                \"name\": \"Fabien Potencier\",\n                \"email\": \"fabien@symfony.com\"\n            },\n            {\n                \"name\": \"Symfony Community\",\n                \"homepage\": \"https://symfony.com/contributors\"\n            }\n        ],\n        \"description\": \"Symfony Translation Component\",\n        \"homepage\": \"https://symfony.com\",\n        \"funding\": [\n            {\n                \"url\": \"https://symfony.com/sponsor\",\n                \"type\": \"custom\"\n            },\n            {\n                \"url\": \"https://github.com/fabpot\",\n                \"type\": \"github\"\n            },\n            {\n                \"url\": \"https://tidelift.com/funding/github/packagist/symfony/symfony\",\n                \"type\": \"tidelift\"\n            }\n        ]\n    },\n    {\n        \"name\": \"symfony/translation-contracts\",\n        \"version\": \"v2.3.0\",\n        \"version_normalized\": \"2.3.0.0\",\n        \"source\": {\n            \"type\": \"git\",\n            \"url\": \"https://github.com/symfony/translation-contracts.git\",\n            \"reference\": \"e2eaa60b558f26a4b0354e1bbb25636efaaad105\"\n        },\n        \"dist\": {\n            \"type\": \"zip\",\n            \"url\": \"https://api.github.com/repos/symfony/translation-contracts/zipball/e2eaa60b558f26a4b0354e1bbb25636efaaad105\",\n            \"reference\": \"e2eaa60b558f26a4b0354e1bbb25636efaaad105\",\n            \"shasum\": \"\"\n        },\n        \"require\": {\n            \"php\": \">=7.2.5\"\n        },\n        \"suggest\": {\n            \"symfony/translation-implementation\": \"\"\n        },\n        \"time\": \"2020-09-28T13:05:58+00:00\",\n        \"type\": \"library\",\n        \"extra\": {\n            \"branch-alias\": {\n                \"dev-master\": \"2.3-dev\"\n            },\n            \"thanks\": {\n                \"name\": \"symfony/contracts\",\n                \"url\": \"https://github.com/symfony/contracts\"\n            }\n        },\n        \"installation-source\": \"dist\",\n        \"autoload\": {\n            \"psr-4\": {\n                \"Symfony\\\\Contracts\\\\Translation\\\\\": \"\"\n            }\n        },\n        \"notification-url\": \"https://packagist.org/downloads/\",\n        \"license\": [\n            \"MIT\"\n        ],\n        \"authors\": [\n            {\n                \"name\": \"Nicolas Grekas\",\n                \"email\": \"p@tchwork.com\"\n            },\n            {\n                \"name\": \"Symfony Community\",\n                \"homepage\": \"https://symfony.com/contributors\"\n            }\n        ],\n        \"description\": \"Generic abstractions related to translation\",\n        \"homepage\": \"https://symfony.com\",\n        \"keywords\": [\n            \"abstractions\",\n            \"contracts\",\n            \"decoupling\",\n            \"interfaces\",\n            \"interoperability\",\n            \"standards\"\n        ],\n        \"funding\": [\n            {\n                \"url\": \"https://symfony.com/sponsor\",\n                \"type\": \"custom\"\n            },\n            {\n                \"url\": \"https://github.com/fabpot\",\n                \"type\": \"github\"\n            },\n            {\n                \"url\": \"https://tidelift.com/funding/github/packagist/symfony/symfony\",\n                \"type\": \"tidelift\"\n            }\n        ]\n    },\n    {\n        \"name\": \"symfony/twig-bridge\",\n        \"version\": \"v5.1.8\",\n        \"version_normalized\": \"5.1.8.0\",\n        \"source\": {\n            \"type\": \"git\",\n            \"url\": \"https://github.com/symfony/twig-bridge.git\",\n            \"reference\": \"874735a8c97963af2009e0eaee55b17fc0846db2\"\n        },\n        \"dist\": {\n            \"type\": \"zip\",\n            \"url\": \"https://api.github.com/repos/symfony/twig-bridge/zipball/874735a8c97963af2009e0eaee55b17fc0846db2\",\n            \"reference\": \"874735a8c97963af2009e0eaee55b17fc0846db2\",\n            \"shasum\": \"\"\n        },\n        \"require\": {\n            \"php\": \">=7.2.5\",\n            \"symfony/polyfill-php80\": \"^1.15\",\n            \"symfony/translation-contracts\": \"^1.1|^2\",\n            \"twig/twig\": \"^2.10|^3.0\"\n        },\n        \"conflict\": {\n            \"symfony/console\": \"<4.4\",\n            \"symfony/form\": \"<5.1\",\n            \"symfony/http-foundation\": \"<4.4\",\n            \"symfony/http-kernel\": \"<4.4\",\n            \"symfony/translation\": \"<5.0\",\n            \"symfony/workflow\": \"<4.4\"\n        },\n        \"require-dev\": {\n            \"egulias/email-validator\": \"^2.1.10\",\n            \"symfony/asset\": \"^4.4|^5.0\",\n            \"symfony/console\": \"^4.4|^5.0\",\n            \"symfony/dependency-injection\": \"^4.4|^5.0\",\n            \"symfony/expression-language\": \"^4.4|^5.0\",\n            \"symfony/finder\": \"^4.4|^5.0\",\n            \"symfony/form\": \"^5.1\",\n            \"symfony/http-foundation\": \"^4.4|^5.0\",\n            \"symfony/http-kernel\": \"^4.4|^5.0\",\n            \"symfony/mime\": \"^4.4|^5.0\",\n            \"symfony/polyfill-intl-icu\": \"~1.0\",\n            \"symfony/routing\": \"^4.4|^5.0\",\n            \"symfony/security-acl\": \"^2.8|^3.0\",\n            \"symfony/security-core\": \"^4.4|^5.0\",\n            \"symfony/security-csrf\": \"^4.4|^5.0\",\n            \"symfony/security-http\": \"^4.4|^5.0\",\n            \"symfony/stopwatch\": \"^4.4|^5.0\",\n            \"symfony/translation\": \"^5.0\",\n            \"symfony/web-link\": \"^4.4|^5.0\",\n            \"symfony/workflow\": \"^4.4|^5.0\",\n            \"symfony/yaml\": \"^4.4|^5.0\",\n            \"twig/cssinliner-extra\": \"^2.12\",\n            \"twig/inky-extra\": \"^2.12\",\n            \"twig/markdown-extra\": \"^2.12\"\n        },\n        \"suggest\": {\n            \"symfony/asset\": \"For using the AssetExtension\",\n            \"symfony/expression-language\": \"For using the ExpressionExtension\",\n            \"symfony/finder\": \"\",\n            \"symfony/form\": \"For using the FormExtension\",\n            \"symfony/http-kernel\": \"For using the HttpKernelExtension\",\n            \"symfony/routing\": \"For using the RoutingExtension\",\n            \"symfony/security-core\": \"For using the SecurityExtension\",\n            \"symfony/security-csrf\": \"For using the CsrfExtension\",\n            \"symfony/security-http\": \"For using the LogoutUrlExtension\",\n            \"symfony/stopwatch\": \"For using the StopwatchExtension\",\n            \"symfony/translation\": \"For using the TranslationExtension\",\n            \"symfony/var-dumper\": \"For using the DumpExtension\",\n            \"symfony/web-link\": \"For using the WebLinkExtension\",\n            \"symfony/yaml\": \"For using the YamlExtension\"\n        },\n        \"time\": \"2020-10-24T12:01:57+00:00\",\n        \"type\": \"symfony-bridge\",\n        \"installation-source\": \"dist\",\n        \"autoload\": {\n            \"psr-4\": {\n                \"Symfony\\\\Bridge\\\\Twig\\\\\": \"\"\n            },\n            \"exclude-from-classmap\": [\n                \"/Tests/\"\n            ]\n        },\n        \"notification-url\": \"https://packagist.org/downloads/\",\n        \"license\": [\n            \"MIT\"\n        ],\n        \"authors\": [\n            {\n                \"name\": \"Fabien Potencier\",\n                \"email\": \"fabien@symfony.com\"\n            },\n            {\n                \"name\": \"Symfony Community\",\n                \"homepage\": \"https://symfony.com/contributors\"\n            }\n        ],\n        \"description\": \"Symfony Twig Bridge\",\n        \"homepage\": \"https://symfony.com\",\n        \"funding\": [\n            {\n                \"url\": \"https://symfony.com/sponsor\",\n                \"type\": \"custom\"\n            },\n            {\n                \"url\": \"https://github.com/fabpot\",\n                \"type\": \"github\"\n            },\n            {\n                \"url\": \"https://tidelift.com/funding/github/packagist/symfony/symfony\",\n                \"type\": \"tidelift\"\n            }\n        ]\n    },\n    {\n        \"name\": \"symfony/twig-bundle\",\n        \"version\": \"v5.1.8\",\n        \"version_normalized\": \"5.1.8.0\",\n        \"source\": {\n            \"type\": \"git\",\n            \"url\": \"https://github.com/symfony/twig-bundle.git\",\n            \"reference\": \"370bb30a9e8dc2b0c29791eec300b0b529bd783f\"\n        },\n        \"dist\": {\n            \"type\": \"zip\",\n            \"url\": \"https://api.github.com/repos/symfony/twig-bundle/zipball/370bb30a9e8dc2b0c29791eec300b0b529bd783f\",\n            \"reference\": \"370bb30a9e8dc2b0c29791eec300b0b529bd783f\",\n            \"shasum\": \"\"\n        },\n        \"require\": {\n            \"php\": \">=7.2.5\",\n            \"symfony/config\": \"^4.4|^5.0\",\n            \"symfony/http-foundation\": \"^4.4|^5.0\",\n            \"symfony/http-kernel\": \"^5.0\",\n            \"symfony/polyfill-ctype\": \"~1.8\",\n            \"symfony/twig-bridge\": \"^5.0\",\n            \"twig/twig\": \"^2.10|^3.0\"\n        },\n        \"conflict\": {\n            \"symfony/dependency-injection\": \"<4.4\",\n            \"symfony/framework-bundle\": \"<5.0\",\n            \"symfony/translation\": \"<5.0\"\n        },\n        \"require-dev\": {\n            \"doctrine/annotations\": \"~1.7\",\n            \"doctrine/cache\": \"~1.0\",\n            \"symfony/asset\": \"^4.4|^5.0\",\n            \"symfony/dependency-injection\": \"^4.4|^5.0\",\n            \"symfony/expression-language\": \"^4.4|^5.0\",\n            \"symfony/finder\": \"^4.4|^5.0\",\n            \"symfony/form\": \"^4.4|^5.0\",\n            \"symfony/framework-bundle\": \"^5.0\",\n            \"symfony/routing\": \"^4.4|^5.0\",\n            \"symfony/stopwatch\": \"^4.4|^5.0\",\n            \"symfony/translation\": \"^5.0\",\n            \"symfony/web-link\": \"^4.4|^5.0\",\n            \"symfony/yaml\": \"^4.4|^5.0\"\n        },\n        \"time\": \"2020-10-24T12:01:57+00:00\",\n        \"type\": \"symfony-bundle\",\n        \"installation-source\": \"dist\",\n        \"autoload\": {\n            \"psr-4\": {\n                \"Symfony\\\\Bundle\\\\TwigBundle\\\\\": \"\"\n            },\n            \"exclude-from-classmap\": [\n                \"/Tests/\"\n            ]\n        },\n        \"notification-url\": \"https://packagist.org/downloads/\",\n        \"license\": [\n            \"MIT\"\n        ],\n        \"authors\": [\n            {\n                \"name\": \"Fabien Potencier\",\n                \"email\": \"fabien@symfony.com\"\n            },\n            {\n                \"name\": \"Symfony Community\",\n                \"homepage\": \"https://symfony.com/contributors\"\n            }\n        ],\n        \"description\": \"Symfony TwigBundle\",\n        \"homepage\": \"https://symfony.com\",\n        \"funding\": [\n            {\n                \"url\": \"https://symfony.com/sponsor\",\n                \"type\": \"custom\"\n            },\n            {\n                \"url\": \"https://github.com/fabpot\",\n                \"type\": \"github\"\n            },\n            {\n                \"url\": \"https://tidelift.com/funding/github/packagist/symfony/symfony\",\n                \"type\": \"tidelift\"\n            }\n        ]\n    },\n    {\n        \"name\": \"symfony/validator\",\n        \"version\": \"v5.1.8\",\n        \"version_normalized\": \"5.1.8.0\",\n        \"source\": {\n            \"type\": \"git\",\n            \"url\": \"https://github.com/symfony/validator.git\",\n            \"reference\": \"360acadab7edcdca9005c4ad3b535f9c20db62fb\"\n        },\n        \"dist\": {\n            \"type\": \"zip\",\n            \"url\": \"https://api.github.com/repos/symfony/validator/zipball/360acadab7edcdca9005c4ad3b535f9c20db62fb\",\n            \"reference\": \"360acadab7edcdca9005c4ad3b535f9c20db62fb\",\n            \"shasum\": \"\"\n        },\n        \"require\": {\n            \"php\": \">=7.2.5\",\n            \"symfony/deprecation-contracts\": \"^2.0\",\n            \"symfony/polyfill-ctype\": \"~1.8\",\n            \"symfony/polyfill-mbstring\": \"~1.0\",\n            \"symfony/polyfill-php80\": \"^1.15\",\n            \"symfony/translation-contracts\": \"^1.1|^2\"\n        },\n        \"conflict\": {\n            \"doctrine/lexer\": \"<1.0.2\",\n            \"phpunit/phpunit\": \"<5.4.3\",\n            \"symfony/dependency-injection\": \"<4.4\",\n            \"symfony/expression-language\": \"<5.1\",\n            \"symfony/http-kernel\": \"<4.4\",\n            \"symfony/intl\": \"<4.4\",\n            \"symfony/translation\": \"<4.4\",\n            \"symfony/yaml\": \"<4.4\"\n        },\n        \"require-dev\": {\n            \"doctrine/annotations\": \"~1.7\",\n            \"doctrine/cache\": \"~1.0\",\n            \"egulias/email-validator\": \"^2.1.10\",\n            \"symfony/cache\": \"^4.4|^5.0\",\n            \"symfony/config\": \"^4.4|^5.0\",\n            \"symfony/dependency-injection\": \"^4.4|^5.0\",\n            \"symfony/expression-language\": \"^5.1\",\n            \"symfony/http-client\": \"^4.4|^5.0\",\n            \"symfony/http-foundation\": \"^4.4|^5.0\",\n            \"symfony/http-kernel\": \"^4.4|^5.0\",\n            \"symfony/intl\": \"^4.4|^5.0\",\n            \"symfony/mime\": \"^4.4|^5.0\",\n            \"symfony/property-access\": \"^4.4|^5.0\",\n            \"symfony/property-info\": \"^4.4|^5.0\",\n            \"symfony/translation\": \"^4.4|^5.0\",\n            \"symfony/yaml\": \"^4.4|^5.0\"\n        },\n        \"suggest\": {\n            \"doctrine/annotations\": \"For using the annotation mapping. You will also need doctrine/cache.\",\n            \"doctrine/cache\": \"For using the default cached annotation reader.\",\n            \"egulias/email-validator\": \"Strict (RFC compliant) email validation\",\n            \"psr/cache-implementation\": \"For using the mapping cache.\",\n            \"symfony/config\": \"\",\n            \"symfony/expression-language\": \"For using the Expression validator and the ExpressionLanguageSyntax constraints\",\n            \"symfony/http-foundation\": \"\",\n            \"symfony/intl\": \"\",\n            \"symfony/property-access\": \"For accessing properties within comparison constraints\",\n            \"symfony/property-info\": \"To automatically add NotNull and Type constraints\",\n            \"symfony/translation\": \"For translating validation errors.\",\n            \"symfony/yaml\": \"\"\n        },\n        \"time\": \"2020-10-28T05:25:38+00:00\",\n        \"type\": \"library\",\n        \"installation-source\": \"dist\",\n        \"autoload\": {\n            \"psr-4\": {\n                \"Symfony\\\\Component\\\\Validator\\\\\": \"\"\n            },\n            \"exclude-from-classmap\": [\n                \"/Tests/\"\n            ]\n        },\n        \"notification-url\": \"https://packagist.org/downloads/\",\n        \"license\": [\n            \"MIT\"\n        ],\n        \"authors\": [\n            {\n                \"name\": \"Fabien Potencier\",\n                \"email\": \"fabien@symfony.com\"\n            },\n            {\n                \"name\": \"Symfony Community\",\n                \"homepage\": \"https://symfony.com/contributors\"\n            }\n        ],\n        \"description\": \"Symfony Validator Component\",\n        \"homepage\": \"https://symfony.com\",\n        \"funding\": [\n            {\n                \"url\": \"https://symfony.com/sponsor\",\n                \"type\": \"custom\"\n            },\n            {\n                \"url\": \"https://github.com/fabpot\",\n                \"type\": \"github\"\n            },\n            {\n                \"url\": \"https://tidelift.com/funding/github/packagist/symfony/symfony\",\n                \"type\": \"tidelift\"\n            }\n        ]\n    },\n    {\n        \"name\": \"symfony/var-dumper\",\n        \"version\": \"v5.1.8\",\n        \"version_normalized\": \"5.1.8.0\",\n        \"source\": {\n            \"type\": \"git\",\n            \"url\": \"https://github.com/symfony/var-dumper.git\",\n            \"reference\": \"4e13f3fcefb1fcaaa5efb5403581406f4e840b9a\"\n        },\n        \"dist\": {\n            \"type\": \"zip\",\n            \"url\": \"https://api.github.com/repos/symfony/var-dumper/zipball/4e13f3fcefb1fcaaa5efb5403581406f4e840b9a\",\n            \"reference\": \"4e13f3fcefb1fcaaa5efb5403581406f4e840b9a\",\n            \"shasum\": \"\"\n        },\n        \"require\": {\n            \"php\": \">=7.2.5\",\n            \"symfony/polyfill-mbstring\": \"~1.0\",\n            \"symfony/polyfill-php80\": \"^1.15\"\n        },\n        \"conflict\": {\n            \"phpunit/phpunit\": \"<5.4.3\",\n            \"symfony/console\": \"<4.4\"\n        },\n        \"require-dev\": {\n            \"ext-iconv\": \"*\",\n            \"symfony/console\": \"^4.4|^5.0\",\n            \"symfony/process\": \"^4.4|^5.0\",\n            \"twig/twig\": \"^2.4|^3.0\"\n        },\n        \"suggest\": {\n            \"ext-iconv\": \"To convert non-UTF-8 strings to UTF-8 (or symfony/polyfill-iconv in case ext-iconv cannot be used).\",\n            \"ext-intl\": \"To show region name in time zone dump\",\n            \"symfony/console\": \"To use the ServerDumpCommand and/or the bin/var-dump-server script\"\n        },\n        \"time\": \"2020-10-27T10:11:13+00:00\",\n        \"bin\": [\n            \"Resources/bin/var-dump-server\"\n        ],\n        \"type\": \"library\",\n        \"installation-source\": \"dist\",\n        \"autoload\": {\n            \"files\": [\n                \"Resources/functions/dump.php\"\n            ],\n            \"psr-4\": {\n                \"Symfony\\\\Component\\\\VarDumper\\\\\": \"\"\n            },\n            \"exclude-from-classmap\": [\n                \"/Tests/\"\n            ]\n        },\n        \"notification-url\": \"https://packagist.org/downloads/\",\n        \"license\": [\n            \"MIT\"\n        ],\n        \"authors\": [\n            {\n                \"name\": \"Nicolas Grekas\",\n                \"email\": \"p@tchwork.com\"\n            },\n            {\n                \"name\": \"Symfony Community\",\n                \"homepage\": \"https://symfony.com/contributors\"\n            }\n        ],\n        \"description\": \"Symfony mechanism for exploring and dumping PHP variables\",\n        \"homepage\": \"https://symfony.com\",\n        \"keywords\": [\n            \"debug\",\n            \"dump\"\n        ],\n        \"funding\": [\n            {\n                \"url\": \"https://symfony.com/sponsor\",\n                \"type\": \"custom\"\n            },\n            {\n                \"url\": \"https://github.com/fabpot\",\n                \"type\": \"github\"\n            },\n            {\n                \"url\": \"https://tidelift.com/funding/github/packagist/symfony/symfony\",\n                \"type\": \"tidelift\"\n            }\n        ]\n    },\n    {\n        \"name\": \"symfony/var-exporter\",\n        \"version\": \"v5.1.8\",\n        \"version_normalized\": \"5.1.8.0\",\n        \"source\": {\n            \"type\": \"git\",\n            \"url\": \"https://github.com/symfony/var-exporter.git\",\n            \"reference\": \"b4048bfc6248413592462c029381bdb2f7b6525f\"\n        },\n        \"dist\": {\n            \"type\": \"zip\",\n            \"url\": \"https://api.github.com/repos/symfony/var-exporter/zipball/b4048bfc6248413592462c029381bdb2f7b6525f\",\n            \"reference\": \"b4048bfc6248413592462c029381bdb2f7b6525f\",\n            \"shasum\": \"\"\n        },\n        \"require\": {\n            \"php\": \">=7.2.5\",\n            \"symfony/polyfill-php80\": \"^1.15\"\n        },\n        \"require-dev\": {\n            \"symfony/var-dumper\": \"^4.4.9|^5.0.9\"\n        },\n        \"time\": \"2020-10-24T12:01:57+00:00\",\n        \"type\": \"library\",\n        \"installation-source\": \"dist\",\n        \"autoload\": {\n            \"psr-4\": {\n                \"Symfony\\\\Component\\\\VarExporter\\\\\": \"\"\n            },\n            \"exclude-from-classmap\": [\n                \"/Tests/\"\n            ]\n        },\n        \"notification-url\": \"https://packagist.org/downloads/\",\n        \"license\": [\n            \"MIT\"\n        ],\n        \"authors\": [\n            {\n                \"name\": \"Nicolas Grekas\",\n                \"email\": \"p@tchwork.com\"\n            },\n            {\n                \"name\": \"Symfony Community\",\n                \"homepage\": \"https://symfony.com/contributors\"\n            }\n        ],\n        \"description\": \"A blend of var_export() + serialize() to turn any serializable data structure to plain PHP code\",\n        \"homepage\": \"https://symfony.com\",\n        \"keywords\": [\n            \"clone\",\n            \"construct\",\n            \"export\",\n            \"hydrate\",\n            \"instantiate\",\n            \"serialize\"\n        ],\n        \"funding\": [\n            {\n                \"url\": \"https://symfony.com/sponsor\",\n                \"type\": \"custom\"\n            },\n            {\n                \"url\": \"https://github.com/fabpot\",\n                \"type\": \"github\"\n            },\n            {\n                \"url\": \"https://tidelift.com/funding/github/packagist/symfony/symfony\",\n                \"type\": \"tidelift\"\n            }\n        ]\n    },\n    {\n        \"name\": \"symfony/web-link\",\n        \"version\": \"v5.1.8\",\n        \"version_normalized\": \"5.1.8.0\",\n        \"source\": {\n            \"type\": \"git\",\n            \"url\": \"https://github.com/symfony/web-link.git\",\n            \"reference\": \"e805314ad8c4298d9bfc75335e35f83d6db2f43f\"\n        },\n        \"dist\": {\n            \"type\": \"zip\",\n            \"url\": \"https://api.github.com/repos/symfony/web-link/zipball/e805314ad8c4298d9bfc75335e35f83d6db2f43f\",\n            \"reference\": \"e805314ad8c4298d9bfc75335e35f83d6db2f43f\",\n            \"shasum\": \"\"\n        },\n        \"require\": {\n            \"php\": \">=7.2.5\",\n            \"psr/link\": \"^1.0\"\n        },\n        \"conflict\": {\n            \"symfony/http-kernel\": \"<4.4\"\n        },\n        \"provide\": {\n            \"psr/link-implementation\": \"1.0\"\n        },\n        \"require-dev\": {\n            \"symfony/http-foundation\": \"^4.4|^5.0\",\n            \"symfony/http-kernel\": \"^4.4|^5.0\"\n        },\n        \"suggest\": {\n            \"symfony/http-kernel\": \"\"\n        },\n        \"time\": \"2020-10-24T12:01:57+00:00\",\n        \"type\": \"library\",\n        \"installation-source\": \"dist\",\n        \"autoload\": {\n            \"psr-4\": {\n                \"Symfony\\\\Component\\\\WebLink\\\\\": \"\"\n            },\n            \"exclude-from-classmap\": [\n                \"/Tests/\"\n            ]\n        },\n        \"notification-url\": \"https://packagist.org/downloads/\",\n        \"license\": [\n            \"MIT\"\n        ],\n        \"authors\": [\n            {\n                \"name\": \"Kévin Dunglas\",\n                \"email\": \"dunglas@gmail.com\"\n            },\n            {\n                \"name\": \"Symfony Community\",\n                \"homepage\": \"https://symfony.com/contributors\"\n            }\n        ],\n        \"description\": \"Symfony WebLink Component\",\n        \"homepage\": \"https://symfony.com\",\n        \"keywords\": [\n            \"dns-prefetch\",\n            \"http\",\n            \"http2\",\n            \"link\",\n            \"performance\",\n            \"prefetch\",\n            \"preload\",\n            \"prerender\",\n            \"psr13\",\n            \"push\"\n        ],\n        \"funding\": [\n            {\n                \"url\": \"https://symfony.com/sponsor\",\n                \"type\": \"custom\"\n            },\n            {\n                \"url\": \"https://github.com/fabpot\",\n                \"type\": \"github\"\n            },\n            {\n                \"url\": \"https://tidelift.com/funding/github/packagist/symfony/symfony\",\n                \"type\": \"tidelift\"\n            }\n        ]\n    },\n    {\n        \"name\": \"symfony/web-profiler-bundle\",\n        \"version\": \"v5.1.8\",\n        \"version_normalized\": \"5.1.8.0\",\n        \"source\": {\n            \"type\": \"git\",\n            \"url\": \"https://github.com/symfony/web-profiler-bundle.git\",\n            \"reference\": \"d94865ad9365ee4ac0d9bd24d9e90410e7ec6185\"\n        },\n        \"dist\": {\n            \"type\": \"zip\",\n            \"url\": \"https://api.github.com/repos/symfony/web-profiler-bundle/zipball/d94865ad9365ee4ac0d9bd24d9e90410e7ec6185\",\n            \"reference\": \"d94865ad9365ee4ac0d9bd24d9e90410e7ec6185\",\n            \"shasum\": \"\"\n        },\n        \"require\": {\n            \"php\": \">=7.2.5\",\n            \"symfony/config\": \"^4.4|^5.0\",\n            \"symfony/framework-bundle\": \"^5.1\",\n            \"symfony/http-kernel\": \"^4.4|^5.0\",\n            \"symfony/routing\": \"^4.4|^5.0\",\n            \"symfony/twig-bundle\": \"^4.4|^5.0\",\n            \"twig/twig\": \"^2.10|^3.0\"\n        },\n        \"conflict\": {\n            \"symfony/form\": \"<4.4\",\n            \"symfony/messenger\": \"<4.4\"\n        },\n        \"require-dev\": {\n            \"symfony/browser-kit\": \"^4.4|^5.0\",\n            \"symfony/console\": \"^4.4|^5.0\",\n            \"symfony/css-selector\": \"^4.4|^5.0\",\n            \"symfony/stopwatch\": \"^4.4|^5.0\"\n        },\n        \"time\": \"2020-10-24T12:01:57+00:00\",\n        \"type\": \"symfony-bundle\",\n        \"installation-source\": \"dist\",\n        \"autoload\": {\n            \"psr-4\": {\n                \"Symfony\\\\Bundle\\\\WebProfilerBundle\\\\\": \"\"\n            },\n            \"exclude-from-classmap\": [\n                \"/Tests/\"\n            ]\n        },\n        \"notification-url\": \"https://packagist.org/downloads/\",\n        \"license\": [\n            \"MIT\"\n        ],\n        \"authors\": [\n            {\n                \"name\": \"Fabien Potencier\",\n                \"email\": \"fabien@symfony.com\"\n            },\n            {\n                \"name\": \"Symfony Community\",\n                \"homepage\": \"https://symfony.com/contributors\"\n            }\n        ],\n        \"description\": \"Symfony WebProfilerBundle\",\n        \"homepage\": \"https://symfony.com\",\n        \"funding\": [\n            {\n                \"url\": \"https://symfony.com/sponsor\",\n                \"type\": \"custom\"\n            },\n            {\n                \"url\": \"https://github.com/fabpot\",\n                \"type\": \"github\"\n            },\n            {\n                \"url\": \"https://tidelift.com/funding/github/packagist/symfony/symfony\",\n                \"type\": \"tidelift\"\n            }\n        ]\n    },\n    {\n        \"name\": \"symfony/yaml\",\n        \"version\": \"v5.1.8\",\n        \"version_normalized\": \"5.1.8.0\",\n        \"source\": {\n            \"type\": \"git\",\n            \"url\": \"https://github.com/symfony/yaml.git\",\n            \"reference\": \"f284e032c3cefefb9943792132251b79a6127ca6\"\n        },\n        \"dist\": {\n            \"type\": \"zip\",\n            \"url\": \"https://api.github.com/repos/symfony/yaml/zipball/f284e032c3cefefb9943792132251b79a6127ca6\",\n            \"reference\": \"f284e032c3cefefb9943792132251b79a6127ca6\",\n            \"shasum\": \"\"\n        },\n        \"require\": {\n            \"php\": \">=7.2.5\",\n            \"symfony/deprecation-contracts\": \"^2.1\",\n            \"symfony/polyfill-ctype\": \"~1.8\"\n        },\n        \"conflict\": {\n            \"symfony/console\": \"<4.4\"\n        },\n        \"require-dev\": {\n            \"symfony/console\": \"^4.4|^5.0\"\n        },\n        \"suggest\": {\n            \"symfony/console\": \"For validating YAML files using the lint command\"\n        },\n        \"time\": \"2020-10-24T12:03:25+00:00\",\n        \"bin\": [\n            \"Resources/bin/yaml-lint\"\n        ],\n        \"type\": \"library\",\n        \"installation-source\": \"dist\",\n        \"autoload\": {\n            \"psr-4\": {\n                \"Symfony\\\\Component\\\\Yaml\\\\\": \"\"\n            },\n            \"exclude-from-classmap\": [\n                \"/Tests/\"\n            ]\n        },\n        \"notification-url\": \"https://packagist.org/downloads/\",\n        \"license\": [\n            \"MIT\"\n        ],\n        \"authors\": [\n            {\n                \"name\": \"Fabien Potencier\",\n                \"email\": \"fabien@symfony.com\"\n            },\n            {\n                \"name\": \"Symfony Community\",\n                \"homepage\": \"https://symfony.com/contributors\"\n            }\n        ],\n        \"description\": \"Symfony Yaml Component\",\n        \"homepage\": \"https://symfony.com\",\n        \"funding\": [\n            {\n                \"url\": \"https://symfony.com/sponsor\",\n                \"type\": \"custom\"\n            },\n            {\n                \"url\": \"https://github.com/fabpot\",\n                \"type\": \"github\"\n            },\n            {\n                \"url\": \"https://tidelift.com/funding/github/packagist/symfony/symfony\",\n                \"type\": \"tidelift\"\n            }\n        ]\n    },\n    {\n        \"name\": \"twig/extra-bundle\",\n        \"version\": \"v3.1.1\",\n        \"version_normalized\": \"3.1.1.0\",\n        \"source\": {\n            \"type\": \"git\",\n            \"url\": \"https://github.com/twigphp/twig-extra-bundle.git\",\n            \"reference\": \"a7c5799cf742ab0827f5d32df37528ee8bf5a233\"\n        },\n        \"dist\": {\n            \"type\": \"zip\",\n            \"url\": \"https://api.github.com/repos/twigphp/twig-extra-bundle/zipball/a7c5799cf742ab0827f5d32df37528ee8bf5a233\",\n            \"reference\": \"a7c5799cf742ab0827f5d32df37528ee8bf5a233\",\n            \"shasum\": \"\"\n        },\n        \"require\": {\n            \"php\": \"^7.1.3|^8.0\",\n            \"symfony/framework-bundle\": \"^4.3|^5.0\",\n            \"symfony/twig-bundle\": \"^4.3|^5.0\",\n            \"twig/twig\": \"^2.4|^3.0\"\n        },\n        \"require-dev\": {\n            \"twig/cssinliner-extra\": \"^2.12|^3.0\",\n            \"twig/html-extra\": \"^2.12|^3.0\",\n            \"twig/inky-extra\": \"^2.12|^3.0\",\n            \"twig/intl-extra\": \"^2.12|^3.0\",\n            \"twig/markdown-extra\": \"^2.12|^3.0\"\n        },\n        \"time\": \"2020-05-21T09:56:39+00:00\",\n        \"type\": \"symfony-bundle\",\n        \"extra\": {\n            \"branch-alias\": {\n                \"dev-master\": \"3.0-dev\"\n            }\n        },\n        \"installation-source\": \"dist\",\n        \"autoload\": {\n            \"psr-4\": {\n                \"Twig\\\\Extra\\\\TwigExtraBundle\\\\\": \"src/\"\n            }\n        },\n        \"notification-url\": \"https://packagist.org/downloads/\",\n        \"license\": [\n            \"MIT\"\n        ],\n        \"authors\": [\n            {\n                \"name\": \"Fabien Potencier\",\n                \"email\": \"fabien@symfony.com\",\n                \"homepage\": \"http://fabien.potencier.org\",\n                \"role\": \"Lead Developer\"\n            }\n        ],\n        \"description\": \"A Symfony bundle for extra Twig extensions\",\n        \"homepage\": \"https://twig.symfony.com\",\n        \"keywords\": [\n            \"bundle\",\n            \"extra\",\n            \"twig\"\n        ],\n        \"funding\": [\n            {\n                \"url\": \"https://github.com/fabpot\",\n                \"type\": \"github\"\n            },\n            {\n                \"url\": \"https://tidelift.com/funding/github/packagist/twig/twig\",\n                \"type\": \"tidelift\"\n            }\n        ]\n    },\n    {\n        \"name\": \"twig/twig\",\n        \"version\": \"v3.1.1\",\n        \"version_normalized\": \"3.1.1.0\",\n        \"source\": {\n            \"type\": \"git\",\n            \"url\": \"https://github.com/twigphp/Twig.git\",\n            \"reference\": \"b02fa41f3783a2616eccef7b92fbc2343ffed737\"\n        },\n        \"dist\": {\n            \"type\": \"zip\",\n            \"url\": \"https://api.github.com/repos/twigphp/Twig/zipball/b02fa41f3783a2616eccef7b92fbc2343ffed737\",\n            \"reference\": \"b02fa41f3783a2616eccef7b92fbc2343ffed737\",\n            \"shasum\": \"\"\n        },\n        \"require\": {\n            \"php\": \">=7.2.5\",\n            \"symfony/polyfill-ctype\": \"^1.8\",\n            \"symfony/polyfill-mbstring\": \"^1.3\"\n        },\n        \"require-dev\": {\n            \"psr/container\": \"^1.0\",\n            \"symfony/phpunit-bridge\": \"^4.4.9|^5.0.9\"\n        },\n        \"time\": \"2020-10-27T19:28:23+00:00\",\n        \"type\": \"library\",\n        \"extra\": {\n            \"branch-alias\": {\n                \"dev-master\": \"3.1-dev\"\n            }\n        },\n        \"installation-source\": \"dist\",\n        \"autoload\": {\n            \"psr-4\": {\n                \"Twig\\\\\": \"src/\"\n            }\n        },\n        \"notification-url\": \"https://packagist.org/downloads/\",\n        \"license\": [\n            \"BSD-3-Clause\"\n        ],\n        \"authors\": [\n            {\n                \"name\": \"Fabien Potencier\",\n                \"email\": \"fabien@symfony.com\",\n                \"homepage\": \"http://fabien.potencier.org\",\n                \"role\": \"Lead Developer\"\n            },\n            {\n                \"name\": \"Twig Team\",\n                \"role\": \"Contributors\"\n            },\n            {\n                \"name\": \"Armin Ronacher\",\n                \"email\": \"armin.ronacher@active-4.com\",\n                \"role\": \"Project Founder\"\n            }\n        ],\n        \"description\": \"Twig, the flexible, fast, and secure template language for PHP\",\n        \"homepage\": \"https://twig.symfony.com\",\n        \"keywords\": [\n            \"templating\"\n        ],\n        \"funding\": [\n            {\n                \"url\": \"https://github.com/fabpot\",\n                \"type\": \"github\"\n            },\n            {\n                \"url\": \"https://tidelift.com/funding/github/packagist/twig/twig\",\n                \"type\": \"tidelift\"\n            }\n        ]\n    },\n    {\n        \"name\": \"webimpress/safe-writer\",\n        \"version\": \"2.1.0\",\n        \"version_normalized\": \"2.1.0.0\",\n        \"source\": {\n            \"type\": \"git\",\n            \"url\": \"https://github.com/webimpress/safe-writer.git\",\n            \"reference\": \"5cfafdec5873c389036f14bf832a5efc9390dcdd\"\n        },\n        \"dist\": {\n            \"type\": \"zip\",\n            \"url\": \"https://api.github.com/repos/webimpress/safe-writer/zipball/5cfafdec5873c389036f14bf832a5efc9390dcdd\",\n            \"reference\": \"5cfafdec5873c389036f14bf832a5efc9390dcdd\",\n            \"shasum\": \"\"\n        },\n        \"require\": {\n            \"php\": \"^7.2 || ^8.0\"\n        },\n        \"require-dev\": {\n            \"phpunit/phpunit\": \"^8.5.8 || ^9.3.7\",\n            \"vimeo/psalm\": \"^3.14.2\",\n            \"webimpress/coding-standard\": \"^1.1.5\"\n        },\n        \"time\": \"2020-08-25T07:21:11+00:00\",\n        \"type\": \"library\",\n        \"extra\": {\n            \"branch-alias\": {\n                \"dev-master\": \"2.1.x-dev\",\n                \"dev-develop\": \"2.2.x-dev\",\n                \"dev-release-1.0\": \"1.0.x-dev\"\n            }\n        },\n        \"installation-source\": \"dist\",\n        \"autoload\": {\n            \"psr-4\": {\n                \"Webimpress\\\\SafeWriter\\\\\": \"src/\"\n            }\n        },\n        \"notification-url\": \"https://packagist.org/downloads/\",\n        \"license\": [\n            \"BSD-2-Clause\"\n        ],\n        \"description\": \"Tool to write files safely, to avoid race conditions\",\n        \"keywords\": [\n            \"concurrent write\",\n            \"file writer\",\n            \"race condition\",\n            \"safe writer\",\n            \"webimpress\"\n        ],\n        \"funding\": [\n            {\n                \"url\": \"https://github.com/michalbundyra\",\n                \"type\": \"github\"\n            }\n        ]\n    },\n    {\n        \"name\": \"webmozart/assert\",\n        \"version\": \"1.9.1\",\n        \"version_normalized\": \"1.9.1.0\",\n        \"source\": {\n            \"type\": \"git\",\n            \"url\": \"https://github.com/webmozart/assert.git\",\n            \"reference\": \"bafc69caeb4d49c39fd0779086c03a3738cbb389\"\n        },\n        \"dist\": {\n            \"type\": \"zip\",\n            \"url\": \"https://api.github.com/repos/webmozart/assert/zipball/bafc69caeb4d49c39fd0779086c03a3738cbb389\",\n            \"reference\": \"bafc69caeb4d49c39fd0779086c03a3738cbb389\",\n            \"shasum\": \"\"\n        },\n        \"require\": {\n            \"php\": \"^5.3.3 || ^7.0 || ^8.0\",\n            \"symfony/polyfill-ctype\": \"^1.8\"\n        },\n        \"conflict\": {\n            \"phpstan/phpstan\": \"<0.12.20\",\n            \"vimeo/psalm\": \"<3.9.1\"\n        },\n        \"require-dev\": {\n            \"phpunit/phpunit\": \"^4.8.36 || ^7.5.13\"\n        },\n        \"time\": \"2020-07-08T17:02:28+00:00\",\n        \"type\": \"library\",\n        \"installation-source\": \"dist\",\n        \"autoload\": {\n            \"psr-4\": {\n                \"Webmozart\\\\Assert\\\\\": \"src/\"\n            }\n        },\n        \"notification-url\": \"https://packagist.org/downloads/\",\n        \"license\": [\n            \"MIT\"\n        ],\n        \"authors\": [\n            {\n                \"name\": \"Bernhard Schussek\",\n                \"email\": \"bschussek@gmail.com\"\n            }\n        ],\n        \"description\": \"Assertions to validate method input/output with nice error messages.\",\n        \"keywords\": [\n            \"assert\",\n            \"check\",\n            \"validate\"\n        ]\n    }\n]\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- vendor/composer/installed.json	(revision a449d8a584af7c2722ad0d48f553c0917ddead6e)
+++ vendor/composer/installed.json	(date 1606322377397)
@@ -481,17 +481,17 @@
     },
     {
         "name": "doctrine/dbal",
-        "version": "2.12.0",
-        "version_normalized": "2.12.0.0",
+        "version": "2.12.1",
+        "version_normalized": "2.12.1.0",
         "source": {
             "type": "git",
             "url": "https://github.com/doctrine/dbal.git",
-            "reference": "c6d37b4c42aaa3c3ee175f05eca68056f4185646"
+            "reference": "adce7a954a1c2f14f85e94aed90c8489af204086"
         },
         "dist": {
             "type": "zip",
-            "url": "https://api.github.com/repos/doctrine/dbal/zipball/c6d37b4c42aaa3c3ee175f05eca68056f4185646",
-            "reference": "c6d37b4c42aaa3c3ee175f05eca68056f4185646",
+            "url": "https://api.github.com/repos/doctrine/dbal/zipball/adce7a954a1c2f14f85e94aed90c8489af204086",
+            "reference": "adce7a954a1c2f14f85e94aed90c8489af204086",
             "shasum": ""
         },
         "require": {
@@ -512,7 +512,7 @@
         "suggest": {
             "symfony/console": "For helpful console commands such as SQL execution and import of files."
         },
-        "time": "2020-10-22T17:26:24+00:00",
+        "time": "2020-11-14T20:26:58+00:00",
         "bin": [
             "bin/doctrine-dbal"
         ],
@@ -1053,38 +1053,33 @@
     },
     {
         "name": "doctrine/instantiator",
-        "version": "1.3.1",
-        "version_normalized": "1.3.1.0",
+        "version": "1.4.0",
+        "version_normalized": "1.4.0.0",
         "source": {
             "type": "git",
             "url": "https://github.com/doctrine/instantiator.git",
-            "reference": "f350df0268e904597e3bd9c4685c53e0e333feea"
+            "reference": "d56bf6102915de5702778fe20f2de3b2fe570b5b"
         },
         "dist": {
             "type": "zip",
-            "url": "https://api.github.com/repos/doctrine/instantiator/zipball/f350df0268e904597e3bd9c4685c53e0e333feea",
-            "reference": "f350df0268e904597e3bd9c4685c53e0e333feea",
+            "url": "https://api.github.com/repos/doctrine/instantiator/zipball/d56bf6102915de5702778fe20f2de3b2fe570b5b",
+            "reference": "d56bf6102915de5702778fe20f2de3b2fe570b5b",
             "shasum": ""
         },
         "require": {
             "php": "^7.1 || ^8.0"
         },
         "require-dev": {
-            "doctrine/coding-standard": "^6.0",
+            "doctrine/coding-standard": "^8.0",
             "ext-pdo": "*",
             "ext-phar": "*",
-            "phpbench/phpbench": "^0.13",
-            "phpstan/phpstan-phpunit": "^0.11",
-            "phpstan/phpstan-shim": "^0.11",
-            "phpunit/phpunit": "^7.0"
+            "phpbench/phpbench": "^0.13 || 1.0.0-alpha2",
+            "phpstan/phpstan": "^0.12",
+            "phpstan/phpstan-phpunit": "^0.12",
+            "phpunit/phpunit": "^7.0 || ^8.0 || ^9.0"
         },
-        "time": "2020-05-29T17:27:14+00:00",
+        "time": "2020-11-10T18:47:58+00:00",
         "type": "library",
-        "extra": {
-            "branch-alias": {
-                "dev-master": "1.2.x-dev"
-            }
-        },
         "installation-source": "dist",
         "autoload": {
             "psr-4": {
@@ -1099,7 +1094,7 @@
             {
                 "name": "Marco Pivetta",
                 "email": "ocramius@gmail.com",
-                "homepage": "http://ocramius.github.com/"
+                "homepage": "https://ocramius.github.io/"
             }
         ],
         "description": "A small, lightweight utility to instantiate objects in PHP without invoking their constructors",
@@ -1531,17 +1526,17 @@
     },
     {
         "name": "egulias/email-validator",
-        "version": "2.1.23",
-        "version_normalized": "2.1.23.0",
+        "version": "2.1.24",
+        "version_normalized": "2.1.24.0",
         "source": {
             "type": "git",
             "url": "https://github.com/egulias/EmailValidator.git",
-            "reference": "5fa792ad1853ae2bc60528dd3e5cbf4542d3c1df"
+            "reference": "ca90a3291eee1538cd48ff25163240695bd95448"
         },
         "dist": {
             "type": "zip",
-            "url": "https://api.github.com/repos/egulias/EmailValidator/zipball/5fa792ad1853ae2bc60528dd3e5cbf4542d3c1df",
-            "reference": "5fa792ad1853ae2bc60528dd3e5cbf4542d3c1df",
+            "url": "https://api.github.com/repos/egulias/EmailValidator/zipball/ca90a3291eee1538cd48ff25163240695bd95448",
+            "reference": "ca90a3291eee1538cd48ff25163240695bd95448",
             "shasum": ""
         },
         "require": {
@@ -1557,7 +1552,7 @@
         "suggest": {
             "ext-intl": "PHP Internationalization Libraries are required to use the SpoofChecking validation"
         },
-        "time": "2020-10-31T20:37:35+00:00",
+        "time": "2020-11-14T15:56:27+00:00",
         "type": "library",
         "extra": {
             "branch-alias": {
@@ -1587,6 +1582,12 @@
             "emailvalidator",
             "validation",
             "validator"
+        ],
+        "funding": [
+            {
+                "url": "https://github.com/egulias",
+                "type": "github"
+            }
         ]
     },
     {
@@ -2029,22 +2030,22 @@
     },
     {
         "name": "knpuniversity/oauth2-client-bundle",
-        "version": "v2.5.1",
-        "version_normalized": "2.5.1.0",
+        "version": "v2.6.0",
+        "version_normalized": "2.6.0.0",
         "source": {
             "type": "git",
             "url": "https://github.com/knpuniversity/oauth2-client-bundle.git",
-            "reference": "5e5919bf321f76121df93c55fdbf82a0c481bd5f"
+            "reference": "a17cf5b059e8d67ef54a94ea277816a5d1810f90"
         },
         "dist": {
             "type": "zip",
-            "url": "https://api.github.com/repos/knpuniversity/oauth2-client-bundle/zipball/5e5919bf321f76121df93c55fdbf82a0c481bd5f",
-            "reference": "5e5919bf321f76121df93c55fdbf82a0c481bd5f",
+            "url": "https://api.github.com/repos/knpuniversity/oauth2-client-bundle/zipball/a17cf5b059e8d67ef54a94ea277816a5d1810f90",
+            "reference": "a17cf5b059e8d67ef54a94ea277816a5d1810f90",
             "shasum": ""
         },
         "require": {
             "league/oauth2-client": "^1.0|^2.0",
-            "php": "^7.1.3",
+            "php": ">=7.1.3",
             "symfony/dependency-injection": "^4.4|^5.0",
             "symfony/framework-bundle": "^4.4|^5.0",
             "symfony/http-foundation": "^4.4|^5.0",
@@ -2061,7 +2062,7 @@
         "suggest": {
             "symfony/security-guard": "For integration with Symfony's Guard Security layer"
         },
-        "time": "2020-11-21T16:21:33+00:00",
+        "time": "2020-11-25T14:03:26+00:00",
         "type": "symfony-bundle",
         "installation-source": "dist",
         "autoload": {
@@ -2088,50 +2089,43 @@
     },
     {
         "name": "laminas/laminas-code",
-        "version": "3.4.1",
-        "version_normalized": "3.4.1.0",
+        "version": "3.5.0",
+        "version_normalized": "3.5.0.0",
         "source": {
             "type": "git",
             "url": "https://github.com/laminas/laminas-code.git",
-            "reference": "1cb8f203389ab1482bf89c0e70a04849bacd7766"
+            "reference": "cb90ef428da9260c2deaa827b037c20695f968ae"
         },
         "dist": {
             "type": "zip",
-            "url": "https://api.github.com/repos/laminas/laminas-code/zipball/1cb8f203389ab1482bf89c0e70a04849bacd7766",
-            "reference": "1cb8f203389ab1482bf89c0e70a04849bacd7766",
+            "url": "https://api.github.com/repos/laminas/laminas-code/zipball/cb90ef428da9260c2deaa827b037c20695f968ae",
+            "reference": "cb90ef428da9260c2deaa827b037c20695f968ae",
             "shasum": ""
         },
         "require": {
-            "laminas/laminas-eventmanager": "^2.6 || ^3.0",
-            "laminas/laminas-zendframework-bridge": "^1.0",
-            "php": "^7.1"
+            "laminas/laminas-eventmanager": "^3.3",
+            "laminas/laminas-zendframework-bridge": "^1.1",
+            "php": "^7.3 || ~8.0.0"
         },
         "conflict": {
             "phpspec/prophecy": "<1.9.0"
         },
         "replace": {
-            "zendframework/zend-code": "self.version"
+            "zendframework/zend-code": "^3.4.1"
         },
         "require-dev": {
-            "doctrine/annotations": "^1.7",
+            "doctrine/annotations": "^1.10.4",
             "ext-phar": "*",
-            "laminas/laminas-coding-standard": "^1.0",
-            "laminas/laminas-stdlib": "^2.7 || ^3.0",
-            "phpunit/phpunit": "^7.5.16 || ^8.4"
+            "laminas/laminas-coding-standard": "^1.0.0",
+            "laminas/laminas-stdlib": "^3.3.0",
+            "phpunit/phpunit": "^9.4.2"
         },
         "suggest": {
             "doctrine/annotations": "Doctrine\\Common\\Annotations >=1.0 for annotation features",
             "laminas/laminas-stdlib": "Laminas\\Stdlib component"
         },
-        "time": "2019-12-31T16:28:24+00:00",
+        "time": "2020-11-11T22:11:27+00:00",
         "type": "library",
-        "extra": {
-            "branch-alias": {
-                "dev-master": "3.4.x-dev",
-                "dev-develop": "3.5.x-dev",
-                "dev-dev-4.0": "4.0.x-dev"
-            }
-        },
         "installation-source": "dist",
         "autoload": {
             "psr-4": {
@@ -2147,6 +2141,12 @@
         "keywords": [
             "code",
             "laminas"
+        ],
+        "funding": [
+            {
+                "url": "https://funding.communitybridge.org/projects/laminas-project",
+                "type": "community_bridge"
+            }
         ]
     },
     {
Index: vendor/doctrine/instantiator/src/Doctrine/Instantiator/Exception/UnexpectedValueException.php
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?php\n\nnamespace Doctrine\\Instantiator\\Exception;\n\nuse Exception;\nuse ReflectionClass;\nuse UnexpectedValueException as BaseUnexpectedValueException;\nuse function sprintf;\n\n/**\n * Exception for given parameters causing invalid/unexpected state on instantiation\n */\nclass UnexpectedValueException extends BaseUnexpectedValueException implements ExceptionInterface\n{\n    public static function fromSerializationTriggeredException(\n        ReflectionClass $reflectionClass,\n        Exception $exception\n    ) : self {\n        return new self(\n            sprintf(\n                'An exception was raised while trying to instantiate an instance of \"%s\" via un-serialization',\n                $reflectionClass->getName()\n            ),\n            0,\n            $exception\n        );\n    }\n\n    public static function fromUncleanUnSerialization(\n        ReflectionClass $reflectionClass,\n        string $errorString,\n        int $errorCode,\n        string $errorFile,\n        int $errorLine\n    ) : self {\n        return new self(\n            sprintf(\n                'Could not produce an instance of \"%s\" via un-serialization, since an error was triggered '\n                . 'in file \"%s\" at line \"%d\"',\n                $reflectionClass->getName(),\n                $errorFile,\n                $errorLine\n            ),\n            0,\n            new Exception($errorString, $errorCode)\n        );\n    }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- vendor/doctrine/instantiator/src/Doctrine/Instantiator/Exception/UnexpectedValueException.php	(revision a449d8a584af7c2722ad0d48f553c0917ddead6e)
+++ vendor/doctrine/instantiator/src/Doctrine/Instantiator/Exception/UnexpectedValueException.php	(date 1605034078000)
@@ -5,6 +5,7 @@
 use Exception;
 use ReflectionClass;
 use UnexpectedValueException as BaseUnexpectedValueException;
+
 use function sprintf;
 
 /**
@@ -12,10 +13,14 @@
  */
 class UnexpectedValueException extends BaseUnexpectedValueException implements ExceptionInterface
 {
+    /**
+     * @template T of object
+     * @phpstan-param ReflectionClass<T> $reflectionClass
+     */
     public static function fromSerializationTriggeredException(
         ReflectionClass $reflectionClass,
         Exception $exception
-    ) : self {
+    ): self {
         return new self(
             sprintf(
                 'An exception was raised while trying to instantiate an instance of "%s" via un-serialization',
@@ -26,13 +31,17 @@
         );
     }
 
+    /**
+     * @template T of object
+     * @phpstan-param ReflectionClass<T> $reflectionClass
+     */
     public static function fromUncleanUnSerialization(
         ReflectionClass $reflectionClass,
         string $errorString,
         int $errorCode,
         string $errorFile,
         int $errorLine
-    ) : self {
+    ): self {
         return new self(
             sprintf(
                 'Could not produce an instance of "%s" via un-serialization, since an error was triggered '
Index: vendor/doctrine/dbal/lib/Doctrine/DBAL/Cache/ResultCacheStatement.php
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?php\n\nnamespace Doctrine\\DBAL\\Cache;\n\nuse ArrayIterator;\nuse Doctrine\\Common\\Cache\\Cache;\nuse Doctrine\\DBAL\\Driver\\Exception;\nuse Doctrine\\DBAL\\Driver\\FetchUtils;\nuse Doctrine\\DBAL\\Driver\\Result;\nuse Doctrine\\DBAL\\Driver\\ResultStatement;\nuse Doctrine\\DBAL\\Driver\\Statement;\nuse Doctrine\\DBAL\\FetchMode;\nuse InvalidArgumentException;\nuse IteratorAggregate;\nuse PDO;\n\nuse function array_map;\nuse function array_merge;\nuse function array_values;\nuse function assert;\nuse function reset;\n\n/**\n * Cache statement for SQL results.\n *\n * A result is saved in multiple cache keys, there is the originally specified\n * cache key which is just pointing to result rows by key. The following things\n * have to be ensured:\n *\n * 1. lifetime of the original key has to be longer than that of all the individual rows keys\n * 2. if any one row key is missing the query has to be re-executed.\n *\n * Also you have to realize that the cache will load the whole result into memory at once to ensure 2.\n * This means that the memory usage for cached results might increase by using this feature.\n *\n * @deprecated\n */\nclass ResultCacheStatement implements IteratorAggregate, ResultStatement, Result\n{\n    /** @var Cache */\n    private $resultCache;\n\n    /** @var string */\n    private $cacheKey;\n\n    /** @var string */\n    private $realKey;\n\n    /** @var int */\n    private $lifetime;\n\n    /** @var ResultStatement */\n    private $statement;\n\n    /** @var array<int,array<string,mixed>>|null */\n    private $data;\n\n    /** @var int */\n    private $defaultFetchMode = FetchMode::MIXED;\n\n    /**\n     * @param string $cacheKey\n     * @param string $realKey\n     * @param int    $lifetime\n     */\n    public function __construct(ResultStatement $stmt, Cache $resultCache, $cacheKey, $realKey, $lifetime)\n    {\n        $this->statement   = $stmt;\n        $this->resultCache = $resultCache;\n        $this->cacheKey    = $cacheKey;\n        $this->realKey     = $realKey;\n        $this->lifetime    = $lifetime;\n    }\n\n    /**\n     * {@inheritdoc}\n     *\n     * @deprecated Use free() instead.\n     */\n    public function closeCursor()\n    {\n        $this->free();\n\n        return true;\n    }\n\n    /**\n     * {@inheritdoc}\n     */\n    public function columnCount()\n    {\n        return $this->statement->columnCount();\n    }\n\n    /**\n     * {@inheritdoc}\n     *\n     * @deprecated Use one of the fetch- or iterate-related methods.\n     */\n    public function setFetchMode($fetchMode, $arg2 = null, $arg3 = null)\n    {\n        $this->defaultFetchMode = $fetchMode;\n\n        return true;\n    }\n\n    /**\n     * {@inheritdoc}\n     *\n     * @deprecated Use iterateNumeric(), iterateAssociative() or iterateColumn() instead.\n     */\n    public function getIterator()\n    {\n        $data = $this->fetchAll();\n\n        return new ArrayIterator($data);\n    }\n\n    /**\n     * {@inheritdoc}\n     *\n     * @deprecated Use fetchNumeric(), fetchAssociative() or fetchOne() instead.\n     */\n    public function fetch($fetchMode = null, $cursorOrientation = PDO::FETCH_ORI_NEXT, $cursorOffset = 0)\n    {\n        if ($this->data === null) {\n            $this->data = [];\n        }\n\n        $row = $this->statement->fetch(FetchMode::ASSOCIATIVE);\n\n        if ($row) {\n            $this->data[] = $row;\n\n            $fetchMode = $fetchMode ?: $this->defaultFetchMode;\n\n            if ($fetchMode === FetchMode::ASSOCIATIVE) {\n                return $row;\n            }\n\n            if ($fetchMode === FetchMode::NUMERIC) {\n                return array_values($row);\n            }\n\n            if ($fetchMode === FetchMode::MIXED) {\n                return array_merge($row, array_values($row));\n            }\n\n            if ($fetchMode === FetchMode::COLUMN) {\n                return reset($row);\n            }\n\n            throw new InvalidArgumentException('Invalid fetch-style given for caching result.');\n        }\n\n        $this->saveToCache();\n\n        return false;\n    }\n\n    /**\n     * {@inheritdoc}\n     *\n     * @deprecated Use fetchAllNumeric(), fetchAllAssociative() or fetchFirstColumn() instead.\n     */\n    public function fetchAll($fetchMode = null, $fetchArgument = null, $ctorArgs = null)\n    {\n        $data = $this->statement->fetchAll(FetchMode::ASSOCIATIVE, $fetchArgument, $ctorArgs);\n\n        $this->data = $data;\n\n        $this->saveToCache();\n\n        if ($fetchMode === FetchMode::NUMERIC) {\n            foreach ($data as $i => $row) {\n                $data[$i] = array_values($row);\n            }\n        } elseif ($fetchMode === FetchMode::MIXED) {\n            foreach ($data as $i => $row) {\n                $data[$i] = array_merge($row, array_values($row));\n            }\n        } elseif ($fetchMode === FetchMode::COLUMN) {\n            foreach ($data as $i => $row) {\n                $data[$i] = reset($row);\n            }\n        }\n\n        return $data;\n    }\n\n    /**\n     * {@inheritdoc}\n     *\n     * @deprecated Use fetchOne() instead.\n     */\n    public function fetchColumn($columnIndex = 0)\n    {\n        $row = $this->fetch(FetchMode::NUMERIC);\n\n        // TODO: verify that return false is the correct behavior\n        return $row[$columnIndex] ?? false;\n    }\n\n    /**\n     * {@inheritdoc}\n     */\n    public function fetchNumeric()\n    {\n        $row = $this->doFetch();\n\n        if ($row === false) {\n            return false;\n        }\n\n        return array_values($row);\n    }\n\n    /**\n     * {@inheritdoc}\n     */\n    public function fetchAssociative()\n    {\n        return $this->doFetch();\n    }\n\n    /**\n     * {@inheritdoc}\n     */\n    public function fetchOne()\n    {\n        return FetchUtils::fetchOne($this);\n    }\n\n    /**\n     * {@inheritdoc}\n     */\n    public function fetchAllNumeric(): array\n    {\n        if ($this->statement instanceof Result) {\n            $data = $this->statement->fetchAllAssociative();\n        } else {\n            $data = $this->statement->fetchAll(FetchMode::ASSOCIATIVE);\n        }\n\n        $this->store($data);\n\n        return array_map('array_values', $data);\n    }\n\n    /**\n     * {@inheritdoc}\n     */\n    public function fetchAllAssociative(): array\n    {\n        if ($this->statement instanceof Result) {\n            $data = $this->statement->fetchAllAssociative();\n        } else {\n            $data = $this->statement->fetchAll(FetchMode::ASSOCIATIVE);\n        }\n\n        $this->store($data);\n\n        return $data;\n    }\n\n    /**\n     * {@inheritdoc}\n     */\n    public function fetchFirstColumn(): array\n    {\n        return FetchUtils::fetchFirstColumn($this);\n    }\n\n    /**\n     * Returns the number of rows affected by the last DELETE, INSERT, or UPDATE statement\n     * executed by the corresponding object.\n     *\n     * If the last SQL statement executed by the associated Statement object was a SELECT statement,\n     * some databases may return the number of rows returned by that statement. However,\n     * this behaviour is not guaranteed for all databases and should not be\n     * relied on for portable applications.\n     *\n     * @return int The number of rows.\n     */\n    public function rowCount()\n    {\n        assert($this->statement instanceof Statement);\n\n        return $this->statement->rowCount();\n    }\n\n    public function free(): void\n    {\n        $this->data = null;\n    }\n\n    /**\n     * @return array<string,mixed>|false\n     *\n     * @throws Exception\n     */\n    private function doFetch()\n    {\n        if ($this->data === null) {\n            $this->data = [];\n        }\n\n        if ($this->statement instanceof Result) {\n            $row = $this->statement->fetchAssociative();\n        } else {\n            $row = $this->statement->fetch(FetchMode::ASSOCIATIVE);\n        }\n\n        if ($row !== false) {\n            $this->data[] = $row;\n\n            return $row;\n        }\n\n        $this->saveToCache();\n\n        return false;\n    }\n\n    /**\n     * @param array<int,array<string,mixed>> $data\n     */\n    private function store(array $data): void\n    {\n        $this->data = $data;\n    }\n\n    private function saveToCache(): void\n    {\n        if ($this->data === null) {\n            return;\n        }\n\n        $data = $this->resultCache->fetch($this->cacheKey);\n        if (! $data) {\n            $data = [];\n        }\n\n        $data[$this->realKey] = $this->data;\n\n        $this->resultCache->save($this->cacheKey, $data, $this->lifetime);\n    }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- vendor/doctrine/dbal/lib/Doctrine/DBAL/Cache/ResultCacheStatement.php	(revision a449d8a584af7c2722ad0d48f553c0917ddead6e)
+++ vendor/doctrine/dbal/lib/Doctrine/DBAL/Cache/ResultCacheStatement.php	(date 1605385618000)
@@ -242,7 +242,9 @@
             $data = $this->statement->fetchAll(FetchMode::ASSOCIATIVE);
         }
 
-        $this->store($data);
+        $this->data = $data;
+
+        $this->saveToCache();
 
         return array_map('array_values', $data);
     }
@@ -258,7 +260,9 @@
             $data = $this->statement->fetchAll(FetchMode::ASSOCIATIVE);
         }
 
-        $this->store($data);
+        $this->data = $data;
+
+        $this->saveToCache();
 
         return $data;
     }
@@ -322,14 +326,6 @@
         return false;
     }
 
-    /**
-     * @param array<int,array<string,mixed>> $data
-     */
-    private function store(array $data): void
-    {
-        $this->data = $data;
-    }
-
     private function saveToCache(): void
     {
         if ($this->data === null) {
